digraph {
	compound = "true"
	newrank = "true"
	subgraph "root" {
		"[root] module.lambda_function_from_package.aws_cloudwatch_log_group.lambda (expand)" [label = "module.lambda_function_from_package.aws_cloudwatch_log_group.lambda", shape = "box"]
		"[root] module.lambda_function_from_package.aws_iam_policy.additional_inline (expand)" [label = "module.lambda_function_from_package.aws_iam_policy.additional_inline", shape = "box"]
		"[root] module.lambda_function_from_package.aws_iam_policy.additional_json (expand)" [label = "module.lambda_function_from_package.aws_iam_policy.additional_json", shape = "box"]
		"[root] module.lambda_function_from_package.aws_iam_policy.additional_jsons (expand)" [label = "module.lambda_function_from_package.aws_iam_policy.additional_jsons", shape = "box"]
		"[root] module.lambda_function_from_package.aws_iam_policy.async (expand)" [label = "module.lambda_function_from_package.aws_iam_policy.async", shape = "box"]
		"[root] module.lambda_function_from_package.aws_iam_policy.dead_letter (expand)" [label = "module.lambda_function_from_package.aws_iam_policy.dead_letter", shape = "box"]
		"[root] module.lambda_function_from_package.aws_iam_policy.logs (expand)" [label = "module.lambda_function_from_package.aws_iam_policy.logs", shape = "box"]
		"[root] module.lambda_function_from_package.aws_iam_policy.tracing (expand)" [label = "module.lambda_function_from_package.aws_iam_policy.tracing", shape = "box"]
		"[root] module.lambda_function_from_package.aws_iam_policy.vpc (expand)" [label = "module.lambda_function_from_package.aws_iam_policy.vpc", shape = "box"]
		"[root] module.lambda_function_from_package.aws_iam_role.lambda (expand)" [label = "module.lambda_function_from_package.aws_iam_role.lambda", shape = "box"]
		"[root] module.lambda_function_from_package.aws_iam_role_policy_attachment.additional_inline (expand)" [label = "module.lambda_function_from_package.aws_iam_role_policy_attachment.additional_inline", shape = "box"]
		"[root] module.lambda_function_from_package.aws_iam_role_policy_attachment.additional_json (expand)" [label = "module.lambda_function_from_package.aws_iam_role_policy_attachment.additional_json", shape = "box"]
		"[root] module.lambda_function_from_package.aws_iam_role_policy_attachment.additional_jsons (expand)" [label = "module.lambda_function_from_package.aws_iam_role_policy_attachment.additional_jsons", shape = "box"]
		"[root] module.lambda_function_from_package.aws_iam_role_policy_attachment.additional_many (expand)" [label = "module.lambda_function_from_package.aws_iam_role_policy_attachment.additional_many", shape = "box"]
		"[root] module.lambda_function_from_package.aws_iam_role_policy_attachment.additional_one (expand)" [label = "module.lambda_function_from_package.aws_iam_role_policy_attachment.additional_one", shape = "box"]
		"[root] module.lambda_function_from_package.aws_iam_role_policy_attachment.async (expand)" [label = "module.lambda_function_from_package.aws_iam_role_policy_attachment.async", shape = "box"]
		"[root] module.lambda_function_from_package.aws_iam_role_policy_attachment.dead_letter (expand)" [label = "module.lambda_function_from_package.aws_iam_role_policy_attachment.dead_letter", shape = "box"]
		"[root] module.lambda_function_from_package.aws_iam_role_policy_attachment.logs (expand)" [label = "module.lambda_function_from_package.aws_iam_role_policy_attachment.logs", shape = "box"]
		"[root] module.lambda_function_from_package.aws_iam_role_policy_attachment.tracing (expand)" [label = "module.lambda_function_from_package.aws_iam_role_policy_attachment.tracing", shape = "box"]
		"[root] module.lambda_function_from_package.aws_iam_role_policy_attachment.vpc (expand)" [label = "module.lambda_function_from_package.aws_iam_role_policy_attachment.vpc", shape = "box"]
		"[root] module.lambda_function_from_package.aws_lambda_event_source_mapping.this (expand)" [label = "module.lambda_function_from_package.aws_lambda_event_source_mapping.this", shape = "box"]
		"[root] module.lambda_function_from_package.aws_lambda_function.this (expand)" [label = "module.lambda_function_from_package.aws_lambda_function.this", shape = "box"]
		"[root] module.lambda_function_from_package.aws_lambda_function_event_invoke_config.this (expand)" [label = "module.lambda_function_from_package.aws_lambda_function_event_invoke_config.this", shape = "box"]
		"[root] module.lambda_function_from_package.aws_lambda_layer_version.this (expand)" [label = "module.lambda_function_from_package.aws_lambda_layer_version.this", shape = "box"]
		"[root] module.lambda_function_from_package.aws_lambda_permission.current_version_triggers (expand)" [label = "module.lambda_function_from_package.aws_lambda_permission.current_version_triggers", shape = "box"]
		"[root] module.lambda_function_from_package.aws_lambda_permission.unqualified_alias_triggers (expand)" [label = "module.lambda_function_from_package.aws_lambda_permission.unqualified_alias_triggers", shape = "box"]
		"[root] module.lambda_function_from_package.aws_lambda_provisioned_concurrency_config.current_version (expand)" [label = "module.lambda_function_from_package.aws_lambda_provisioned_concurrency_config.current_version", shape = "box"]
		"[root] module.lambda_function_from_package.aws_s3_bucket_object.lambda_package (expand)" [label = "module.lambda_function_from_package.aws_s3_bucket_object.lambda_package", shape = "box"]
		"[root] module.lambda_function_from_package.data.aws_arn.log_group_arn (expand)" [label = "module.lambda_function_from_package.data.aws_arn.log_group_arn", shape = "box"]
		"[root] module.lambda_function_from_package.data.aws_cloudwatch_log_group.lambda (expand)" [label = "module.lambda_function_from_package.data.aws_cloudwatch_log_group.lambda", shape = "box"]
		"[root] module.lambda_function_from_package.data.aws_iam_policy.tracing (expand)" [label = "module.lambda_function_from_package.data.aws_iam_policy.tracing", shape = "box"]
		"[root] module.lambda_function_from_package.data.aws_iam_policy.vpc (expand)" [label = "module.lambda_function_from_package.data.aws_iam_policy.vpc", shape = "box"]
		"[root] module.lambda_function_from_package.data.aws_iam_policy_document.additional_inline (expand)" [label = "module.lambda_function_from_package.data.aws_iam_policy_document.additional_inline", shape = "box"]
		"[root] module.lambda_function_from_package.data.aws_iam_policy_document.assume_role (expand)" [label = "module.lambda_function_from_package.data.aws_iam_policy_document.assume_role", shape = "box"]
		"[root] module.lambda_function_from_package.data.aws_iam_policy_document.async (expand)" [label = "module.lambda_function_from_package.data.aws_iam_policy_document.async", shape = "box"]
		"[root] module.lambda_function_from_package.data.aws_iam_policy_document.dead_letter (expand)" [label = "module.lambda_function_from_package.data.aws_iam_policy_document.dead_letter", shape = "box"]
		"[root] module.lambda_function_from_package.data.aws_iam_policy_document.logs (expand)" [label = "module.lambda_function_from_package.data.aws_iam_policy_document.logs", shape = "box"]
		"[root] module.lambda_function_from_package.data.aws_partition.current (expand)" [label = "module.lambda_function_from_package.data.aws_partition.current", shape = "box"]
		"[root] module.lambda_function_from_package.data.external.archive_prepare (expand)" [label = "module.lambda_function_from_package.data.external.archive_prepare", shape = "box"]
		"[root] module.lambda_function_from_package.local_file.archive_plan (expand)" [label = "module.lambda_function_from_package.local_file.archive_plan", shape = "box"]
		"[root] module.lambda_function_from_package.null_resource.archive (expand)" [label = "module.lambda_function_from_package.null_resource.archive", shape = "box"]
		"[root] module.lambda_layer.aws_cloudwatch_log_group.lambda (expand)" [label = "module.lambda_layer.aws_cloudwatch_log_group.lambda", shape = "box"]
		"[root] module.lambda_layer.aws_iam_policy.additional_inline (expand)" [label = "module.lambda_layer.aws_iam_policy.additional_inline", shape = "box"]
		"[root] module.lambda_layer.aws_iam_policy.additional_json (expand)" [label = "module.lambda_layer.aws_iam_policy.additional_json", shape = "box"]
		"[root] module.lambda_layer.aws_iam_policy.additional_jsons (expand)" [label = "module.lambda_layer.aws_iam_policy.additional_jsons", shape = "box"]
		"[root] module.lambda_layer.aws_iam_policy.async (expand)" [label = "module.lambda_layer.aws_iam_policy.async", shape = "box"]
		"[root] module.lambda_layer.aws_iam_policy.dead_letter (expand)" [label = "module.lambda_layer.aws_iam_policy.dead_letter", shape = "box"]
		"[root] module.lambda_layer.aws_iam_policy.logs (expand)" [label = "module.lambda_layer.aws_iam_policy.logs", shape = "box"]
		"[root] module.lambda_layer.aws_iam_policy.tracing (expand)" [label = "module.lambda_layer.aws_iam_policy.tracing", shape = "box"]
		"[root] module.lambda_layer.aws_iam_policy.vpc (expand)" [label = "module.lambda_layer.aws_iam_policy.vpc", shape = "box"]
		"[root] module.lambda_layer.aws_iam_role.lambda (expand)" [label = "module.lambda_layer.aws_iam_role.lambda", shape = "box"]
		"[root] module.lambda_layer.aws_iam_role_policy_attachment.additional_inline (expand)" [label = "module.lambda_layer.aws_iam_role_policy_attachment.additional_inline", shape = "box"]
		"[root] module.lambda_layer.aws_iam_role_policy_attachment.additional_json (expand)" [label = "module.lambda_layer.aws_iam_role_policy_attachment.additional_json", shape = "box"]
		"[root] module.lambda_layer.aws_iam_role_policy_attachment.additional_jsons (expand)" [label = "module.lambda_layer.aws_iam_role_policy_attachment.additional_jsons", shape = "box"]
		"[root] module.lambda_layer.aws_iam_role_policy_attachment.additional_many (expand)" [label = "module.lambda_layer.aws_iam_role_policy_attachment.additional_many", shape = "box"]
		"[root] module.lambda_layer.aws_iam_role_policy_attachment.additional_one (expand)" [label = "module.lambda_layer.aws_iam_role_policy_attachment.additional_one", shape = "box"]
		"[root] module.lambda_layer.aws_iam_role_policy_attachment.async (expand)" [label = "module.lambda_layer.aws_iam_role_policy_attachment.async", shape = "box"]
		"[root] module.lambda_layer.aws_iam_role_policy_attachment.dead_letter (expand)" [label = "module.lambda_layer.aws_iam_role_policy_attachment.dead_letter", shape = "box"]
		"[root] module.lambda_layer.aws_iam_role_policy_attachment.logs (expand)" [label = "module.lambda_layer.aws_iam_role_policy_attachment.logs", shape = "box"]
		"[root] module.lambda_layer.aws_iam_role_policy_attachment.tracing (expand)" [label = "module.lambda_layer.aws_iam_role_policy_attachment.tracing", shape = "box"]
		"[root] module.lambda_layer.aws_iam_role_policy_attachment.vpc (expand)" [label = "module.lambda_layer.aws_iam_role_policy_attachment.vpc", shape = "box"]
		"[root] module.lambda_layer.aws_lambda_event_source_mapping.this (expand)" [label = "module.lambda_layer.aws_lambda_event_source_mapping.this", shape = "box"]
		"[root] module.lambda_layer.aws_lambda_function.this (expand)" [label = "module.lambda_layer.aws_lambda_function.this", shape = "box"]
		"[root] module.lambda_layer.aws_lambda_function_event_invoke_config.this (expand)" [label = "module.lambda_layer.aws_lambda_function_event_invoke_config.this", shape = "box"]
		"[root] module.lambda_layer.aws_lambda_layer_version.this (expand)" [label = "module.lambda_layer.aws_lambda_layer_version.this", shape = "box"]
		"[root] module.lambda_layer.aws_lambda_permission.current_version_triggers (expand)" [label = "module.lambda_layer.aws_lambda_permission.current_version_triggers", shape = "box"]
		"[root] module.lambda_layer.aws_lambda_permission.unqualified_alias_triggers (expand)" [label = "module.lambda_layer.aws_lambda_permission.unqualified_alias_triggers", shape = "box"]
		"[root] module.lambda_layer.aws_lambda_provisioned_concurrency_config.current_version (expand)" [label = "module.lambda_layer.aws_lambda_provisioned_concurrency_config.current_version", shape = "box"]
		"[root] module.lambda_layer.aws_s3_bucket_object.lambda_package (expand)" [label = "module.lambda_layer.aws_s3_bucket_object.lambda_package", shape = "box"]
		"[root] module.lambda_layer.data.aws_arn.log_group_arn (expand)" [label = "module.lambda_layer.data.aws_arn.log_group_arn", shape = "box"]
		"[root] module.lambda_layer.data.aws_cloudwatch_log_group.lambda (expand)" [label = "module.lambda_layer.data.aws_cloudwatch_log_group.lambda", shape = "box"]
		"[root] module.lambda_layer.data.aws_iam_policy.tracing (expand)" [label = "module.lambda_layer.data.aws_iam_policy.tracing", shape = "box"]
		"[root] module.lambda_layer.data.aws_iam_policy.vpc (expand)" [label = "module.lambda_layer.data.aws_iam_policy.vpc", shape = "box"]
		"[root] module.lambda_layer.data.aws_iam_policy_document.additional_inline (expand)" [label = "module.lambda_layer.data.aws_iam_policy_document.additional_inline", shape = "box"]
		"[root] module.lambda_layer.data.aws_iam_policy_document.assume_role (expand)" [label = "module.lambda_layer.data.aws_iam_policy_document.assume_role", shape = "box"]
		"[root] module.lambda_layer.data.aws_iam_policy_document.async (expand)" [label = "module.lambda_layer.data.aws_iam_policy_document.async", shape = "box"]
		"[root] module.lambda_layer.data.aws_iam_policy_document.dead_letter (expand)" [label = "module.lambda_layer.data.aws_iam_policy_document.dead_letter", shape = "box"]
		"[root] module.lambda_layer.data.aws_iam_policy_document.logs (expand)" [label = "module.lambda_layer.data.aws_iam_policy_document.logs", shape = "box"]
		"[root] module.lambda_layer.data.aws_partition.current (expand)" [label = "module.lambda_layer.data.aws_partition.current", shape = "box"]
		"[root] module.lambda_layer.data.external.archive_prepare (expand)" [label = "module.lambda_layer.data.external.archive_prepare", shape = "box"]
		"[root] module.lambda_layer.local_file.archive_plan (expand)" [label = "module.lambda_layer.local_file.archive_plan", shape = "box"]
		"[root] module.lambda_layer.null_resource.archive (expand)" [label = "module.lambda_layer.null_resource.archive", shape = "box"]
		"[root] module.lambda_layer_pip_requirements.aws_cloudwatch_log_group.lambda (expand)" [label = "module.lambda_layer_pip_requirements.aws_cloudwatch_log_group.lambda", shape = "box"]
		"[root] module.lambda_layer_pip_requirements.aws_iam_policy.additional_inline (expand)" [label = "module.lambda_layer_pip_requirements.aws_iam_policy.additional_inline", shape = "box"]
		"[root] module.lambda_layer_pip_requirements.aws_iam_policy.additional_json (expand)" [label = "module.lambda_layer_pip_requirements.aws_iam_policy.additional_json", shape = "box"]
		"[root] module.lambda_layer_pip_requirements.aws_iam_policy.additional_jsons (expand)" [label = "module.lambda_layer_pip_requirements.aws_iam_policy.additional_jsons", shape = "box"]
		"[root] module.lambda_layer_pip_requirements.aws_iam_policy.async (expand)" [label = "module.lambda_layer_pip_requirements.aws_iam_policy.async", shape = "box"]
		"[root] module.lambda_layer_pip_requirements.aws_iam_policy.dead_letter (expand)" [label = "module.lambda_layer_pip_requirements.aws_iam_policy.dead_letter", shape = "box"]
		"[root] module.lambda_layer_pip_requirements.aws_iam_policy.logs (expand)" [label = "module.lambda_layer_pip_requirements.aws_iam_policy.logs", shape = "box"]
		"[root] module.lambda_layer_pip_requirements.aws_iam_policy.tracing (expand)" [label = "module.lambda_layer_pip_requirements.aws_iam_policy.tracing", shape = "box"]
		"[root] module.lambda_layer_pip_requirements.aws_iam_policy.vpc (expand)" [label = "module.lambda_layer_pip_requirements.aws_iam_policy.vpc", shape = "box"]
		"[root] module.lambda_layer_pip_requirements.aws_iam_role.lambda (expand)" [label = "module.lambda_layer_pip_requirements.aws_iam_role.lambda", shape = "box"]
		"[root] module.lambda_layer_pip_requirements.aws_iam_role_policy_attachment.additional_inline (expand)" [label = "module.lambda_layer_pip_requirements.aws_iam_role_policy_attachment.additional_inline", shape = "box"]
		"[root] module.lambda_layer_pip_requirements.aws_iam_role_policy_attachment.additional_json (expand)" [label = "module.lambda_layer_pip_requirements.aws_iam_role_policy_attachment.additional_json", shape = "box"]
		"[root] module.lambda_layer_pip_requirements.aws_iam_role_policy_attachment.additional_jsons (expand)" [label = "module.lambda_layer_pip_requirements.aws_iam_role_policy_attachment.additional_jsons", shape = "box"]
		"[root] module.lambda_layer_pip_requirements.aws_iam_role_policy_attachment.additional_many (expand)" [label = "module.lambda_layer_pip_requirements.aws_iam_role_policy_attachment.additional_many", shape = "box"]
		"[root] module.lambda_layer_pip_requirements.aws_iam_role_policy_attachment.additional_one (expand)" [label = "module.lambda_layer_pip_requirements.aws_iam_role_policy_attachment.additional_one", shape = "box"]
		"[root] module.lambda_layer_pip_requirements.aws_iam_role_policy_attachment.async (expand)" [label = "module.lambda_layer_pip_requirements.aws_iam_role_policy_attachment.async", shape = "box"]
		"[root] module.lambda_layer_pip_requirements.aws_iam_role_policy_attachment.dead_letter (expand)" [label = "module.lambda_layer_pip_requirements.aws_iam_role_policy_attachment.dead_letter", shape = "box"]
		"[root] module.lambda_layer_pip_requirements.aws_iam_role_policy_attachment.logs (expand)" [label = "module.lambda_layer_pip_requirements.aws_iam_role_policy_attachment.logs", shape = "box"]
		"[root] module.lambda_layer_pip_requirements.aws_iam_role_policy_attachment.tracing (expand)" [label = "module.lambda_layer_pip_requirements.aws_iam_role_policy_attachment.tracing", shape = "box"]
		"[root] module.lambda_layer_pip_requirements.aws_iam_role_policy_attachment.vpc (expand)" [label = "module.lambda_layer_pip_requirements.aws_iam_role_policy_attachment.vpc", shape = "box"]
		"[root] module.lambda_layer_pip_requirements.aws_lambda_event_source_mapping.this (expand)" [label = "module.lambda_layer_pip_requirements.aws_lambda_event_source_mapping.this", shape = "box"]
		"[root] module.lambda_layer_pip_requirements.aws_lambda_function.this (expand)" [label = "module.lambda_layer_pip_requirements.aws_lambda_function.this", shape = "box"]
		"[root] module.lambda_layer_pip_requirements.aws_lambda_function_event_invoke_config.this (expand)" [label = "module.lambda_layer_pip_requirements.aws_lambda_function_event_invoke_config.this", shape = "box"]
		"[root] module.lambda_layer_pip_requirements.aws_lambda_layer_version.this (expand)" [label = "module.lambda_layer_pip_requirements.aws_lambda_layer_version.this", shape = "box"]
		"[root] module.lambda_layer_pip_requirements.aws_lambda_permission.current_version_triggers (expand)" [label = "module.lambda_layer_pip_requirements.aws_lambda_permission.current_version_triggers", shape = "box"]
		"[root] module.lambda_layer_pip_requirements.aws_lambda_permission.unqualified_alias_triggers (expand)" [label = "module.lambda_layer_pip_requirements.aws_lambda_permission.unqualified_alias_triggers", shape = "box"]
		"[root] module.lambda_layer_pip_requirements.aws_lambda_provisioned_concurrency_config.current_version (expand)" [label = "module.lambda_layer_pip_requirements.aws_lambda_provisioned_concurrency_config.current_version", shape = "box"]
		"[root] module.lambda_layer_pip_requirements.aws_s3_bucket_object.lambda_package (expand)" [label = "module.lambda_layer_pip_requirements.aws_s3_bucket_object.lambda_package", shape = "box"]
		"[root] module.lambda_layer_pip_requirements.data.aws_arn.log_group_arn (expand)" [label = "module.lambda_layer_pip_requirements.data.aws_arn.log_group_arn", shape = "box"]
		"[root] module.lambda_layer_pip_requirements.data.aws_cloudwatch_log_group.lambda (expand)" [label = "module.lambda_layer_pip_requirements.data.aws_cloudwatch_log_group.lambda", shape = "box"]
		"[root] module.lambda_layer_pip_requirements.data.aws_iam_policy.tracing (expand)" [label = "module.lambda_layer_pip_requirements.data.aws_iam_policy.tracing", shape = "box"]
		"[root] module.lambda_layer_pip_requirements.data.aws_iam_policy.vpc (expand)" [label = "module.lambda_layer_pip_requirements.data.aws_iam_policy.vpc", shape = "box"]
		"[root] module.lambda_layer_pip_requirements.data.aws_iam_policy_document.additional_inline (expand)" [label = "module.lambda_layer_pip_requirements.data.aws_iam_policy_document.additional_inline", shape = "box"]
		"[root] module.lambda_layer_pip_requirements.data.aws_iam_policy_document.assume_role (expand)" [label = "module.lambda_layer_pip_requirements.data.aws_iam_policy_document.assume_role", shape = "box"]
		"[root] module.lambda_layer_pip_requirements.data.aws_iam_policy_document.async (expand)" [label = "module.lambda_layer_pip_requirements.data.aws_iam_policy_document.async", shape = "box"]
		"[root] module.lambda_layer_pip_requirements.data.aws_iam_policy_document.dead_letter (expand)" [label = "module.lambda_layer_pip_requirements.data.aws_iam_policy_document.dead_letter", shape = "box"]
		"[root] module.lambda_layer_pip_requirements.data.aws_iam_policy_document.logs (expand)" [label = "module.lambda_layer_pip_requirements.data.aws_iam_policy_document.logs", shape = "box"]
		"[root] module.lambda_layer_pip_requirements.data.aws_partition.current (expand)" [label = "module.lambda_layer_pip_requirements.data.aws_partition.current", shape = "box"]
		"[root] module.lambda_layer_pip_requirements.data.external.archive_prepare (expand)" [label = "module.lambda_layer_pip_requirements.data.external.archive_prepare", shape = "box"]
		"[root] module.lambda_layer_pip_requirements.local_file.archive_plan (expand)" [label = "module.lambda_layer_pip_requirements.local_file.archive_plan", shape = "box"]
		"[root] module.lambda_layer_pip_requirements.null_resource.archive (expand)" [label = "module.lambda_layer_pip_requirements.null_resource.archive", shape = "box"]
		"[root] module.package_dir.aws_cloudwatch_log_group.lambda (expand)" [label = "module.package_dir.aws_cloudwatch_log_group.lambda", shape = "box"]
		"[root] module.package_dir.aws_iam_policy.additional_inline (expand)" [label = "module.package_dir.aws_iam_policy.additional_inline", shape = "box"]
		"[root] module.package_dir.aws_iam_policy.additional_json (expand)" [label = "module.package_dir.aws_iam_policy.additional_json", shape = "box"]
		"[root] module.package_dir.aws_iam_policy.additional_jsons (expand)" [label = "module.package_dir.aws_iam_policy.additional_jsons", shape = "box"]
		"[root] module.package_dir.aws_iam_policy.async (expand)" [label = "module.package_dir.aws_iam_policy.async", shape = "box"]
		"[root] module.package_dir.aws_iam_policy.dead_letter (expand)" [label = "module.package_dir.aws_iam_policy.dead_letter", shape = "box"]
		"[root] module.package_dir.aws_iam_policy.logs (expand)" [label = "module.package_dir.aws_iam_policy.logs", shape = "box"]
		"[root] module.package_dir.aws_iam_policy.tracing (expand)" [label = "module.package_dir.aws_iam_policy.tracing", shape = "box"]
		"[root] module.package_dir.aws_iam_policy.vpc (expand)" [label = "module.package_dir.aws_iam_policy.vpc", shape = "box"]
		"[root] module.package_dir.aws_iam_role.lambda (expand)" [label = "module.package_dir.aws_iam_role.lambda", shape = "box"]
		"[root] module.package_dir.aws_iam_role_policy_attachment.additional_inline (expand)" [label = "module.package_dir.aws_iam_role_policy_attachment.additional_inline", shape = "box"]
		"[root] module.package_dir.aws_iam_role_policy_attachment.additional_json (expand)" [label = "module.package_dir.aws_iam_role_policy_attachment.additional_json", shape = "box"]
		"[root] module.package_dir.aws_iam_role_policy_attachment.additional_jsons (expand)" [label = "module.package_dir.aws_iam_role_policy_attachment.additional_jsons", shape = "box"]
		"[root] module.package_dir.aws_iam_role_policy_attachment.additional_many (expand)" [label = "module.package_dir.aws_iam_role_policy_attachment.additional_many", shape = "box"]
		"[root] module.package_dir.aws_iam_role_policy_attachment.additional_one (expand)" [label = "module.package_dir.aws_iam_role_policy_attachment.additional_one", shape = "box"]
		"[root] module.package_dir.aws_iam_role_policy_attachment.async (expand)" [label = "module.package_dir.aws_iam_role_policy_attachment.async", shape = "box"]
		"[root] module.package_dir.aws_iam_role_policy_attachment.dead_letter (expand)" [label = "module.package_dir.aws_iam_role_policy_attachment.dead_letter", shape = "box"]
		"[root] module.package_dir.aws_iam_role_policy_attachment.logs (expand)" [label = "module.package_dir.aws_iam_role_policy_attachment.logs", shape = "box"]
		"[root] module.package_dir.aws_iam_role_policy_attachment.tracing (expand)" [label = "module.package_dir.aws_iam_role_policy_attachment.tracing", shape = "box"]
		"[root] module.package_dir.aws_iam_role_policy_attachment.vpc (expand)" [label = "module.package_dir.aws_iam_role_policy_attachment.vpc", shape = "box"]
		"[root] module.package_dir.aws_lambda_event_source_mapping.this (expand)" [label = "module.package_dir.aws_lambda_event_source_mapping.this", shape = "box"]
		"[root] module.package_dir.aws_lambda_function.this (expand)" [label = "module.package_dir.aws_lambda_function.this", shape = "box"]
		"[root] module.package_dir.aws_lambda_function_event_invoke_config.this (expand)" [label = "module.package_dir.aws_lambda_function_event_invoke_config.this", shape = "box"]
		"[root] module.package_dir.aws_lambda_layer_version.this (expand)" [label = "module.package_dir.aws_lambda_layer_version.this", shape = "box"]
		"[root] module.package_dir.aws_lambda_permission.current_version_triggers (expand)" [label = "module.package_dir.aws_lambda_permission.current_version_triggers", shape = "box"]
		"[root] module.package_dir.aws_lambda_permission.unqualified_alias_triggers (expand)" [label = "module.package_dir.aws_lambda_permission.unqualified_alias_triggers", shape = "box"]
		"[root] module.package_dir.aws_lambda_provisioned_concurrency_config.current_version (expand)" [label = "module.package_dir.aws_lambda_provisioned_concurrency_config.current_version", shape = "box"]
		"[root] module.package_dir.aws_s3_bucket_object.lambda_package (expand)" [label = "module.package_dir.aws_s3_bucket_object.lambda_package", shape = "box"]
		"[root] module.package_dir.data.aws_arn.log_group_arn (expand)" [label = "module.package_dir.data.aws_arn.log_group_arn", shape = "box"]
		"[root] module.package_dir.data.aws_cloudwatch_log_group.lambda (expand)" [label = "module.package_dir.data.aws_cloudwatch_log_group.lambda", shape = "box"]
		"[root] module.package_dir.data.aws_iam_policy.tracing (expand)" [label = "module.package_dir.data.aws_iam_policy.tracing", shape = "box"]
		"[root] module.package_dir.data.aws_iam_policy.vpc (expand)" [label = "module.package_dir.data.aws_iam_policy.vpc", shape = "box"]
		"[root] module.package_dir.data.aws_iam_policy_document.additional_inline (expand)" [label = "module.package_dir.data.aws_iam_policy_document.additional_inline", shape = "box"]
		"[root] module.package_dir.data.aws_iam_policy_document.assume_role (expand)" [label = "module.package_dir.data.aws_iam_policy_document.assume_role", shape = "box"]
		"[root] module.package_dir.data.aws_iam_policy_document.async (expand)" [label = "module.package_dir.data.aws_iam_policy_document.async", shape = "box"]
		"[root] module.package_dir.data.aws_iam_policy_document.dead_letter (expand)" [label = "module.package_dir.data.aws_iam_policy_document.dead_letter", shape = "box"]
		"[root] module.package_dir.data.aws_iam_policy_document.logs (expand)" [label = "module.package_dir.data.aws_iam_policy_document.logs", shape = "box"]
		"[root] module.package_dir.data.aws_partition.current (expand)" [label = "module.package_dir.data.aws_partition.current", shape = "box"]
		"[root] module.package_dir.data.external.archive_prepare (expand)" [label = "module.package_dir.data.external.archive_prepare", shape = "box"]
		"[root] module.package_dir.local_file.archive_plan (expand)" [label = "module.package_dir.local_file.archive_plan", shape = "box"]
		"[root] module.package_dir.null_resource.archive (expand)" [label = "module.package_dir.null_resource.archive", shape = "box"]
		"[root] module.package_dir_pip_dir.aws_cloudwatch_log_group.lambda (expand)" [label = "module.package_dir_pip_dir.aws_cloudwatch_log_group.lambda", shape = "box"]
		"[root] module.package_dir_pip_dir.aws_iam_policy.additional_inline (expand)" [label = "module.package_dir_pip_dir.aws_iam_policy.additional_inline", shape = "box"]
		"[root] module.package_dir_pip_dir.aws_iam_policy.additional_json (expand)" [label = "module.package_dir_pip_dir.aws_iam_policy.additional_json", shape = "box"]
		"[root] module.package_dir_pip_dir.aws_iam_policy.additional_jsons (expand)" [label = "module.package_dir_pip_dir.aws_iam_policy.additional_jsons", shape = "box"]
		"[root] module.package_dir_pip_dir.aws_iam_policy.async (expand)" [label = "module.package_dir_pip_dir.aws_iam_policy.async", shape = "box"]
		"[root] module.package_dir_pip_dir.aws_iam_policy.dead_letter (expand)" [label = "module.package_dir_pip_dir.aws_iam_policy.dead_letter", shape = "box"]
		"[root] module.package_dir_pip_dir.aws_iam_policy.logs (expand)" [label = "module.package_dir_pip_dir.aws_iam_policy.logs", shape = "box"]
		"[root] module.package_dir_pip_dir.aws_iam_policy.tracing (expand)" [label = "module.package_dir_pip_dir.aws_iam_policy.tracing", shape = "box"]
		"[root] module.package_dir_pip_dir.aws_iam_policy.vpc (expand)" [label = "module.package_dir_pip_dir.aws_iam_policy.vpc", shape = "box"]
		"[root] module.package_dir_pip_dir.aws_iam_role.lambda (expand)" [label = "module.package_dir_pip_dir.aws_iam_role.lambda", shape = "box"]
		"[root] module.package_dir_pip_dir.aws_iam_role_policy_attachment.additional_inline (expand)" [label = "module.package_dir_pip_dir.aws_iam_role_policy_attachment.additional_inline", shape = "box"]
		"[root] module.package_dir_pip_dir.aws_iam_role_policy_attachment.additional_json (expand)" [label = "module.package_dir_pip_dir.aws_iam_role_policy_attachment.additional_json", shape = "box"]
		"[root] module.package_dir_pip_dir.aws_iam_role_policy_attachment.additional_jsons (expand)" [label = "module.package_dir_pip_dir.aws_iam_role_policy_attachment.additional_jsons", shape = "box"]
		"[root] module.package_dir_pip_dir.aws_iam_role_policy_attachment.additional_many (expand)" [label = "module.package_dir_pip_dir.aws_iam_role_policy_attachment.additional_many", shape = "box"]
		"[root] module.package_dir_pip_dir.aws_iam_role_policy_attachment.additional_one (expand)" [label = "module.package_dir_pip_dir.aws_iam_role_policy_attachment.additional_one", shape = "box"]
		"[root] module.package_dir_pip_dir.aws_iam_role_policy_attachment.async (expand)" [label = "module.package_dir_pip_dir.aws_iam_role_policy_attachment.async", shape = "box"]
		"[root] module.package_dir_pip_dir.aws_iam_role_policy_attachment.dead_letter (expand)" [label = "module.package_dir_pip_dir.aws_iam_role_policy_attachment.dead_letter", shape = "box"]
		"[root] module.package_dir_pip_dir.aws_iam_role_policy_attachment.logs (expand)" [label = "module.package_dir_pip_dir.aws_iam_role_policy_attachment.logs", shape = "box"]
		"[root] module.package_dir_pip_dir.aws_iam_role_policy_attachment.tracing (expand)" [label = "module.package_dir_pip_dir.aws_iam_role_policy_attachment.tracing", shape = "box"]
		"[root] module.package_dir_pip_dir.aws_iam_role_policy_attachment.vpc (expand)" [label = "module.package_dir_pip_dir.aws_iam_role_policy_attachment.vpc", shape = "box"]
		"[root] module.package_dir_pip_dir.aws_lambda_event_source_mapping.this (expand)" [label = "module.package_dir_pip_dir.aws_lambda_event_source_mapping.this", shape = "box"]
		"[root] module.package_dir_pip_dir.aws_lambda_function.this (expand)" [label = "module.package_dir_pip_dir.aws_lambda_function.this", shape = "box"]
		"[root] module.package_dir_pip_dir.aws_lambda_function_event_invoke_config.this (expand)" [label = "module.package_dir_pip_dir.aws_lambda_function_event_invoke_config.this", shape = "box"]
		"[root] module.package_dir_pip_dir.aws_lambda_layer_version.this (expand)" [label = "module.package_dir_pip_dir.aws_lambda_layer_version.this", shape = "box"]
		"[root] module.package_dir_pip_dir.aws_lambda_permission.current_version_triggers (expand)" [label = "module.package_dir_pip_dir.aws_lambda_permission.current_version_triggers", shape = "box"]
		"[root] module.package_dir_pip_dir.aws_lambda_permission.unqualified_alias_triggers (expand)" [label = "module.package_dir_pip_dir.aws_lambda_permission.unqualified_alias_triggers", shape = "box"]
		"[root] module.package_dir_pip_dir.aws_lambda_provisioned_concurrency_config.current_version (expand)" [label = "module.package_dir_pip_dir.aws_lambda_provisioned_concurrency_config.current_version", shape = "box"]
		"[root] module.package_dir_pip_dir.aws_s3_bucket_object.lambda_package (expand)" [label = "module.package_dir_pip_dir.aws_s3_bucket_object.lambda_package", shape = "box"]
		"[root] module.package_dir_pip_dir.data.aws_arn.log_group_arn (expand)" [label = "module.package_dir_pip_dir.data.aws_arn.log_group_arn", shape = "box"]
		"[root] module.package_dir_pip_dir.data.aws_cloudwatch_log_group.lambda (expand)" [label = "module.package_dir_pip_dir.data.aws_cloudwatch_log_group.lambda", shape = "box"]
		"[root] module.package_dir_pip_dir.data.aws_iam_policy.tracing (expand)" [label = "module.package_dir_pip_dir.data.aws_iam_policy.tracing", shape = "box"]
		"[root] module.package_dir_pip_dir.data.aws_iam_policy.vpc (expand)" [label = "module.package_dir_pip_dir.data.aws_iam_policy.vpc", shape = "box"]
		"[root] module.package_dir_pip_dir.data.aws_iam_policy_document.additional_inline (expand)" [label = "module.package_dir_pip_dir.data.aws_iam_policy_document.additional_inline", shape = "box"]
		"[root] module.package_dir_pip_dir.data.aws_iam_policy_document.assume_role (expand)" [label = "module.package_dir_pip_dir.data.aws_iam_policy_document.assume_role", shape = "box"]
		"[root] module.package_dir_pip_dir.data.aws_iam_policy_document.async (expand)" [label = "module.package_dir_pip_dir.data.aws_iam_policy_document.async", shape = "box"]
		"[root] module.package_dir_pip_dir.data.aws_iam_policy_document.dead_letter (expand)" [label = "module.package_dir_pip_dir.data.aws_iam_policy_document.dead_letter", shape = "box"]
		"[root] module.package_dir_pip_dir.data.aws_iam_policy_document.logs (expand)" [label = "module.package_dir_pip_dir.data.aws_iam_policy_document.logs", shape = "box"]
		"[root] module.package_dir_pip_dir.data.aws_partition.current (expand)" [label = "module.package_dir_pip_dir.data.aws_partition.current", shape = "box"]
		"[root] module.package_dir_pip_dir.data.external.archive_prepare (expand)" [label = "module.package_dir_pip_dir.data.external.archive_prepare", shape = "box"]
		"[root] module.package_dir_pip_dir.local_file.archive_plan (expand)" [label = "module.package_dir_pip_dir.local_file.archive_plan", shape = "box"]
		"[root] module.package_dir_pip_dir.null_resource.archive (expand)" [label = "module.package_dir_pip_dir.null_resource.archive", shape = "box"]
		"[root] module.package_dir_without_pip_install.aws_cloudwatch_log_group.lambda (expand)" [label = "module.package_dir_without_pip_install.aws_cloudwatch_log_group.lambda", shape = "box"]
		"[root] module.package_dir_without_pip_install.aws_iam_policy.additional_inline (expand)" [label = "module.package_dir_without_pip_install.aws_iam_policy.additional_inline", shape = "box"]
		"[root] module.package_dir_without_pip_install.aws_iam_policy.additional_json (expand)" [label = "module.package_dir_without_pip_install.aws_iam_policy.additional_json", shape = "box"]
		"[root] module.package_dir_without_pip_install.aws_iam_policy.additional_jsons (expand)" [label = "module.package_dir_without_pip_install.aws_iam_policy.additional_jsons", shape = "box"]
		"[root] module.package_dir_without_pip_install.aws_iam_policy.async (expand)" [label = "module.package_dir_without_pip_install.aws_iam_policy.async", shape = "box"]
		"[root] module.package_dir_without_pip_install.aws_iam_policy.dead_letter (expand)" [label = "module.package_dir_without_pip_install.aws_iam_policy.dead_letter", shape = "box"]
		"[root] module.package_dir_without_pip_install.aws_iam_policy.logs (expand)" [label = "module.package_dir_without_pip_install.aws_iam_policy.logs", shape = "box"]
		"[root] module.package_dir_without_pip_install.aws_iam_policy.tracing (expand)" [label = "module.package_dir_without_pip_install.aws_iam_policy.tracing", shape = "box"]
		"[root] module.package_dir_without_pip_install.aws_iam_policy.vpc (expand)" [label = "module.package_dir_without_pip_install.aws_iam_policy.vpc", shape = "box"]
		"[root] module.package_dir_without_pip_install.aws_iam_role.lambda (expand)" [label = "module.package_dir_without_pip_install.aws_iam_role.lambda", shape = "box"]
		"[root] module.package_dir_without_pip_install.aws_iam_role_policy_attachment.additional_inline (expand)" [label = "module.package_dir_without_pip_install.aws_iam_role_policy_attachment.additional_inline", shape = "box"]
		"[root] module.package_dir_without_pip_install.aws_iam_role_policy_attachment.additional_json (expand)" [label = "module.package_dir_without_pip_install.aws_iam_role_policy_attachment.additional_json", shape = "box"]
		"[root] module.package_dir_without_pip_install.aws_iam_role_policy_attachment.additional_jsons (expand)" [label = "module.package_dir_without_pip_install.aws_iam_role_policy_attachment.additional_jsons", shape = "box"]
		"[root] module.package_dir_without_pip_install.aws_iam_role_policy_attachment.additional_many (expand)" [label = "module.package_dir_without_pip_install.aws_iam_role_policy_attachment.additional_many", shape = "box"]
		"[root] module.package_dir_without_pip_install.aws_iam_role_policy_attachment.additional_one (expand)" [label = "module.package_dir_without_pip_install.aws_iam_role_policy_attachment.additional_one", shape = "box"]
		"[root] module.package_dir_without_pip_install.aws_iam_role_policy_attachment.async (expand)" [label = "module.package_dir_without_pip_install.aws_iam_role_policy_attachment.async", shape = "box"]
		"[root] module.package_dir_without_pip_install.aws_iam_role_policy_attachment.dead_letter (expand)" [label = "module.package_dir_without_pip_install.aws_iam_role_policy_attachment.dead_letter", shape = "box"]
		"[root] module.package_dir_without_pip_install.aws_iam_role_policy_attachment.logs (expand)" [label = "module.package_dir_without_pip_install.aws_iam_role_policy_attachment.logs", shape = "box"]
		"[root] module.package_dir_without_pip_install.aws_iam_role_policy_attachment.tracing (expand)" [label = "module.package_dir_without_pip_install.aws_iam_role_policy_attachment.tracing", shape = "box"]
		"[root] module.package_dir_without_pip_install.aws_iam_role_policy_attachment.vpc (expand)" [label = "module.package_dir_without_pip_install.aws_iam_role_policy_attachment.vpc", shape = "box"]
		"[root] module.package_dir_without_pip_install.aws_lambda_event_source_mapping.this (expand)" [label = "module.package_dir_without_pip_install.aws_lambda_event_source_mapping.this", shape = "box"]
		"[root] module.package_dir_without_pip_install.aws_lambda_function.this (expand)" [label = "module.package_dir_without_pip_install.aws_lambda_function.this", shape = "box"]
		"[root] module.package_dir_without_pip_install.aws_lambda_function_event_invoke_config.this (expand)" [label = "module.package_dir_without_pip_install.aws_lambda_function_event_invoke_config.this", shape = "box"]
		"[root] module.package_dir_without_pip_install.aws_lambda_layer_version.this (expand)" [label = "module.package_dir_without_pip_install.aws_lambda_layer_version.this", shape = "box"]
		"[root] module.package_dir_without_pip_install.aws_lambda_permission.current_version_triggers (expand)" [label = "module.package_dir_without_pip_install.aws_lambda_permission.current_version_triggers", shape = "box"]
		"[root] module.package_dir_without_pip_install.aws_lambda_permission.unqualified_alias_triggers (expand)" [label = "module.package_dir_without_pip_install.aws_lambda_permission.unqualified_alias_triggers", shape = "box"]
		"[root] module.package_dir_without_pip_install.aws_lambda_provisioned_concurrency_config.current_version (expand)" [label = "module.package_dir_without_pip_install.aws_lambda_provisioned_concurrency_config.current_version", shape = "box"]
		"[root] module.package_dir_without_pip_install.aws_s3_bucket_object.lambda_package (expand)" [label = "module.package_dir_without_pip_install.aws_s3_bucket_object.lambda_package", shape = "box"]
		"[root] module.package_dir_without_pip_install.data.aws_arn.log_group_arn (expand)" [label = "module.package_dir_without_pip_install.data.aws_arn.log_group_arn", shape = "box"]
		"[root] module.package_dir_without_pip_install.data.aws_cloudwatch_log_group.lambda (expand)" [label = "module.package_dir_without_pip_install.data.aws_cloudwatch_log_group.lambda", shape = "box"]
		"[root] module.package_dir_without_pip_install.data.aws_iam_policy.tracing (expand)" [label = "module.package_dir_without_pip_install.data.aws_iam_policy.tracing", shape = "box"]
		"[root] module.package_dir_without_pip_install.data.aws_iam_policy.vpc (expand)" [label = "module.package_dir_without_pip_install.data.aws_iam_policy.vpc", shape = "box"]
		"[root] module.package_dir_without_pip_install.data.aws_iam_policy_document.additional_inline (expand)" [label = "module.package_dir_without_pip_install.data.aws_iam_policy_document.additional_inline", shape = "box"]
		"[root] module.package_dir_without_pip_install.data.aws_iam_policy_document.assume_role (expand)" [label = "module.package_dir_without_pip_install.data.aws_iam_policy_document.assume_role", shape = "box"]
		"[root] module.package_dir_without_pip_install.data.aws_iam_policy_document.async (expand)" [label = "module.package_dir_without_pip_install.data.aws_iam_policy_document.async", shape = "box"]
		"[root] module.package_dir_without_pip_install.data.aws_iam_policy_document.dead_letter (expand)" [label = "module.package_dir_without_pip_install.data.aws_iam_policy_document.dead_letter", shape = "box"]
		"[root] module.package_dir_without_pip_install.data.aws_iam_policy_document.logs (expand)" [label = "module.package_dir_without_pip_install.data.aws_iam_policy_document.logs", shape = "box"]
		"[root] module.package_dir_without_pip_install.data.aws_partition.current (expand)" [label = "module.package_dir_without_pip_install.data.aws_partition.current", shape = "box"]
		"[root] module.package_dir_without_pip_install.data.external.archive_prepare (expand)" [label = "module.package_dir_without_pip_install.data.external.archive_prepare", shape = "box"]
		"[root] module.package_dir_without_pip_install.local_file.archive_plan (expand)" [label = "module.package_dir_without_pip_install.local_file.archive_plan", shape = "box"]
		"[root] module.package_dir_without_pip_install.null_resource.archive (expand)" [label = "module.package_dir_without_pip_install.null_resource.archive", shape = "box"]
		"[root] module.package_file.aws_cloudwatch_log_group.lambda (expand)" [label = "module.package_file.aws_cloudwatch_log_group.lambda", shape = "box"]
		"[root] module.package_file.aws_iam_policy.additional_inline (expand)" [label = "module.package_file.aws_iam_policy.additional_inline", shape = "box"]
		"[root] module.package_file.aws_iam_policy.additional_json (expand)" [label = "module.package_file.aws_iam_policy.additional_json", shape = "box"]
		"[root] module.package_file.aws_iam_policy.additional_jsons (expand)" [label = "module.package_file.aws_iam_policy.additional_jsons", shape = "box"]
		"[root] module.package_file.aws_iam_policy.async (expand)" [label = "module.package_file.aws_iam_policy.async", shape = "box"]
		"[root] module.package_file.aws_iam_policy.dead_letter (expand)" [label = "module.package_file.aws_iam_policy.dead_letter", shape = "box"]
		"[root] module.package_file.aws_iam_policy.logs (expand)" [label = "module.package_file.aws_iam_policy.logs", shape = "box"]
		"[root] module.package_file.aws_iam_policy.tracing (expand)" [label = "module.package_file.aws_iam_policy.tracing", shape = "box"]
		"[root] module.package_file.aws_iam_policy.vpc (expand)" [label = "module.package_file.aws_iam_policy.vpc", shape = "box"]
		"[root] module.package_file.aws_iam_role.lambda (expand)" [label = "module.package_file.aws_iam_role.lambda", shape = "box"]
		"[root] module.package_file.aws_iam_role_policy_attachment.additional_inline (expand)" [label = "module.package_file.aws_iam_role_policy_attachment.additional_inline", shape = "box"]
		"[root] module.package_file.aws_iam_role_policy_attachment.additional_json (expand)" [label = "module.package_file.aws_iam_role_policy_attachment.additional_json", shape = "box"]
		"[root] module.package_file.aws_iam_role_policy_attachment.additional_jsons (expand)" [label = "module.package_file.aws_iam_role_policy_attachment.additional_jsons", shape = "box"]
		"[root] module.package_file.aws_iam_role_policy_attachment.additional_many (expand)" [label = "module.package_file.aws_iam_role_policy_attachment.additional_many", shape = "box"]
		"[root] module.package_file.aws_iam_role_policy_attachment.additional_one (expand)" [label = "module.package_file.aws_iam_role_policy_attachment.additional_one", shape = "box"]
		"[root] module.package_file.aws_iam_role_policy_attachment.async (expand)" [label = "module.package_file.aws_iam_role_policy_attachment.async", shape = "box"]
		"[root] module.package_file.aws_iam_role_policy_attachment.dead_letter (expand)" [label = "module.package_file.aws_iam_role_policy_attachment.dead_letter", shape = "box"]
		"[root] module.package_file.aws_iam_role_policy_attachment.logs (expand)" [label = "module.package_file.aws_iam_role_policy_attachment.logs", shape = "box"]
		"[root] module.package_file.aws_iam_role_policy_attachment.tracing (expand)" [label = "module.package_file.aws_iam_role_policy_attachment.tracing", shape = "box"]
		"[root] module.package_file.aws_iam_role_policy_attachment.vpc (expand)" [label = "module.package_file.aws_iam_role_policy_attachment.vpc", shape = "box"]
		"[root] module.package_file.aws_lambda_event_source_mapping.this (expand)" [label = "module.package_file.aws_lambda_event_source_mapping.this", shape = "box"]
		"[root] module.package_file.aws_lambda_function.this (expand)" [label = "module.package_file.aws_lambda_function.this", shape = "box"]
		"[root] module.package_file.aws_lambda_function_event_invoke_config.this (expand)" [label = "module.package_file.aws_lambda_function_event_invoke_config.this", shape = "box"]
		"[root] module.package_file.aws_lambda_layer_version.this (expand)" [label = "module.package_file.aws_lambda_layer_version.this", shape = "box"]
		"[root] module.package_file.aws_lambda_permission.current_version_triggers (expand)" [label = "module.package_file.aws_lambda_permission.current_version_triggers", shape = "box"]
		"[root] module.package_file.aws_lambda_permission.unqualified_alias_triggers (expand)" [label = "module.package_file.aws_lambda_permission.unqualified_alias_triggers", shape = "box"]
		"[root] module.package_file.aws_lambda_provisioned_concurrency_config.current_version (expand)" [label = "module.package_file.aws_lambda_provisioned_concurrency_config.current_version", shape = "box"]
		"[root] module.package_file.aws_s3_bucket_object.lambda_package (expand)" [label = "module.package_file.aws_s3_bucket_object.lambda_package", shape = "box"]
		"[root] module.package_file.data.aws_arn.log_group_arn (expand)" [label = "module.package_file.data.aws_arn.log_group_arn", shape = "box"]
		"[root] module.package_file.data.aws_cloudwatch_log_group.lambda (expand)" [label = "module.package_file.data.aws_cloudwatch_log_group.lambda", shape = "box"]
		"[root] module.package_file.data.aws_iam_policy.tracing (expand)" [label = "module.package_file.data.aws_iam_policy.tracing", shape = "box"]
		"[root] module.package_file.data.aws_iam_policy.vpc (expand)" [label = "module.package_file.data.aws_iam_policy.vpc", shape = "box"]
		"[root] module.package_file.data.aws_iam_policy_document.additional_inline (expand)" [label = "module.package_file.data.aws_iam_policy_document.additional_inline", shape = "box"]
		"[root] module.package_file.data.aws_iam_policy_document.assume_role (expand)" [label = "module.package_file.data.aws_iam_policy_document.assume_role", shape = "box"]
		"[root] module.package_file.data.aws_iam_policy_document.async (expand)" [label = "module.package_file.data.aws_iam_policy_document.async", shape = "box"]
		"[root] module.package_file.data.aws_iam_policy_document.dead_letter (expand)" [label = "module.package_file.data.aws_iam_policy_document.dead_letter", shape = "box"]
		"[root] module.package_file.data.aws_iam_policy_document.logs (expand)" [label = "module.package_file.data.aws_iam_policy_document.logs", shape = "box"]
		"[root] module.package_file.data.aws_partition.current (expand)" [label = "module.package_file.data.aws_partition.current", shape = "box"]
		"[root] module.package_file.data.external.archive_prepare (expand)" [label = "module.package_file.data.external.archive_prepare", shape = "box"]
		"[root] module.package_file.local_file.archive_plan (expand)" [label = "module.package_file.local_file.archive_plan", shape = "box"]
		"[root] module.package_file.null_resource.archive (expand)" [label = "module.package_file.null_resource.archive", shape = "box"]
		"[root] module.package_file_with_pip_requirements.aws_cloudwatch_log_group.lambda (expand)" [label = "module.package_file_with_pip_requirements.aws_cloudwatch_log_group.lambda", shape = "box"]
		"[root] module.package_file_with_pip_requirements.aws_iam_policy.additional_inline (expand)" [label = "module.package_file_with_pip_requirements.aws_iam_policy.additional_inline", shape = "box"]
		"[root] module.package_file_with_pip_requirements.aws_iam_policy.additional_json (expand)" [label = "module.package_file_with_pip_requirements.aws_iam_policy.additional_json", shape = "box"]
		"[root] module.package_file_with_pip_requirements.aws_iam_policy.additional_jsons (expand)" [label = "module.package_file_with_pip_requirements.aws_iam_policy.additional_jsons", shape = "box"]
		"[root] module.package_file_with_pip_requirements.aws_iam_policy.async (expand)" [label = "module.package_file_with_pip_requirements.aws_iam_policy.async", shape = "box"]
		"[root] module.package_file_with_pip_requirements.aws_iam_policy.dead_letter (expand)" [label = "module.package_file_with_pip_requirements.aws_iam_policy.dead_letter", shape = "box"]
		"[root] module.package_file_with_pip_requirements.aws_iam_policy.logs (expand)" [label = "module.package_file_with_pip_requirements.aws_iam_policy.logs", shape = "box"]
		"[root] module.package_file_with_pip_requirements.aws_iam_policy.tracing (expand)" [label = "module.package_file_with_pip_requirements.aws_iam_policy.tracing", shape = "box"]
		"[root] module.package_file_with_pip_requirements.aws_iam_policy.vpc (expand)" [label = "module.package_file_with_pip_requirements.aws_iam_policy.vpc", shape = "box"]
		"[root] module.package_file_with_pip_requirements.aws_iam_role.lambda (expand)" [label = "module.package_file_with_pip_requirements.aws_iam_role.lambda", shape = "box"]
		"[root] module.package_file_with_pip_requirements.aws_iam_role_policy_attachment.additional_inline (expand)" [label = "module.package_file_with_pip_requirements.aws_iam_role_policy_attachment.additional_inline", shape = "box"]
		"[root] module.package_file_with_pip_requirements.aws_iam_role_policy_attachment.additional_json (expand)" [label = "module.package_file_with_pip_requirements.aws_iam_role_policy_attachment.additional_json", shape = "box"]
		"[root] module.package_file_with_pip_requirements.aws_iam_role_policy_attachment.additional_jsons (expand)" [label = "module.package_file_with_pip_requirements.aws_iam_role_policy_attachment.additional_jsons", shape = "box"]
		"[root] module.package_file_with_pip_requirements.aws_iam_role_policy_attachment.additional_many (expand)" [label = "module.package_file_with_pip_requirements.aws_iam_role_policy_attachment.additional_many", shape = "box"]
		"[root] module.package_file_with_pip_requirements.aws_iam_role_policy_attachment.additional_one (expand)" [label = "module.package_file_with_pip_requirements.aws_iam_role_policy_attachment.additional_one", shape = "box"]
		"[root] module.package_file_with_pip_requirements.aws_iam_role_policy_attachment.async (expand)" [label = "module.package_file_with_pip_requirements.aws_iam_role_policy_attachment.async", shape = "box"]
		"[root] module.package_file_with_pip_requirements.aws_iam_role_policy_attachment.dead_letter (expand)" [label = "module.package_file_with_pip_requirements.aws_iam_role_policy_attachment.dead_letter", shape = "box"]
		"[root] module.package_file_with_pip_requirements.aws_iam_role_policy_attachment.logs (expand)" [label = "module.package_file_with_pip_requirements.aws_iam_role_policy_attachment.logs", shape = "box"]
		"[root] module.package_file_with_pip_requirements.aws_iam_role_policy_attachment.tracing (expand)" [label = "module.package_file_with_pip_requirements.aws_iam_role_policy_attachment.tracing", shape = "box"]
		"[root] module.package_file_with_pip_requirements.aws_iam_role_policy_attachment.vpc (expand)" [label = "module.package_file_with_pip_requirements.aws_iam_role_policy_attachment.vpc", shape = "box"]
		"[root] module.package_file_with_pip_requirements.aws_lambda_event_source_mapping.this (expand)" [label = "module.package_file_with_pip_requirements.aws_lambda_event_source_mapping.this", shape = "box"]
		"[root] module.package_file_with_pip_requirements.aws_lambda_function.this (expand)" [label = "module.package_file_with_pip_requirements.aws_lambda_function.this", shape = "box"]
		"[root] module.package_file_with_pip_requirements.aws_lambda_function_event_invoke_config.this (expand)" [label = "module.package_file_with_pip_requirements.aws_lambda_function_event_invoke_config.this", shape = "box"]
		"[root] module.package_file_with_pip_requirements.aws_lambda_layer_version.this (expand)" [label = "module.package_file_with_pip_requirements.aws_lambda_layer_version.this", shape = "box"]
		"[root] module.package_file_with_pip_requirements.aws_lambda_permission.current_version_triggers (expand)" [label = "module.package_file_with_pip_requirements.aws_lambda_permission.current_version_triggers", shape = "box"]
		"[root] module.package_file_with_pip_requirements.aws_lambda_permission.unqualified_alias_triggers (expand)" [label = "module.package_file_with_pip_requirements.aws_lambda_permission.unqualified_alias_triggers", shape = "box"]
		"[root] module.package_file_with_pip_requirements.aws_lambda_provisioned_concurrency_config.current_version (expand)" [label = "module.package_file_with_pip_requirements.aws_lambda_provisioned_concurrency_config.current_version", shape = "box"]
		"[root] module.package_file_with_pip_requirements.aws_s3_bucket_object.lambda_package (expand)" [label = "module.package_file_with_pip_requirements.aws_s3_bucket_object.lambda_package", shape = "box"]
		"[root] module.package_file_with_pip_requirements.data.aws_arn.log_group_arn (expand)" [label = "module.package_file_with_pip_requirements.data.aws_arn.log_group_arn", shape = "box"]
		"[root] module.package_file_with_pip_requirements.data.aws_cloudwatch_log_group.lambda (expand)" [label = "module.package_file_with_pip_requirements.data.aws_cloudwatch_log_group.lambda", shape = "box"]
		"[root] module.package_file_with_pip_requirements.data.aws_iam_policy.tracing (expand)" [label = "module.package_file_with_pip_requirements.data.aws_iam_policy.tracing", shape = "box"]
		"[root] module.package_file_with_pip_requirements.data.aws_iam_policy.vpc (expand)" [label = "module.package_file_with_pip_requirements.data.aws_iam_policy.vpc", shape = "box"]
		"[root] module.package_file_with_pip_requirements.data.aws_iam_policy_document.additional_inline (expand)" [label = "module.package_file_with_pip_requirements.data.aws_iam_policy_document.additional_inline", shape = "box"]
		"[root] module.package_file_with_pip_requirements.data.aws_iam_policy_document.assume_role (expand)" [label = "module.package_file_with_pip_requirements.data.aws_iam_policy_document.assume_role", shape = "box"]
		"[root] module.package_file_with_pip_requirements.data.aws_iam_policy_document.async (expand)" [label = "module.package_file_with_pip_requirements.data.aws_iam_policy_document.async", shape = "box"]
		"[root] module.package_file_with_pip_requirements.data.aws_iam_policy_document.dead_letter (expand)" [label = "module.package_file_with_pip_requirements.data.aws_iam_policy_document.dead_letter", shape = "box"]
		"[root] module.package_file_with_pip_requirements.data.aws_iam_policy_document.logs (expand)" [label = "module.package_file_with_pip_requirements.data.aws_iam_policy_document.logs", shape = "box"]
		"[root] module.package_file_with_pip_requirements.data.aws_partition.current (expand)" [label = "module.package_file_with_pip_requirements.data.aws_partition.current", shape = "box"]
		"[root] module.package_file_with_pip_requirements.data.external.archive_prepare (expand)" [label = "module.package_file_with_pip_requirements.data.external.archive_prepare", shape = "box"]
		"[root] module.package_file_with_pip_requirements.local_file.archive_plan (expand)" [label = "module.package_file_with_pip_requirements.local_file.archive_plan", shape = "box"]
		"[root] module.package_file_with_pip_requirements.null_resource.archive (expand)" [label = "module.package_file_with_pip_requirements.null_resource.archive", shape = "box"]
		"[root] module.package_with_commands_and_patterns.aws_cloudwatch_log_group.lambda (expand)" [label = "module.package_with_commands_and_patterns.aws_cloudwatch_log_group.lambda", shape = "box"]
		"[root] module.package_with_commands_and_patterns.aws_iam_policy.additional_inline (expand)" [label = "module.package_with_commands_and_patterns.aws_iam_policy.additional_inline", shape = "box"]
		"[root] module.package_with_commands_and_patterns.aws_iam_policy.additional_json (expand)" [label = "module.package_with_commands_and_patterns.aws_iam_policy.additional_json", shape = "box"]
		"[root] module.package_with_commands_and_patterns.aws_iam_policy.additional_jsons (expand)" [label = "module.package_with_commands_and_patterns.aws_iam_policy.additional_jsons", shape = "box"]
		"[root] module.package_with_commands_and_patterns.aws_iam_policy.async (expand)" [label = "module.package_with_commands_and_patterns.aws_iam_policy.async", shape = "box"]
		"[root] module.package_with_commands_and_patterns.aws_iam_policy.dead_letter (expand)" [label = "module.package_with_commands_and_patterns.aws_iam_policy.dead_letter", shape = "box"]
		"[root] module.package_with_commands_and_patterns.aws_iam_policy.logs (expand)" [label = "module.package_with_commands_and_patterns.aws_iam_policy.logs", shape = "box"]
		"[root] module.package_with_commands_and_patterns.aws_iam_policy.tracing (expand)" [label = "module.package_with_commands_and_patterns.aws_iam_policy.tracing", shape = "box"]
		"[root] module.package_with_commands_and_patterns.aws_iam_policy.vpc (expand)" [label = "module.package_with_commands_and_patterns.aws_iam_policy.vpc", shape = "box"]
		"[root] module.package_with_commands_and_patterns.aws_iam_role.lambda (expand)" [label = "module.package_with_commands_and_patterns.aws_iam_role.lambda", shape = "box"]
		"[root] module.package_with_commands_and_patterns.aws_iam_role_policy_attachment.additional_inline (expand)" [label = "module.package_with_commands_and_patterns.aws_iam_role_policy_attachment.additional_inline", shape = "box"]
		"[root] module.package_with_commands_and_patterns.aws_iam_role_policy_attachment.additional_json (expand)" [label = "module.package_with_commands_and_patterns.aws_iam_role_policy_attachment.additional_json", shape = "box"]
		"[root] module.package_with_commands_and_patterns.aws_iam_role_policy_attachment.additional_jsons (expand)" [label = "module.package_with_commands_and_patterns.aws_iam_role_policy_attachment.additional_jsons", shape = "box"]
		"[root] module.package_with_commands_and_patterns.aws_iam_role_policy_attachment.additional_many (expand)" [label = "module.package_with_commands_and_patterns.aws_iam_role_policy_attachment.additional_many", shape = "box"]
		"[root] module.package_with_commands_and_patterns.aws_iam_role_policy_attachment.additional_one (expand)" [label = "module.package_with_commands_and_patterns.aws_iam_role_policy_attachment.additional_one", shape = "box"]
		"[root] module.package_with_commands_and_patterns.aws_iam_role_policy_attachment.async (expand)" [label = "module.package_with_commands_and_patterns.aws_iam_role_policy_attachment.async", shape = "box"]
		"[root] module.package_with_commands_and_patterns.aws_iam_role_policy_attachment.dead_letter (expand)" [label = "module.package_with_commands_and_patterns.aws_iam_role_policy_attachment.dead_letter", shape = "box"]
		"[root] module.package_with_commands_and_patterns.aws_iam_role_policy_attachment.logs (expand)" [label = "module.package_with_commands_and_patterns.aws_iam_role_policy_attachment.logs", shape = "box"]
		"[root] module.package_with_commands_and_patterns.aws_iam_role_policy_attachment.tracing (expand)" [label = "module.package_with_commands_and_patterns.aws_iam_role_policy_attachment.tracing", shape = "box"]
		"[root] module.package_with_commands_and_patterns.aws_iam_role_policy_attachment.vpc (expand)" [label = "module.package_with_commands_and_patterns.aws_iam_role_policy_attachment.vpc", shape = "box"]
		"[root] module.package_with_commands_and_patterns.aws_lambda_event_source_mapping.this (expand)" [label = "module.package_with_commands_and_patterns.aws_lambda_event_source_mapping.this", shape = "box"]
		"[root] module.package_with_commands_and_patterns.aws_lambda_function.this (expand)" [label = "module.package_with_commands_and_patterns.aws_lambda_function.this", shape = "box"]
		"[root] module.package_with_commands_and_patterns.aws_lambda_function_event_invoke_config.this (expand)" [label = "module.package_with_commands_and_patterns.aws_lambda_function_event_invoke_config.this", shape = "box"]
		"[root] module.package_with_commands_and_patterns.aws_lambda_layer_version.this (expand)" [label = "module.package_with_commands_and_patterns.aws_lambda_layer_version.this", shape = "box"]
		"[root] module.package_with_commands_and_patterns.aws_lambda_permission.current_version_triggers (expand)" [label = "module.package_with_commands_and_patterns.aws_lambda_permission.current_version_triggers", shape = "box"]
		"[root] module.package_with_commands_and_patterns.aws_lambda_permission.unqualified_alias_triggers (expand)" [label = "module.package_with_commands_and_patterns.aws_lambda_permission.unqualified_alias_triggers", shape = "box"]
		"[root] module.package_with_commands_and_patterns.aws_lambda_provisioned_concurrency_config.current_version (expand)" [label = "module.package_with_commands_and_patterns.aws_lambda_provisioned_concurrency_config.current_version", shape = "box"]
		"[root] module.package_with_commands_and_patterns.aws_s3_bucket_object.lambda_package (expand)" [label = "module.package_with_commands_and_patterns.aws_s3_bucket_object.lambda_package", shape = "box"]
		"[root] module.package_with_commands_and_patterns.data.aws_arn.log_group_arn (expand)" [label = "module.package_with_commands_and_patterns.data.aws_arn.log_group_arn", shape = "box"]
		"[root] module.package_with_commands_and_patterns.data.aws_cloudwatch_log_group.lambda (expand)" [label = "module.package_with_commands_and_patterns.data.aws_cloudwatch_log_group.lambda", shape = "box"]
		"[root] module.package_with_commands_and_patterns.data.aws_iam_policy.tracing (expand)" [label = "module.package_with_commands_and_patterns.data.aws_iam_policy.tracing", shape = "box"]
		"[root] module.package_with_commands_and_patterns.data.aws_iam_policy.vpc (expand)" [label = "module.package_with_commands_and_patterns.data.aws_iam_policy.vpc", shape = "box"]
		"[root] module.package_with_commands_and_patterns.data.aws_iam_policy_document.additional_inline (expand)" [label = "module.package_with_commands_and_patterns.data.aws_iam_policy_document.additional_inline", shape = "box"]
		"[root] module.package_with_commands_and_patterns.data.aws_iam_policy_document.assume_role (expand)" [label = "module.package_with_commands_and_patterns.data.aws_iam_policy_document.assume_role", shape = "box"]
		"[root] module.package_with_commands_and_patterns.data.aws_iam_policy_document.async (expand)" [label = "module.package_with_commands_and_patterns.data.aws_iam_policy_document.async", shape = "box"]
		"[root] module.package_with_commands_and_patterns.data.aws_iam_policy_document.dead_letter (expand)" [label = "module.package_with_commands_and_patterns.data.aws_iam_policy_document.dead_letter", shape = "box"]
		"[root] module.package_with_commands_and_patterns.data.aws_iam_policy_document.logs (expand)" [label = "module.package_with_commands_and_patterns.data.aws_iam_policy_document.logs", shape = "box"]
		"[root] module.package_with_commands_and_patterns.data.aws_partition.current (expand)" [label = "module.package_with_commands_and_patterns.data.aws_partition.current", shape = "box"]
		"[root] module.package_with_commands_and_patterns.data.external.archive_prepare (expand)" [label = "module.package_with_commands_and_patterns.data.external.archive_prepare", shape = "box"]
		"[root] module.package_with_commands_and_patterns.local_file.archive_plan (expand)" [label = "module.package_with_commands_and_patterns.local_file.archive_plan", shape = "box"]
		"[root] module.package_with_commands_and_patterns.null_resource.archive (expand)" [label = "module.package_with_commands_and_patterns.null_resource.archive", shape = "box"]
		"[root] module.package_with_docker.aws_cloudwatch_log_group.lambda (expand)" [label = "module.package_with_docker.aws_cloudwatch_log_group.lambda", shape = "box"]
		"[root] module.package_with_docker.aws_iam_policy.additional_inline (expand)" [label = "module.package_with_docker.aws_iam_policy.additional_inline", shape = "box"]
		"[root] module.package_with_docker.aws_iam_policy.additional_json (expand)" [label = "module.package_with_docker.aws_iam_policy.additional_json", shape = "box"]
		"[root] module.package_with_docker.aws_iam_policy.additional_jsons (expand)" [label = "module.package_with_docker.aws_iam_policy.additional_jsons", shape = "box"]
		"[root] module.package_with_docker.aws_iam_policy.async (expand)" [label = "module.package_with_docker.aws_iam_policy.async", shape = "box"]
		"[root] module.package_with_docker.aws_iam_policy.dead_letter (expand)" [label = "module.package_with_docker.aws_iam_policy.dead_letter", shape = "box"]
		"[root] module.package_with_docker.aws_iam_policy.logs (expand)" [label = "module.package_with_docker.aws_iam_policy.logs", shape = "box"]
		"[root] module.package_with_docker.aws_iam_policy.tracing (expand)" [label = "module.package_with_docker.aws_iam_policy.tracing", shape = "box"]
		"[root] module.package_with_docker.aws_iam_policy.vpc (expand)" [label = "module.package_with_docker.aws_iam_policy.vpc", shape = "box"]
		"[root] module.package_with_docker.aws_iam_role.lambda (expand)" [label = "module.package_with_docker.aws_iam_role.lambda", shape = "box"]
		"[root] module.package_with_docker.aws_iam_role_policy_attachment.additional_inline (expand)" [label = "module.package_with_docker.aws_iam_role_policy_attachment.additional_inline", shape = "box"]
		"[root] module.package_with_docker.aws_iam_role_policy_attachment.additional_json (expand)" [label = "module.package_with_docker.aws_iam_role_policy_attachment.additional_json", shape = "box"]
		"[root] module.package_with_docker.aws_iam_role_policy_attachment.additional_jsons (expand)" [label = "module.package_with_docker.aws_iam_role_policy_attachment.additional_jsons", shape = "box"]
		"[root] module.package_with_docker.aws_iam_role_policy_attachment.additional_many (expand)" [label = "module.package_with_docker.aws_iam_role_policy_attachment.additional_many", shape = "box"]
		"[root] module.package_with_docker.aws_iam_role_policy_attachment.additional_one (expand)" [label = "module.package_with_docker.aws_iam_role_policy_attachment.additional_one", shape = "box"]
		"[root] module.package_with_docker.aws_iam_role_policy_attachment.async (expand)" [label = "module.package_with_docker.aws_iam_role_policy_attachment.async", shape = "box"]
		"[root] module.package_with_docker.aws_iam_role_policy_attachment.dead_letter (expand)" [label = "module.package_with_docker.aws_iam_role_policy_attachment.dead_letter", shape = "box"]
		"[root] module.package_with_docker.aws_iam_role_policy_attachment.logs (expand)" [label = "module.package_with_docker.aws_iam_role_policy_attachment.logs", shape = "box"]
		"[root] module.package_with_docker.aws_iam_role_policy_attachment.tracing (expand)" [label = "module.package_with_docker.aws_iam_role_policy_attachment.tracing", shape = "box"]
		"[root] module.package_with_docker.aws_iam_role_policy_attachment.vpc (expand)" [label = "module.package_with_docker.aws_iam_role_policy_attachment.vpc", shape = "box"]
		"[root] module.package_with_docker.aws_lambda_event_source_mapping.this (expand)" [label = "module.package_with_docker.aws_lambda_event_source_mapping.this", shape = "box"]
		"[root] module.package_with_docker.aws_lambda_function.this (expand)" [label = "module.package_with_docker.aws_lambda_function.this", shape = "box"]
		"[root] module.package_with_docker.aws_lambda_function_event_invoke_config.this (expand)" [label = "module.package_with_docker.aws_lambda_function_event_invoke_config.this", shape = "box"]
		"[root] module.package_with_docker.aws_lambda_layer_version.this (expand)" [label = "module.package_with_docker.aws_lambda_layer_version.this", shape = "box"]
		"[root] module.package_with_docker.aws_lambda_permission.current_version_triggers (expand)" [label = "module.package_with_docker.aws_lambda_permission.current_version_triggers", shape = "box"]
		"[root] module.package_with_docker.aws_lambda_permission.unqualified_alias_triggers (expand)" [label = "module.package_with_docker.aws_lambda_permission.unqualified_alias_triggers", shape = "box"]
		"[root] module.package_with_docker.aws_lambda_provisioned_concurrency_config.current_version (expand)" [label = "module.package_with_docker.aws_lambda_provisioned_concurrency_config.current_version", shape = "box"]
		"[root] module.package_with_docker.aws_s3_bucket_object.lambda_package (expand)" [label = "module.package_with_docker.aws_s3_bucket_object.lambda_package", shape = "box"]
		"[root] module.package_with_docker.data.aws_arn.log_group_arn (expand)" [label = "module.package_with_docker.data.aws_arn.log_group_arn", shape = "box"]
		"[root] module.package_with_docker.data.aws_cloudwatch_log_group.lambda (expand)" [label = "module.package_with_docker.data.aws_cloudwatch_log_group.lambda", shape = "box"]
		"[root] module.package_with_docker.data.aws_iam_policy.tracing (expand)" [label = "module.package_with_docker.data.aws_iam_policy.tracing", shape = "box"]
		"[root] module.package_with_docker.data.aws_iam_policy.vpc (expand)" [label = "module.package_with_docker.data.aws_iam_policy.vpc", shape = "box"]
		"[root] module.package_with_docker.data.aws_iam_policy_document.additional_inline (expand)" [label = "module.package_with_docker.data.aws_iam_policy_document.additional_inline", shape = "box"]
		"[root] module.package_with_docker.data.aws_iam_policy_document.assume_role (expand)" [label = "module.package_with_docker.data.aws_iam_policy_document.assume_role", shape = "box"]
		"[root] module.package_with_docker.data.aws_iam_policy_document.async (expand)" [label = "module.package_with_docker.data.aws_iam_policy_document.async", shape = "box"]
		"[root] module.package_with_docker.data.aws_iam_policy_document.dead_letter (expand)" [label = "module.package_with_docker.data.aws_iam_policy_document.dead_letter", shape = "box"]
		"[root] module.package_with_docker.data.aws_iam_policy_document.logs (expand)" [label = "module.package_with_docker.data.aws_iam_policy_document.logs", shape = "box"]
		"[root] module.package_with_docker.data.aws_partition.current (expand)" [label = "module.package_with_docker.data.aws_partition.current", shape = "box"]
		"[root] module.package_with_docker.data.external.archive_prepare (expand)" [label = "module.package_with_docker.data.external.archive_prepare", shape = "box"]
		"[root] module.package_with_docker.local_file.archive_plan (expand)" [label = "module.package_with_docker.local_file.archive_plan", shape = "box"]
		"[root] module.package_with_docker.null_resource.archive (expand)" [label = "module.package_with_docker.null_resource.archive", shape = "box"]
		"[root] module.package_with_patterns.aws_cloudwatch_log_group.lambda (expand)" [label = "module.package_with_patterns.aws_cloudwatch_log_group.lambda", shape = "box"]
		"[root] module.package_with_patterns.aws_iam_policy.additional_inline (expand)" [label = "module.package_with_patterns.aws_iam_policy.additional_inline", shape = "box"]
		"[root] module.package_with_patterns.aws_iam_policy.additional_json (expand)" [label = "module.package_with_patterns.aws_iam_policy.additional_json", shape = "box"]
		"[root] module.package_with_patterns.aws_iam_policy.additional_jsons (expand)" [label = "module.package_with_patterns.aws_iam_policy.additional_jsons", shape = "box"]
		"[root] module.package_with_patterns.aws_iam_policy.async (expand)" [label = "module.package_with_patterns.aws_iam_policy.async", shape = "box"]
		"[root] module.package_with_patterns.aws_iam_policy.dead_letter (expand)" [label = "module.package_with_patterns.aws_iam_policy.dead_letter", shape = "box"]
		"[root] module.package_with_patterns.aws_iam_policy.logs (expand)" [label = "module.package_with_patterns.aws_iam_policy.logs", shape = "box"]
		"[root] module.package_with_patterns.aws_iam_policy.tracing (expand)" [label = "module.package_with_patterns.aws_iam_policy.tracing", shape = "box"]
		"[root] module.package_with_patterns.aws_iam_policy.vpc (expand)" [label = "module.package_with_patterns.aws_iam_policy.vpc", shape = "box"]
		"[root] module.package_with_patterns.aws_iam_role.lambda (expand)" [label = "module.package_with_patterns.aws_iam_role.lambda", shape = "box"]
		"[root] module.package_with_patterns.aws_iam_role_policy_attachment.additional_inline (expand)" [label = "module.package_with_patterns.aws_iam_role_policy_attachment.additional_inline", shape = "box"]
		"[root] module.package_with_patterns.aws_iam_role_policy_attachment.additional_json (expand)" [label = "module.package_with_patterns.aws_iam_role_policy_attachment.additional_json", shape = "box"]
		"[root] module.package_with_patterns.aws_iam_role_policy_attachment.additional_jsons (expand)" [label = "module.package_with_patterns.aws_iam_role_policy_attachment.additional_jsons", shape = "box"]
		"[root] module.package_with_patterns.aws_iam_role_policy_attachment.additional_many (expand)" [label = "module.package_with_patterns.aws_iam_role_policy_attachment.additional_many", shape = "box"]
		"[root] module.package_with_patterns.aws_iam_role_policy_attachment.additional_one (expand)" [label = "module.package_with_patterns.aws_iam_role_policy_attachment.additional_one", shape = "box"]
		"[root] module.package_with_patterns.aws_iam_role_policy_attachment.async (expand)" [label = "module.package_with_patterns.aws_iam_role_policy_attachment.async", shape = "box"]
		"[root] module.package_with_patterns.aws_iam_role_policy_attachment.dead_letter (expand)" [label = "module.package_with_patterns.aws_iam_role_policy_attachment.dead_letter", shape = "box"]
		"[root] module.package_with_patterns.aws_iam_role_policy_attachment.logs (expand)" [label = "module.package_with_patterns.aws_iam_role_policy_attachment.logs", shape = "box"]
		"[root] module.package_with_patterns.aws_iam_role_policy_attachment.tracing (expand)" [label = "module.package_with_patterns.aws_iam_role_policy_attachment.tracing", shape = "box"]
		"[root] module.package_with_patterns.aws_iam_role_policy_attachment.vpc (expand)" [label = "module.package_with_patterns.aws_iam_role_policy_attachment.vpc", shape = "box"]
		"[root] module.package_with_patterns.aws_lambda_event_source_mapping.this (expand)" [label = "module.package_with_patterns.aws_lambda_event_source_mapping.this", shape = "box"]
		"[root] module.package_with_patterns.aws_lambda_function.this (expand)" [label = "module.package_with_patterns.aws_lambda_function.this", shape = "box"]
		"[root] module.package_with_patterns.aws_lambda_function_event_invoke_config.this (expand)" [label = "module.package_with_patterns.aws_lambda_function_event_invoke_config.this", shape = "box"]
		"[root] module.package_with_patterns.aws_lambda_layer_version.this (expand)" [label = "module.package_with_patterns.aws_lambda_layer_version.this", shape = "box"]
		"[root] module.package_with_patterns.aws_lambda_permission.current_version_triggers (expand)" [label = "module.package_with_patterns.aws_lambda_permission.current_version_triggers", shape = "box"]
		"[root] module.package_with_patterns.aws_lambda_permission.unqualified_alias_triggers (expand)" [label = "module.package_with_patterns.aws_lambda_permission.unqualified_alias_triggers", shape = "box"]
		"[root] module.package_with_patterns.aws_lambda_provisioned_concurrency_config.current_version (expand)" [label = "module.package_with_patterns.aws_lambda_provisioned_concurrency_config.current_version", shape = "box"]
		"[root] module.package_with_patterns.aws_s3_bucket_object.lambda_package (expand)" [label = "module.package_with_patterns.aws_s3_bucket_object.lambda_package", shape = "box"]
		"[root] module.package_with_patterns.data.aws_arn.log_group_arn (expand)" [label = "module.package_with_patterns.data.aws_arn.log_group_arn", shape = "box"]
		"[root] module.package_with_patterns.data.aws_cloudwatch_log_group.lambda (expand)" [label = "module.package_with_patterns.data.aws_cloudwatch_log_group.lambda", shape = "box"]
		"[root] module.package_with_patterns.data.aws_iam_policy.tracing (expand)" [label = "module.package_with_patterns.data.aws_iam_policy.tracing", shape = "box"]
		"[root] module.package_with_patterns.data.aws_iam_policy.vpc (expand)" [label = "module.package_with_patterns.data.aws_iam_policy.vpc", shape = "box"]
		"[root] module.package_with_patterns.data.aws_iam_policy_document.additional_inline (expand)" [label = "module.package_with_patterns.data.aws_iam_policy_document.additional_inline", shape = "box"]
		"[root] module.package_with_patterns.data.aws_iam_policy_document.assume_role (expand)" [label = "module.package_with_patterns.data.aws_iam_policy_document.assume_role", shape = "box"]
		"[root] module.package_with_patterns.data.aws_iam_policy_document.async (expand)" [label = "module.package_with_patterns.data.aws_iam_policy_document.async", shape = "box"]
		"[root] module.package_with_patterns.data.aws_iam_policy_document.dead_letter (expand)" [label = "module.package_with_patterns.data.aws_iam_policy_document.dead_letter", shape = "box"]
		"[root] module.package_with_patterns.data.aws_iam_policy_document.logs (expand)" [label = "module.package_with_patterns.data.aws_iam_policy_document.logs", shape = "box"]
		"[root] module.package_with_patterns.data.aws_partition.current (expand)" [label = "module.package_with_patterns.data.aws_partition.current", shape = "box"]
		"[root] module.package_with_patterns.data.external.archive_prepare (expand)" [label = "module.package_with_patterns.data.external.archive_prepare", shape = "box"]
		"[root] module.package_with_patterns.local_file.archive_plan (expand)" [label = "module.package_with_patterns.local_file.archive_plan", shape = "box"]
		"[root] module.package_with_patterns.null_resource.archive (expand)" [label = "module.package_with_patterns.null_resource.archive", shape = "box"]
		"[root] module.package_with_pip_requirements_in_docker.aws_cloudwatch_log_group.lambda (expand)" [label = "module.package_with_pip_requirements_in_docker.aws_cloudwatch_log_group.lambda", shape = "box"]
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_policy.additional_inline (expand)" [label = "module.package_with_pip_requirements_in_docker.aws_iam_policy.additional_inline", shape = "box"]
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_policy.additional_json (expand)" [label = "module.package_with_pip_requirements_in_docker.aws_iam_policy.additional_json", shape = "box"]
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_policy.additional_jsons (expand)" [label = "module.package_with_pip_requirements_in_docker.aws_iam_policy.additional_jsons", shape = "box"]
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_policy.async (expand)" [label = "module.package_with_pip_requirements_in_docker.aws_iam_policy.async", shape = "box"]
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_policy.dead_letter (expand)" [label = "module.package_with_pip_requirements_in_docker.aws_iam_policy.dead_letter", shape = "box"]
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_policy.logs (expand)" [label = "module.package_with_pip_requirements_in_docker.aws_iam_policy.logs", shape = "box"]
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_policy.tracing (expand)" [label = "module.package_with_pip_requirements_in_docker.aws_iam_policy.tracing", shape = "box"]
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_policy.vpc (expand)" [label = "module.package_with_pip_requirements_in_docker.aws_iam_policy.vpc", shape = "box"]
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_role.lambda (expand)" [label = "module.package_with_pip_requirements_in_docker.aws_iam_role.lambda", shape = "box"]
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_role_policy_attachment.additional_inline (expand)" [label = "module.package_with_pip_requirements_in_docker.aws_iam_role_policy_attachment.additional_inline", shape = "box"]
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_role_policy_attachment.additional_json (expand)" [label = "module.package_with_pip_requirements_in_docker.aws_iam_role_policy_attachment.additional_json", shape = "box"]
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_role_policy_attachment.additional_jsons (expand)" [label = "module.package_with_pip_requirements_in_docker.aws_iam_role_policy_attachment.additional_jsons", shape = "box"]
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_role_policy_attachment.additional_many (expand)" [label = "module.package_with_pip_requirements_in_docker.aws_iam_role_policy_attachment.additional_many", shape = "box"]
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_role_policy_attachment.additional_one (expand)" [label = "module.package_with_pip_requirements_in_docker.aws_iam_role_policy_attachment.additional_one", shape = "box"]
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_role_policy_attachment.async (expand)" [label = "module.package_with_pip_requirements_in_docker.aws_iam_role_policy_attachment.async", shape = "box"]
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_role_policy_attachment.dead_letter (expand)" [label = "module.package_with_pip_requirements_in_docker.aws_iam_role_policy_attachment.dead_letter", shape = "box"]
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_role_policy_attachment.logs (expand)" [label = "module.package_with_pip_requirements_in_docker.aws_iam_role_policy_attachment.logs", shape = "box"]
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_role_policy_attachment.tracing (expand)" [label = "module.package_with_pip_requirements_in_docker.aws_iam_role_policy_attachment.tracing", shape = "box"]
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_role_policy_attachment.vpc (expand)" [label = "module.package_with_pip_requirements_in_docker.aws_iam_role_policy_attachment.vpc", shape = "box"]
		"[root] module.package_with_pip_requirements_in_docker.aws_lambda_event_source_mapping.this (expand)" [label = "module.package_with_pip_requirements_in_docker.aws_lambda_event_source_mapping.this", shape = "box"]
		"[root] module.package_with_pip_requirements_in_docker.aws_lambda_function.this (expand)" [label = "module.package_with_pip_requirements_in_docker.aws_lambda_function.this", shape = "box"]
		"[root] module.package_with_pip_requirements_in_docker.aws_lambda_function_event_invoke_config.this (expand)" [label = "module.package_with_pip_requirements_in_docker.aws_lambda_function_event_invoke_config.this", shape = "box"]
		"[root] module.package_with_pip_requirements_in_docker.aws_lambda_layer_version.this (expand)" [label = "module.package_with_pip_requirements_in_docker.aws_lambda_layer_version.this", shape = "box"]
		"[root] module.package_with_pip_requirements_in_docker.aws_lambda_permission.current_version_triggers (expand)" [label = "module.package_with_pip_requirements_in_docker.aws_lambda_permission.current_version_triggers", shape = "box"]
		"[root] module.package_with_pip_requirements_in_docker.aws_lambda_permission.unqualified_alias_triggers (expand)" [label = "module.package_with_pip_requirements_in_docker.aws_lambda_permission.unqualified_alias_triggers", shape = "box"]
		"[root] module.package_with_pip_requirements_in_docker.aws_lambda_provisioned_concurrency_config.current_version (expand)" [label = "module.package_with_pip_requirements_in_docker.aws_lambda_provisioned_concurrency_config.current_version", shape = "box"]
		"[root] module.package_with_pip_requirements_in_docker.aws_s3_bucket_object.lambda_package (expand)" [label = "module.package_with_pip_requirements_in_docker.aws_s3_bucket_object.lambda_package", shape = "box"]
		"[root] module.package_with_pip_requirements_in_docker.data.aws_arn.log_group_arn (expand)" [label = "module.package_with_pip_requirements_in_docker.data.aws_arn.log_group_arn", shape = "box"]
		"[root] module.package_with_pip_requirements_in_docker.data.aws_cloudwatch_log_group.lambda (expand)" [label = "module.package_with_pip_requirements_in_docker.data.aws_cloudwatch_log_group.lambda", shape = "box"]
		"[root] module.package_with_pip_requirements_in_docker.data.aws_iam_policy.tracing (expand)" [label = "module.package_with_pip_requirements_in_docker.data.aws_iam_policy.tracing", shape = "box"]
		"[root] module.package_with_pip_requirements_in_docker.data.aws_iam_policy.vpc (expand)" [label = "module.package_with_pip_requirements_in_docker.data.aws_iam_policy.vpc", shape = "box"]
		"[root] module.package_with_pip_requirements_in_docker.data.aws_iam_policy_document.additional_inline (expand)" [label = "module.package_with_pip_requirements_in_docker.data.aws_iam_policy_document.additional_inline", shape = "box"]
		"[root] module.package_with_pip_requirements_in_docker.data.aws_iam_policy_document.assume_role (expand)" [label = "module.package_with_pip_requirements_in_docker.data.aws_iam_policy_document.assume_role", shape = "box"]
		"[root] module.package_with_pip_requirements_in_docker.data.aws_iam_policy_document.async (expand)" [label = "module.package_with_pip_requirements_in_docker.data.aws_iam_policy_document.async", shape = "box"]
		"[root] module.package_with_pip_requirements_in_docker.data.aws_iam_policy_document.dead_letter (expand)" [label = "module.package_with_pip_requirements_in_docker.data.aws_iam_policy_document.dead_letter", shape = "box"]
		"[root] module.package_with_pip_requirements_in_docker.data.aws_iam_policy_document.logs (expand)" [label = "module.package_with_pip_requirements_in_docker.data.aws_iam_policy_document.logs", shape = "box"]
		"[root] module.package_with_pip_requirements_in_docker.data.aws_partition.current (expand)" [label = "module.package_with_pip_requirements_in_docker.data.aws_partition.current", shape = "box"]
		"[root] module.package_with_pip_requirements_in_docker.data.external.archive_prepare (expand)" [label = "module.package_with_pip_requirements_in_docker.data.external.archive_prepare", shape = "box"]
		"[root] module.package_with_pip_requirements_in_docker.local_file.archive_plan (expand)" [label = "module.package_with_pip_requirements_in_docker.local_file.archive_plan", shape = "box"]
		"[root] module.package_with_pip_requirements_in_docker.null_resource.archive (expand)" [label = "module.package_with_pip_requirements_in_docker.null_resource.archive", shape = "box"]
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"]" [label = "provider[\"registry.terraform.io/hashicorp/aws\"]", shape = "diamond"]
		"[root] provider[\"registry.terraform.io/hashicorp/external\"]" [label = "provider[\"registry.terraform.io/hashicorp/external\"]", shape = "diamond"]
		"[root] provider[\"registry.terraform.io/hashicorp/local\"]" [label = "provider[\"registry.terraform.io/hashicorp/local\"]", shape = "diamond"]
		"[root] provider[\"registry.terraform.io/hashicorp/null\"]" [label = "provider[\"registry.terraform.io/hashicorp/null\"]", shape = "diamond"]
		"[root] provider[\"registry.terraform.io/hashicorp/random\"]" [label = "provider[\"registry.terraform.io/hashicorp/random\"]", shape = "diamond"]
		"[root] random_pet.this (expand)" [label = "random_pet.this", shape = "box"]
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] module.lambda_function_from_package (close)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] module.lambda_layer (close)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] module.lambda_layer_pip_requirements (close)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] module.package_dir (close)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] module.package_dir_pip_dir (close)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] module.package_dir_without_pip_install (close)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] module.package_file (close)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] module.package_file_with_pip_requirements (close)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] module.package_with_commands_and_patterns (close)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] module.package_with_docker (close)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] module.package_with_patterns (close)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] module.package_with_pip_requirements_in_docker (close)"
		"[root] module.lambda_function_from_package (close)" -> "[root] module.lambda_function_from_package.aws_iam_role_policy_attachment.additional_inline (expand)"
		"[root] module.lambda_function_from_package (close)" -> "[root] module.lambda_function_from_package.aws_iam_role_policy_attachment.additional_json (expand)"
		"[root] module.lambda_function_from_package (close)" -> "[root] module.lambda_function_from_package.aws_iam_role_policy_attachment.additional_jsons (expand)"
		"[root] module.lambda_function_from_package (close)" -> "[root] module.lambda_function_from_package.aws_iam_role_policy_attachment.additional_many (expand)"
		"[root] module.lambda_function_from_package (close)" -> "[root] module.lambda_function_from_package.aws_iam_role_policy_attachment.additional_one (expand)"
		"[root] module.lambda_function_from_package (close)" -> "[root] module.lambda_function_from_package.aws_iam_role_policy_attachment.async (expand)"
		"[root] module.lambda_function_from_package (close)" -> "[root] module.lambda_function_from_package.aws_iam_role_policy_attachment.dead_letter (expand)"
		"[root] module.lambda_function_from_package (close)" -> "[root] module.lambda_function_from_package.aws_iam_role_policy_attachment.logs (expand)"
		"[root] module.lambda_function_from_package (close)" -> "[root] module.lambda_function_from_package.aws_iam_role_policy_attachment.tracing (expand)"
		"[root] module.lambda_function_from_package (close)" -> "[root] module.lambda_function_from_package.aws_iam_role_policy_attachment.vpc (expand)"
		"[root] module.lambda_function_from_package (close)" -> "[root] module.lambda_function_from_package.aws_lambda_function_event_invoke_config.this (expand)"
		"[root] module.lambda_function_from_package (close)" -> "[root] module.lambda_function_from_package.aws_lambda_permission.current_version_triggers (expand)"
		"[root] module.lambda_function_from_package (close)" -> "[root] module.lambda_function_from_package.aws_lambda_permission.unqualified_alias_triggers (expand)"
		"[root] module.lambda_function_from_package (close)" -> "[root] module.lambda_function_from_package.aws_lambda_provisioned_concurrency_config.current_version (expand)"
		"[root] module.lambda_function_from_package (close)" -> "[root] module.lambda_function_from_package.output.lambda_cloudwatch_log_group_arn (expand)"
		"[root] module.lambda_function_from_package (close)" -> "[root] module.lambda_function_from_package.output.lambda_cloudwatch_log_group_name (expand)"
		"[root] module.lambda_function_from_package (close)" -> "[root] module.lambda_function_from_package.output.lambda_event_source_mapping_function_arn (expand)"
		"[root] module.lambda_function_from_package (close)" -> "[root] module.lambda_function_from_package.output.lambda_event_source_mapping_state (expand)"
		"[root] module.lambda_function_from_package (close)" -> "[root] module.lambda_function_from_package.output.lambda_event_source_mapping_state_transition_reason (expand)"
		"[root] module.lambda_function_from_package (close)" -> "[root] module.lambda_function_from_package.output.lambda_event_source_mapping_uuid (expand)"
		"[root] module.lambda_function_from_package (close)" -> "[root] module.lambda_function_from_package.output.lambda_function_arn (expand)"
		"[root] module.lambda_function_from_package (close)" -> "[root] module.lambda_function_from_package.output.lambda_function_invoke_arn (expand)"
		"[root] module.lambda_function_from_package (close)" -> "[root] module.lambda_function_from_package.output.lambda_function_kms_key_arn (expand)"
		"[root] module.lambda_function_from_package (close)" -> "[root] module.lambda_function_from_package.output.lambda_function_last_modified (expand)"
		"[root] module.lambda_function_from_package (close)" -> "[root] module.lambda_function_from_package.output.lambda_function_name (expand)"
		"[root] module.lambda_function_from_package (close)" -> "[root] module.lambda_function_from_package.output.lambda_function_qualified_arn (expand)"
		"[root] module.lambda_function_from_package (close)" -> "[root] module.lambda_function_from_package.output.lambda_function_source_code_hash (expand)"
		"[root] module.lambda_function_from_package (close)" -> "[root] module.lambda_function_from_package.output.lambda_function_source_code_size (expand)"
		"[root] module.lambda_function_from_package (close)" -> "[root] module.lambda_function_from_package.output.lambda_function_version (expand)"
		"[root] module.lambda_function_from_package (close)" -> "[root] module.lambda_function_from_package.output.lambda_layer_arn (expand)"
		"[root] module.lambda_function_from_package (close)" -> "[root] module.lambda_function_from_package.output.lambda_layer_created_date (expand)"
		"[root] module.lambda_function_from_package (close)" -> "[root] module.lambda_function_from_package.output.lambda_layer_layer_arn (expand)"
		"[root] module.lambda_function_from_package (close)" -> "[root] module.lambda_function_from_package.output.lambda_layer_source_code_size (expand)"
		"[root] module.lambda_function_from_package (close)" -> "[root] module.lambda_function_from_package.output.lambda_layer_version (expand)"
		"[root] module.lambda_function_from_package (close)" -> "[root] module.lambda_function_from_package.output.lambda_role_arn (expand)"
		"[root] module.lambda_function_from_package (close)" -> "[root] module.lambda_function_from_package.output.lambda_role_name (expand)"
		"[root] module.lambda_function_from_package (close)" -> "[root] module.lambda_function_from_package.output.lambda_role_unique_id (expand)"
		"[root] module.lambda_function_from_package (close)" -> "[root] module.lambda_function_from_package.output.local_filename (expand)"
		"[root] module.lambda_function_from_package (close)" -> "[root] module.lambda_function_from_package.output.s3_object (expand)"
		"[root] module.lambda_function_from_package.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.lambda_function_from_package.var.cloudwatch_logs_kms_key_id (expand)"
		"[root] module.lambda_function_from_package.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.lambda_function_from_package.var.cloudwatch_logs_retention_in_days (expand)"
		"[root] module.lambda_function_from_package.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.lambda_function_from_package.var.cloudwatch_logs_tags (expand)"
		"[root] module.lambda_function_from_package.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.lambda_function_from_package.var.create (expand)"
		"[root] module.lambda_function_from_package.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.lambda_function_from_package.var.create_function (expand)"
		"[root] module.lambda_function_from_package.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.lambda_function_from_package.var.create_layer (expand)"
		"[root] module.lambda_function_from_package.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.lambda_function_from_package.var.function_name (expand)"
		"[root] module.lambda_function_from_package.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.lambda_function_from_package.var.lambda_at_edge (expand)"
		"[root] module.lambda_function_from_package.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.lambda_function_from_package.var.tags (expand)"
		"[root] module.lambda_function_from_package.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.lambda_function_from_package.var.use_existing_cloudwatch_log_group (expand)"
		"[root] module.lambda_function_from_package.aws_cloudwatch_log_group.lambda (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.lambda_function_from_package.aws_iam_policy.additional_inline (expand)" -> "[root] module.lambda_function_from_package.data.aws_iam_policy_document.additional_inline (expand)"
		"[root] module.lambda_function_from_package.aws_iam_policy.additional_inline (expand)" -> "[root] module.lambda_function_from_package.local.role_name (expand)"
		"[root] module.lambda_function_from_package.aws_iam_policy.additional_inline (expand)" -> "[root] module.lambda_function_from_package.var.policy_path (expand)"
		"[root] module.lambda_function_from_package.aws_iam_policy.additional_inline (expand)" -> "[root] module.lambda_function_from_package.var.tags (expand)"
		"[root] module.lambda_function_from_package.aws_iam_policy.additional_json (expand)" -> "[root] module.lambda_function_from_package.local.role_name (expand)"
		"[root] module.lambda_function_from_package.aws_iam_policy.additional_json (expand)" -> "[root] module.lambda_function_from_package.var.attach_policy_json (expand)"
		"[root] module.lambda_function_from_package.aws_iam_policy.additional_json (expand)" -> "[root] module.lambda_function_from_package.var.policy_json (expand)"
		"[root] module.lambda_function_from_package.aws_iam_policy.additional_json (expand)" -> "[root] module.lambda_function_from_package.var.policy_path (expand)"
		"[root] module.lambda_function_from_package.aws_iam_policy.additional_json (expand)" -> "[root] module.lambda_function_from_package.var.tags (expand)"
		"[root] module.lambda_function_from_package.aws_iam_policy.additional_json (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.lambda_function_from_package.aws_iam_policy.additional_jsons (expand)" -> "[root] module.lambda_function_from_package.local.role_name (expand)"
		"[root] module.lambda_function_from_package.aws_iam_policy.additional_jsons (expand)" -> "[root] module.lambda_function_from_package.var.attach_policy_jsons (expand)"
		"[root] module.lambda_function_from_package.aws_iam_policy.additional_jsons (expand)" -> "[root] module.lambda_function_from_package.var.number_of_policy_jsons (expand)"
		"[root] module.lambda_function_from_package.aws_iam_policy.additional_jsons (expand)" -> "[root] module.lambda_function_from_package.var.policy_jsons (expand)"
		"[root] module.lambda_function_from_package.aws_iam_policy.additional_jsons (expand)" -> "[root] module.lambda_function_from_package.var.policy_path (expand)"
		"[root] module.lambda_function_from_package.aws_iam_policy.additional_jsons (expand)" -> "[root] module.lambda_function_from_package.var.tags (expand)"
		"[root] module.lambda_function_from_package.aws_iam_policy.additional_jsons (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.lambda_function_from_package.aws_iam_policy.async (expand)" -> "[root] module.lambda_function_from_package.data.aws_iam_policy_document.async (expand)"
		"[root] module.lambda_function_from_package.aws_iam_policy.async (expand)" -> "[root] module.lambda_function_from_package.local.role_name (expand)"
		"[root] module.lambda_function_from_package.aws_iam_policy.async (expand)" -> "[root] module.lambda_function_from_package.var.policy_path (expand)"
		"[root] module.lambda_function_from_package.aws_iam_policy.async (expand)" -> "[root] module.lambda_function_from_package.var.tags (expand)"
		"[root] module.lambda_function_from_package.aws_iam_policy.dead_letter (expand)" -> "[root] module.lambda_function_from_package.data.aws_iam_policy_document.dead_letter (expand)"
		"[root] module.lambda_function_from_package.aws_iam_policy.dead_letter (expand)" -> "[root] module.lambda_function_from_package.local.role_name (expand)"
		"[root] module.lambda_function_from_package.aws_iam_policy.dead_letter (expand)" -> "[root] module.lambda_function_from_package.var.policy_path (expand)"
		"[root] module.lambda_function_from_package.aws_iam_policy.dead_letter (expand)" -> "[root] module.lambda_function_from_package.var.tags (expand)"
		"[root] module.lambda_function_from_package.aws_iam_policy.logs (expand)" -> "[root] module.lambda_function_from_package.data.aws_iam_policy_document.logs (expand)"
		"[root] module.lambda_function_from_package.aws_iam_policy.logs (expand)" -> "[root] module.lambda_function_from_package.local.role_name (expand)"
		"[root] module.lambda_function_from_package.aws_iam_policy.logs (expand)" -> "[root] module.lambda_function_from_package.var.policy_path (expand)"
		"[root] module.lambda_function_from_package.aws_iam_policy.tracing (expand)" -> "[root] module.lambda_function_from_package.data.aws_iam_policy.tracing (expand)"
		"[root] module.lambda_function_from_package.aws_iam_policy.tracing (expand)" -> "[root] module.lambda_function_from_package.local.role_name (expand)"
		"[root] module.lambda_function_from_package.aws_iam_policy.tracing (expand)" -> "[root] module.lambda_function_from_package.var.policy_path (expand)"
		"[root] module.lambda_function_from_package.aws_iam_policy.tracing (expand)" -> "[root] module.lambda_function_from_package.var.tags (expand)"
		"[root] module.lambda_function_from_package.aws_iam_policy.vpc (expand)" -> "[root] module.lambda_function_from_package.data.aws_iam_policy.vpc (expand)"
		"[root] module.lambda_function_from_package.aws_iam_policy.vpc (expand)" -> "[root] module.lambda_function_from_package.local.role_name (expand)"
		"[root] module.lambda_function_from_package.aws_iam_policy.vpc (expand)" -> "[root] module.lambda_function_from_package.var.policy_path (expand)"
		"[root] module.lambda_function_from_package.aws_iam_policy.vpc (expand)" -> "[root] module.lambda_function_from_package.var.tags (expand)"
		"[root] module.lambda_function_from_package.aws_iam_role.lambda (expand)" -> "[root] module.lambda_function_from_package.data.aws_iam_policy_document.assume_role (expand)"
		"[root] module.lambda_function_from_package.aws_iam_role.lambda (expand)" -> "[root] module.lambda_function_from_package.local.role_name (expand)"
		"[root] module.lambda_function_from_package.aws_iam_role.lambda (expand)" -> "[root] module.lambda_function_from_package.var.role_description (expand)"
		"[root] module.lambda_function_from_package.aws_iam_role.lambda (expand)" -> "[root] module.lambda_function_from_package.var.role_force_detach_policies (expand)"
		"[root] module.lambda_function_from_package.aws_iam_role.lambda (expand)" -> "[root] module.lambda_function_from_package.var.role_path (expand)"
		"[root] module.lambda_function_from_package.aws_iam_role.lambda (expand)" -> "[root] module.lambda_function_from_package.var.role_permissions_boundary (expand)"
		"[root] module.lambda_function_from_package.aws_iam_role.lambda (expand)" -> "[root] module.lambda_function_from_package.var.role_tags (expand)"
		"[root] module.lambda_function_from_package.aws_iam_role.lambda (expand)" -> "[root] module.lambda_function_from_package.var.tags (expand)"
		"[root] module.lambda_function_from_package.aws_iam_role_policy_attachment.additional_inline (expand)" -> "[root] module.lambda_function_from_package.aws_iam_policy.additional_inline (expand)"
		"[root] module.lambda_function_from_package.aws_iam_role_policy_attachment.additional_inline (expand)" -> "[root] module.lambda_function_from_package.aws_iam_role.lambda (expand)"
		"[root] module.lambda_function_from_package.aws_iam_role_policy_attachment.additional_json (expand)" -> "[root] module.lambda_function_from_package.aws_iam_policy.additional_json (expand)"
		"[root] module.lambda_function_from_package.aws_iam_role_policy_attachment.additional_json (expand)" -> "[root] module.lambda_function_from_package.aws_iam_role.lambda (expand)"
		"[root] module.lambda_function_from_package.aws_iam_role_policy_attachment.additional_jsons (expand)" -> "[root] module.lambda_function_from_package.aws_iam_policy.additional_jsons (expand)"
		"[root] module.lambda_function_from_package.aws_iam_role_policy_attachment.additional_jsons (expand)" -> "[root] module.lambda_function_from_package.aws_iam_role.lambda (expand)"
		"[root] module.lambda_function_from_package.aws_iam_role_policy_attachment.additional_many (expand)" -> "[root] module.lambda_function_from_package.aws_iam_role.lambda (expand)"
		"[root] module.lambda_function_from_package.aws_iam_role_policy_attachment.additional_many (expand)" -> "[root] module.lambda_function_from_package.var.attach_policies (expand)"
		"[root] module.lambda_function_from_package.aws_iam_role_policy_attachment.additional_many (expand)" -> "[root] module.lambda_function_from_package.var.number_of_policies (expand)"
		"[root] module.lambda_function_from_package.aws_iam_role_policy_attachment.additional_many (expand)" -> "[root] module.lambda_function_from_package.var.policies (expand)"
		"[root] module.lambda_function_from_package.aws_iam_role_policy_attachment.additional_one (expand)" -> "[root] module.lambda_function_from_package.aws_iam_role.lambda (expand)"
		"[root] module.lambda_function_from_package.aws_iam_role_policy_attachment.additional_one (expand)" -> "[root] module.lambda_function_from_package.var.attach_policy (expand)"
		"[root] module.lambda_function_from_package.aws_iam_role_policy_attachment.additional_one (expand)" -> "[root] module.lambda_function_from_package.var.policy (expand)"
		"[root] module.lambda_function_from_package.aws_iam_role_policy_attachment.async (expand)" -> "[root] module.lambda_function_from_package.aws_iam_policy.async (expand)"
		"[root] module.lambda_function_from_package.aws_iam_role_policy_attachment.async (expand)" -> "[root] module.lambda_function_from_package.aws_iam_role.lambda (expand)"
		"[root] module.lambda_function_from_package.aws_iam_role_policy_attachment.dead_letter (expand)" -> "[root] module.lambda_function_from_package.aws_iam_policy.dead_letter (expand)"
		"[root] module.lambda_function_from_package.aws_iam_role_policy_attachment.dead_letter (expand)" -> "[root] module.lambda_function_from_package.aws_iam_role.lambda (expand)"
		"[root] module.lambda_function_from_package.aws_iam_role_policy_attachment.logs (expand)" -> "[root] module.lambda_function_from_package.aws_iam_policy.logs (expand)"
		"[root] module.lambda_function_from_package.aws_iam_role_policy_attachment.logs (expand)" -> "[root] module.lambda_function_from_package.aws_iam_role.lambda (expand)"
		"[root] module.lambda_function_from_package.aws_iam_role_policy_attachment.tracing (expand)" -> "[root] module.lambda_function_from_package.aws_iam_policy.tracing (expand)"
		"[root] module.lambda_function_from_package.aws_iam_role_policy_attachment.tracing (expand)" -> "[root] module.lambda_function_from_package.aws_iam_role.lambda (expand)"
		"[root] module.lambda_function_from_package.aws_iam_role_policy_attachment.vpc (expand)" -> "[root] module.lambda_function_from_package.aws_iam_policy.vpc (expand)"
		"[root] module.lambda_function_from_package.aws_iam_role_policy_attachment.vpc (expand)" -> "[root] module.lambda_function_from_package.aws_iam_role.lambda (expand)"
		"[root] module.lambda_function_from_package.aws_lambda_event_source_mapping.this (expand)" -> "[root] module.lambda_function_from_package.aws_lambda_function.this (expand)"
		"[root] module.lambda_function_from_package.aws_lambda_event_source_mapping.this (expand)" -> "[root] module.lambda_function_from_package.var.create_unqualified_alias_allowed_triggers (expand)"
		"[root] module.lambda_function_from_package.aws_lambda_event_source_mapping.this (expand)" -> "[root] module.lambda_function_from_package.var.event_source_mapping (expand)"
		"[root] module.lambda_function_from_package.aws_lambda_function.this (expand)" -> "[root] module.lambda_function_from_package.aws_cloudwatch_log_group.lambda (expand)"
		"[root] module.lambda_function_from_package.aws_lambda_function.this (expand)" -> "[root] module.lambda_function_from_package.aws_iam_role.lambda (expand)"
		"[root] module.lambda_function_from_package.aws_lambda_function.this (expand)" -> "[root] module.lambda_function_from_package.local.filename (expand)"
		"[root] module.lambda_function_from_package.aws_lambda_function.this (expand)" -> "[root] module.lambda_function_from_package.local.s3_bucket (expand)"
		"[root] module.lambda_function_from_package.aws_lambda_function.this (expand)" -> "[root] module.lambda_function_from_package.local.s3_object_version (expand)"
		"[root] module.lambda_function_from_package.aws_lambda_function.this (expand)" -> "[root] module.lambda_function_from_package.local.was_missing (expand)"
		"[root] module.lambda_function_from_package.aws_lambda_function.this (expand)" -> "[root] module.lambda_function_from_package.var.architectures (expand)"
		"[root] module.lambda_function_from_package.aws_lambda_function.this (expand)" -> "[root] module.lambda_function_from_package.var.dead_letter_target_arn (expand)"
		"[root] module.lambda_function_from_package.aws_lambda_function.this (expand)" -> "[root] module.lambda_function_from_package.var.description (expand)"
		"[root] module.lambda_function_from_package.aws_lambda_function.this (expand)" -> "[root] module.lambda_function_from_package.var.environment_variables (expand)"
		"[root] module.lambda_function_from_package.aws_lambda_function.this (expand)" -> "[root] module.lambda_function_from_package.var.file_system_arn (expand)"
		"[root] module.lambda_function_from_package.aws_lambda_function.this (expand)" -> "[root] module.lambda_function_from_package.var.file_system_local_mount_path (expand)"
		"[root] module.lambda_function_from_package.aws_lambda_function.this (expand)" -> "[root] module.lambda_function_from_package.var.handler (expand)"
		"[root] module.lambda_function_from_package.aws_lambda_function.this (expand)" -> "[root] module.lambda_function_from_package.var.ignore_source_code_hash (expand)"
		"[root] module.lambda_function_from_package.aws_lambda_function.this (expand)" -> "[root] module.lambda_function_from_package.var.image_config_command (expand)"
		"[root] module.lambda_function_from_package.aws_lambda_function.this (expand)" -> "[root] module.lambda_function_from_package.var.image_config_entry_point (expand)"
		"[root] module.lambda_function_from_package.aws_lambda_function.this (expand)" -> "[root] module.lambda_function_from_package.var.image_config_working_directory (expand)"
		"[root] module.lambda_function_from_package.aws_lambda_function.this (expand)" -> "[root] module.lambda_function_from_package.var.image_uri (expand)"
		"[root] module.lambda_function_from_package.aws_lambda_function.this (expand)" -> "[root] module.lambda_function_from_package.var.kms_key_arn (expand)"
		"[root] module.lambda_function_from_package.aws_lambda_function.this (expand)" -> "[root] module.lambda_function_from_package.var.lambda_role (expand)"
		"[root] module.lambda_function_from_package.aws_lambda_function.this (expand)" -> "[root] module.lambda_function_from_package.var.layers (expand)"
		"[root] module.lambda_function_from_package.aws_lambda_function.this (expand)" -> "[root] module.lambda_function_from_package.var.memory_size (expand)"
		"[root] module.lambda_function_from_package.aws_lambda_function.this (expand)" -> "[root] module.lambda_function_from_package.var.package_type (expand)"
		"[root] module.lambda_function_from_package.aws_lambda_function.this (expand)" -> "[root] module.lambda_function_from_package.var.publish (expand)"
		"[root] module.lambda_function_from_package.aws_lambda_function.this (expand)" -> "[root] module.lambda_function_from_package.var.reserved_concurrent_executions (expand)"
		"[root] module.lambda_function_from_package.aws_lambda_function.this (expand)" -> "[root] module.lambda_function_from_package.var.timeout (expand)"
		"[root] module.lambda_function_from_package.aws_lambda_function.this (expand)" -> "[root] module.lambda_function_from_package.var.tracing_mode (expand)"
		"[root] module.lambda_function_from_package.aws_lambda_function.this (expand)" -> "[root] module.lambda_function_from_package.var.vpc_security_group_ids (expand)"
		"[root] module.lambda_function_from_package.aws_lambda_function.this (expand)" -> "[root] module.lambda_function_from_package.var.vpc_subnet_ids (expand)"
		"[root] module.lambda_function_from_package.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.lambda_function_from_package.aws_lambda_function.this (expand)"
		"[root] module.lambda_function_from_package.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.lambda_function_from_package.local.qualifiers (expand)"
		"[root] module.lambda_function_from_package.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.lambda_function_from_package.var.create_async_event_config (expand)"
		"[root] module.lambda_function_from_package.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.lambda_function_from_package.var.destination_on_failure (expand)"
		"[root] module.lambda_function_from_package.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.lambda_function_from_package.var.destination_on_success (expand)"
		"[root] module.lambda_function_from_package.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.lambda_function_from_package.var.maximum_event_age_in_seconds (expand)"
		"[root] module.lambda_function_from_package.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.lambda_function_from_package.var.maximum_retry_attempts (expand)"
		"[root] module.lambda_function_from_package.aws_lambda_layer_version.this (expand)" -> "[root] module.lambda_function_from_package.local.filename (expand)"
		"[root] module.lambda_function_from_package.aws_lambda_layer_version.this (expand)" -> "[root] module.lambda_function_from_package.local.s3_bucket (expand)"
		"[root] module.lambda_function_from_package.aws_lambda_layer_version.this (expand)" -> "[root] module.lambda_function_from_package.local.s3_object_version (expand)"
		"[root] module.lambda_function_from_package.aws_lambda_layer_version.this (expand)" -> "[root] module.lambda_function_from_package.local.was_missing (expand)"
		"[root] module.lambda_function_from_package.aws_lambda_layer_version.this (expand)" -> "[root] module.lambda_function_from_package.var.compatible_architectures (expand)"
		"[root] module.lambda_function_from_package.aws_lambda_layer_version.this (expand)" -> "[root] module.lambda_function_from_package.var.compatible_runtimes (expand)"
		"[root] module.lambda_function_from_package.aws_lambda_layer_version.this (expand)" -> "[root] module.lambda_function_from_package.var.create_layer (expand)"
		"[root] module.lambda_function_from_package.aws_lambda_layer_version.this (expand)" -> "[root] module.lambda_function_from_package.var.description (expand)"
		"[root] module.lambda_function_from_package.aws_lambda_layer_version.this (expand)" -> "[root] module.lambda_function_from_package.var.ignore_source_code_hash (expand)"
		"[root] module.lambda_function_from_package.aws_lambda_layer_version.this (expand)" -> "[root] module.lambda_function_from_package.var.layer_name (expand)"
		"[root] module.lambda_function_from_package.aws_lambda_layer_version.this (expand)" -> "[root] module.lambda_function_from_package.var.license_info (expand)"
		"[root] module.lambda_function_from_package.aws_lambda_permission.current_version_triggers (expand)" -> "[root] module.lambda_function_from_package.aws_lambda_function.this (expand)"
		"[root] module.lambda_function_from_package.aws_lambda_permission.current_version_triggers (expand)" -> "[root] module.lambda_function_from_package.var.allowed_triggers (expand)"
		"[root] module.lambda_function_from_package.aws_lambda_permission.current_version_triggers (expand)" -> "[root] module.lambda_function_from_package.var.create_current_version_allowed_triggers (expand)"
		"[root] module.lambda_function_from_package.aws_lambda_permission.unqualified_alias_triggers (expand)" -> "[root] module.lambda_function_from_package.aws_lambda_function.this (expand)"
		"[root] module.lambda_function_from_package.aws_lambda_permission.unqualified_alias_triggers (expand)" -> "[root] module.lambda_function_from_package.var.allowed_triggers (expand)"
		"[root] module.lambda_function_from_package.aws_lambda_permission.unqualified_alias_triggers (expand)" -> "[root] module.lambda_function_from_package.var.create_unqualified_alias_allowed_triggers (expand)"
		"[root] module.lambda_function_from_package.aws_lambda_provisioned_concurrency_config.current_version (expand)" -> "[root] module.lambda_function_from_package.aws_lambda_function.this (expand)"
		"[root] module.lambda_function_from_package.aws_lambda_provisioned_concurrency_config.current_version (expand)" -> "[root] module.lambda_function_from_package.var.provisioned_concurrent_executions (expand)"
		"[root] module.lambda_function_from_package.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.lambda_function_from_package.local.s3_key (expand)"
		"[root] module.lambda_function_from_package.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.lambda_function_from_package.null_resource.archive (expand)"
		"[root] module.lambda_function_from_package.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.lambda_function_from_package.var.s3_acl (expand)"
		"[root] module.lambda_function_from_package.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.lambda_function_from_package.var.s3_bucket (expand)"
		"[root] module.lambda_function_from_package.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.lambda_function_from_package.var.s3_object_storage_class (expand)"
		"[root] module.lambda_function_from_package.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.lambda_function_from_package.var.s3_object_tags (expand)"
		"[root] module.lambda_function_from_package.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.lambda_function_from_package.var.s3_server_side_encryption (expand)"
		"[root] module.lambda_function_from_package.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.lambda_function_from_package.var.tags (expand)"
		"[root] module.lambda_function_from_package.aws_s3_bucket_object.lambda_package (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.lambda_function_from_package.data.aws_arn.log_group_arn (expand)" -> "[root] module.lambda_function_from_package.local.create_role (expand)"
		"[root] module.lambda_function_from_package.data.aws_arn.log_group_arn (expand)" -> "[root] module.lambda_function_from_package.local.log_group_arn_regional (expand)"
		"[root] module.lambda_function_from_package.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.lambda_function_from_package.var.create (expand)"
		"[root] module.lambda_function_from_package.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.lambda_function_from_package.var.create_function (expand)"
		"[root] module.lambda_function_from_package.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.lambda_function_from_package.var.create_layer (expand)"
		"[root] module.lambda_function_from_package.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.lambda_function_from_package.var.function_name (expand)"
		"[root] module.lambda_function_from_package.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.lambda_function_from_package.var.lambda_at_edge (expand)"
		"[root] module.lambda_function_from_package.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.lambda_function_from_package.var.use_existing_cloudwatch_log_group (expand)"
		"[root] module.lambda_function_from_package.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.lambda_function_from_package.data.aws_iam_policy.tracing (expand)" -> "[root] module.lambda_function_from_package.data.aws_partition.current (expand)"
		"[root] module.lambda_function_from_package.data.aws_iam_policy.tracing (expand)" -> "[root] module.lambda_function_from_package.local.create_role (expand)"
		"[root] module.lambda_function_from_package.data.aws_iam_policy.tracing (expand)" -> "[root] module.lambda_function_from_package.var.attach_tracing_policy (expand)"
		"[root] module.lambda_function_from_package.data.aws_iam_policy.vpc (expand)" -> "[root] module.lambda_function_from_package.data.aws_partition.current (expand)"
		"[root] module.lambda_function_from_package.data.aws_iam_policy.vpc (expand)" -> "[root] module.lambda_function_from_package.local.create_role (expand)"
		"[root] module.lambda_function_from_package.data.aws_iam_policy.vpc (expand)" -> "[root] module.lambda_function_from_package.var.attach_network_policy (expand)"
		"[root] module.lambda_function_from_package.data.aws_iam_policy_document.additional_inline (expand)" -> "[root] module.lambda_function_from_package.local.create_role (expand)"
		"[root] module.lambda_function_from_package.data.aws_iam_policy_document.additional_inline (expand)" -> "[root] module.lambda_function_from_package.var.attach_policy_statements (expand)"
		"[root] module.lambda_function_from_package.data.aws_iam_policy_document.additional_inline (expand)" -> "[root] module.lambda_function_from_package.var.policy_statements (expand)"
		"[root] module.lambda_function_from_package.data.aws_iam_policy_document.additional_inline (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.lambda_function_from_package.data.aws_iam_policy_document.assume_role (expand)" -> "[root] module.lambda_function_from_package.local.create_role (expand)"
		"[root] module.lambda_function_from_package.data.aws_iam_policy_document.assume_role (expand)" -> "[root] module.lambda_function_from_package.local.trusted_entities_principals (expand)"
		"[root] module.lambda_function_from_package.data.aws_iam_policy_document.assume_role (expand)" -> "[root] module.lambda_function_from_package.local.trusted_entities_services (expand)"
		"[root] module.lambda_function_from_package.data.aws_iam_policy_document.assume_role (expand)" -> "[root] module.lambda_function_from_package.var.assume_role_policy_statements (expand)"
		"[root] module.lambda_function_from_package.data.aws_iam_policy_document.assume_role (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.lambda_function_from_package.data.aws_iam_policy_document.async (expand)" -> "[root] module.lambda_function_from_package.local.create_role (expand)"
		"[root] module.lambda_function_from_package.data.aws_iam_policy_document.async (expand)" -> "[root] module.lambda_function_from_package.var.attach_async_event_policy (expand)"
		"[root] module.lambda_function_from_package.data.aws_iam_policy_document.async (expand)" -> "[root] module.lambda_function_from_package.var.destination_on_failure (expand)"
		"[root] module.lambda_function_from_package.data.aws_iam_policy_document.async (expand)" -> "[root] module.lambda_function_from_package.var.destination_on_success (expand)"
		"[root] module.lambda_function_from_package.data.aws_iam_policy_document.async (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.lambda_function_from_package.data.aws_iam_policy_document.dead_letter (expand)" -> "[root] module.lambda_function_from_package.local.create_role (expand)"
		"[root] module.lambda_function_from_package.data.aws_iam_policy_document.dead_letter (expand)" -> "[root] module.lambda_function_from_package.var.attach_dead_letter_policy (expand)"
		"[root] module.lambda_function_from_package.data.aws_iam_policy_document.dead_letter (expand)" -> "[root] module.lambda_function_from_package.var.dead_letter_target_arn (expand)"
		"[root] module.lambda_function_from_package.data.aws_iam_policy_document.dead_letter (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.lambda_function_from_package.data.aws_iam_policy_document.logs (expand)" -> "[root] module.lambda_function_from_package.local.log_group_arn (expand)"
		"[root] module.lambda_function_from_package.data.aws_iam_policy_document.logs (expand)" -> "[root] module.lambda_function_from_package.var.attach_cloudwatch_logs_policy (expand)"
		"[root] module.lambda_function_from_package.data.aws_partition.current (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.data.aws_partition.current (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.lambda_function_from_package.data.external.archive_prepare (expand)" -> "[root] module.lambda_function_from_package.local.python (expand)"
		"[root] module.lambda_function_from_package.data.external.archive_prepare (expand)" -> "[root] module.lambda_function_from_package.var.artifacts_dir (expand)"
		"[root] module.lambda_function_from_package.data.external.archive_prepare (expand)" -> "[root] module.lambda_function_from_package.var.build_in_docker (expand)"
		"[root] module.lambda_function_from_package.data.external.archive_prepare (expand)" -> "[root] module.lambda_function_from_package.var.create (expand)"
		"[root] module.lambda_function_from_package.data.external.archive_prepare (expand)" -> "[root] module.lambda_function_from_package.var.create_package (expand)"
		"[root] module.lambda_function_from_package.data.external.archive_prepare (expand)" -> "[root] module.lambda_function_from_package.var.docker_build_root (expand)"
		"[root] module.lambda_function_from_package.data.external.archive_prepare (expand)" -> "[root] module.lambda_function_from_package.var.docker_file (expand)"
		"[root] module.lambda_function_from_package.data.external.archive_prepare (expand)" -> "[root] module.lambda_function_from_package.var.docker_image (expand)"
		"[root] module.lambda_function_from_package.data.external.archive_prepare (expand)" -> "[root] module.lambda_function_from_package.var.docker_pip_cache (expand)"
		"[root] module.lambda_function_from_package.data.external.archive_prepare (expand)" -> "[root] module.lambda_function_from_package.var.docker_with_ssh_agent (expand)"
		"[root] module.lambda_function_from_package.data.external.archive_prepare (expand)" -> "[root] module.lambda_function_from_package.var.hash_extra (expand)"
		"[root] module.lambda_function_from_package.data.external.archive_prepare (expand)" -> "[root] module.lambda_function_from_package.var.recreate_missing_package (expand)"
		"[root] module.lambda_function_from_package.data.external.archive_prepare (expand)" -> "[root] module.lambda_function_from_package.var.runtime (expand)"
		"[root] module.lambda_function_from_package.data.external.archive_prepare (expand)" -> "[root] module.lambda_function_from_package.var.source_path (expand)"
		"[root] module.lambda_function_from_package.data.external.archive_prepare (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/external\"]"
		"[root] module.lambda_function_from_package.local.archive_filename (expand)" -> "[root] module.lambda_function_from_package.data.external.archive_prepare (expand)"
		"[root] module.lambda_function_from_package.local.archive_was_missing (expand)" -> "[root] module.lambda_function_from_package.data.external.archive_prepare (expand)"
		"[root] module.lambda_function_from_package.local.create_role (expand)" -> "[root] module.lambda_function_from_package.var.create (expand)"
		"[root] module.lambda_function_from_package.local.create_role (expand)" -> "[root] module.lambda_function_from_package.var.create_function (expand)"
		"[root] module.lambda_function_from_package.local.create_role (expand)" -> "[root] module.lambda_function_from_package.var.create_layer (expand)"
		"[root] module.lambda_function_from_package.local.create_role (expand)" -> "[root] module.lambda_function_from_package.var.create_role (expand)"
		"[root] module.lambda_function_from_package.local.filename (expand)" -> "[root] module.lambda_function_from_package.local.archive_filename (expand)"
		"[root] module.lambda_function_from_package.local.filename (expand)" -> "[root] module.lambda_function_from_package.var.local_existing_package (expand)"
		"[root] module.lambda_function_from_package.local.filename (expand)" -> "[root] module.lambda_function_from_package.var.store_on_s3 (expand)"
		"[root] module.lambda_function_from_package.local.log_group_arn (expand)" -> "[root] module.lambda_function_from_package.data.aws_arn.log_group_arn (expand)"
		"[root] module.lambda_function_from_package.local.log_group_arn_regional (expand)" -> "[root] module.lambda_function_from_package.aws_cloudwatch_log_group.lambda (expand)"
		"[root] module.lambda_function_from_package.local.log_group_arn_regional (expand)" -> "[root] module.lambda_function_from_package.data.aws_cloudwatch_log_group.lambda (expand)"
		"[root] module.lambda_function_from_package.local.log_group_name (expand)" -> "[root] module.lambda_function_from_package.aws_cloudwatch_log_group.lambda (expand)"
		"[root] module.lambda_function_from_package.local.log_group_name (expand)" -> "[root] module.lambda_function_from_package.data.aws_cloudwatch_log_group.lambda (expand)"
		"[root] module.lambda_function_from_package.local.python (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.local.qualifiers (expand)" -> "[root] module.lambda_function_from_package.var.create_current_version_async_event_config (expand)"
		"[root] module.lambda_function_from_package.local.qualifiers (expand)" -> "[root] module.lambda_function_from_package.var.create_unqualified_alias_async_event_config (expand)"
		"[root] module.lambda_function_from_package.local.role_name (expand)" -> "[root] module.lambda_function_from_package.local.create_role (expand)"
		"[root] module.lambda_function_from_package.local.role_name (expand)" -> "[root] module.lambda_function_from_package.var.function_name (expand)"
		"[root] module.lambda_function_from_package.local.role_name (expand)" -> "[root] module.lambda_function_from_package.var.role_name (expand)"
		"[root] module.lambda_function_from_package.local.s3_bucket (expand)" -> "[root] module.lambda_function_from_package.var.s3_bucket (expand)"
		"[root] module.lambda_function_from_package.local.s3_bucket (expand)" -> "[root] module.lambda_function_from_package.var.s3_existing_package (expand)"
		"[root] module.lambda_function_from_package.local.s3_bucket (expand)" -> "[root] module.lambda_function_from_package.var.store_on_s3 (expand)"
		"[root] module.lambda_function_from_package.local.s3_key (expand)" -> "[root] module.lambda_function_from_package.local.archive_filename (expand)"
		"[root] module.lambda_function_from_package.local.s3_key (expand)" -> "[root] module.lambda_function_from_package.var.s3_existing_package (expand)"
		"[root] module.lambda_function_from_package.local.s3_key (expand)" -> "[root] module.lambda_function_from_package.var.s3_prefix (expand)"
		"[root] module.lambda_function_from_package.local.s3_key (expand)" -> "[root] module.lambda_function_from_package.var.store_on_s3 (expand)"
		"[root] module.lambda_function_from_package.local.s3_object_version (expand)" -> "[root] module.lambda_function_from_package.aws_s3_bucket_object.lambda_package (expand)"
		"[root] module.lambda_function_from_package.local.trusted_entities_principals (expand)" -> "[root] module.lambda_function_from_package.var.trusted_entities (expand)"
		"[root] module.lambda_function_from_package.local.trusted_entities_services (expand)" -> "[root] module.lambda_function_from_package.var.lambda_at_edge (expand)"
		"[root] module.lambda_function_from_package.local.trusted_entities_services (expand)" -> "[root] module.lambda_function_from_package.var.trusted_entities (expand)"
		"[root] module.lambda_function_from_package.local.was_missing (expand)" -> "[root] module.lambda_function_from_package.local.archive_was_missing (expand)"
		"[root] module.lambda_function_from_package.local.was_missing (expand)" -> "[root] module.lambda_function_from_package.var.local_existing_package (expand)"
		"[root] module.lambda_function_from_package.local_file.archive_plan (expand)" -> "[root] module.lambda_function_from_package.data.external.archive_prepare (expand)"
		"[root] module.lambda_function_from_package.local_file.archive_plan (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/local\"]"
		"[root] module.lambda_function_from_package.null_resource.archive (expand)" -> "[root] module.lambda_function_from_package.local_file.archive_plan (expand)"
		"[root] module.lambda_function_from_package.null_resource.archive (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/null\"]"
		"[root] module.lambda_function_from_package.null_resource.archive (expand)" -> "[root] provisioner.local-exec"
		"[root] module.lambda_function_from_package.output.lambda_cloudwatch_log_group_arn (expand)" -> "[root] module.lambda_function_from_package.local.log_group_arn (expand)"
		"[root] module.lambda_function_from_package.output.lambda_cloudwatch_log_group_name (expand)" -> "[root] module.lambda_function_from_package.local.log_group_name (expand)"
		"[root] module.lambda_function_from_package.output.lambda_event_source_mapping_function_arn (expand)" -> "[root] module.lambda_function_from_package.aws_lambda_event_source_mapping.this (expand)"
		"[root] module.lambda_function_from_package.output.lambda_event_source_mapping_state (expand)" -> "[root] module.lambda_function_from_package.aws_lambda_event_source_mapping.this (expand)"
		"[root] module.lambda_function_from_package.output.lambda_event_source_mapping_state_transition_reason (expand)" -> "[root] module.lambda_function_from_package.aws_lambda_event_source_mapping.this (expand)"
		"[root] module.lambda_function_from_package.output.lambda_event_source_mapping_uuid (expand)" -> "[root] module.lambda_function_from_package.aws_lambda_event_source_mapping.this (expand)"
		"[root] module.lambda_function_from_package.output.lambda_function_arn (expand)" -> "[root] module.lambda_function_from_package.aws_lambda_function.this (expand)"
		"[root] module.lambda_function_from_package.output.lambda_function_invoke_arn (expand)" -> "[root] module.lambda_function_from_package.aws_lambda_function.this (expand)"
		"[root] module.lambda_function_from_package.output.lambda_function_kms_key_arn (expand)" -> "[root] module.lambda_function_from_package.aws_lambda_function.this (expand)"
		"[root] module.lambda_function_from_package.output.lambda_function_last_modified (expand)" -> "[root] module.lambda_function_from_package.aws_lambda_function.this (expand)"
		"[root] module.lambda_function_from_package.output.lambda_function_name (expand)" -> "[root] module.lambda_function_from_package.aws_lambda_function.this (expand)"
		"[root] module.lambda_function_from_package.output.lambda_function_qualified_arn (expand)" -> "[root] module.lambda_function_from_package.aws_lambda_function.this (expand)"
		"[root] module.lambda_function_from_package.output.lambda_function_source_code_hash (expand)" -> "[root] module.lambda_function_from_package.aws_lambda_function.this (expand)"
		"[root] module.lambda_function_from_package.output.lambda_function_source_code_size (expand)" -> "[root] module.lambda_function_from_package.aws_lambda_function.this (expand)"
		"[root] module.lambda_function_from_package.output.lambda_function_version (expand)" -> "[root] module.lambda_function_from_package.aws_lambda_function.this (expand)"
		"[root] module.lambda_function_from_package.output.lambda_layer_arn (expand)" -> "[root] module.lambda_function_from_package.aws_lambda_layer_version.this (expand)"
		"[root] module.lambda_function_from_package.output.lambda_layer_created_date (expand)" -> "[root] module.lambda_function_from_package.aws_lambda_layer_version.this (expand)"
		"[root] module.lambda_function_from_package.output.lambda_layer_layer_arn (expand)" -> "[root] module.lambda_function_from_package.aws_lambda_layer_version.this (expand)"
		"[root] module.lambda_function_from_package.output.lambda_layer_source_code_size (expand)" -> "[root] module.lambda_function_from_package.aws_lambda_layer_version.this (expand)"
		"[root] module.lambda_function_from_package.output.lambda_layer_version (expand)" -> "[root] module.lambda_function_from_package.aws_lambda_layer_version.this (expand)"
		"[root] module.lambda_function_from_package.output.lambda_role_arn (expand)" -> "[root] module.lambda_function_from_package.aws_iam_role.lambda (expand)"
		"[root] module.lambda_function_from_package.output.lambda_role_name (expand)" -> "[root] module.lambda_function_from_package.aws_iam_role.lambda (expand)"
		"[root] module.lambda_function_from_package.output.lambda_role_unique_id (expand)" -> "[root] module.lambda_function_from_package.aws_iam_role.lambda (expand)"
		"[root] module.lambda_function_from_package.output.local_filename (expand)" -> "[root] module.lambda_function_from_package.local.filename (expand)"
		"[root] module.lambda_function_from_package.output.s3_object (expand)" -> "[root] module.lambda_function_from_package.local.s3_bucket (expand)"
		"[root] module.lambda_function_from_package.output.s3_object (expand)" -> "[root] module.lambda_function_from_package.local.s3_object_version (expand)"
		"[root] module.lambda_function_from_package.var.allowed_triggers (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.architectures (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.artifacts_dir (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.assume_role_policy_statements (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.attach_async_event_policy (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.attach_cloudwatch_logs_policy (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.attach_dead_letter_policy (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.attach_network_policy (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.attach_policies (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.attach_policy (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.attach_policy_json (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.attach_policy_jsons (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.attach_policy_statements (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.attach_tracing_policy (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.build_in_docker (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.cloudwatch_logs_kms_key_id (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.cloudwatch_logs_retention_in_days (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.cloudwatch_logs_tags (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.compatible_architectures (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.compatible_runtimes (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.create (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.create_async_event_config (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.create_current_version_allowed_triggers (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.create_current_version_async_event_config (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.create_function (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.create_layer (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.create_package (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.create_role (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.create_unqualified_alias_allowed_triggers (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.create_unqualified_alias_async_event_config (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.dead_letter_target_arn (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.description (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.destination_on_failure (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.destination_on_success (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.docker_build_root (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.docker_file (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.docker_image (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.docker_pip_cache (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.docker_with_ssh_agent (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.environment_variables (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.event_source_mapping (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.file_system_arn (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.file_system_local_mount_path (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.function_name (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.function_name (expand)" -> "[root] random_pet.this (expand)"
		"[root] module.lambda_function_from_package.var.handler (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.hash_extra (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.ignore_source_code_hash (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.image_config_command (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.image_config_entry_point (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.image_config_working_directory (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.image_uri (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.kms_key_arn (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.lambda_at_edge (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.lambda_role (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.layer_name (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.layers (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.layers (expand)" -> "[root] module.lambda_layer.output.lambda_layer_arn (expand)"
		"[root] module.lambda_function_from_package.var.license_info (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.local_existing_package (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.local_existing_package (expand)" -> "[root] module.package_with_commands_and_patterns.output.local_filename (expand)"
		"[root] module.lambda_function_from_package.var.maximum_event_age_in_seconds (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.maximum_retry_attempts (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.memory_size (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.number_of_policies (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.number_of_policy_jsons (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.package_type (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.policies (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.policy (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.policy_json (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.policy_jsons (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.policy_path (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.policy_statements (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.provisioned_concurrent_executions (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.publish (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.recreate_missing_package (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.reserved_concurrent_executions (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.role_description (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.role_force_detach_policies (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.role_name (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.role_path (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.role_permissions_boundary (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.role_tags (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.runtime (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.s3_acl (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.s3_bucket (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.s3_existing_package (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.s3_object_storage_class (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.s3_object_tags (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.s3_prefix (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.s3_server_side_encryption (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.source_path (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.store_on_s3 (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.tags (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.timeout (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.tracing_mode (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.trusted_entities (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.use_existing_cloudwatch_log_group (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.vpc_security_group_ids (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_function_from_package.var.vpc_subnet_ids (expand)" -> "[root] module.lambda_function_from_package (expand)"
		"[root] module.lambda_layer (close)" -> "[root] module.lambda_layer.aws_iam_role_policy_attachment.additional_inline (expand)"
		"[root] module.lambda_layer (close)" -> "[root] module.lambda_layer.aws_iam_role_policy_attachment.additional_json (expand)"
		"[root] module.lambda_layer (close)" -> "[root] module.lambda_layer.aws_iam_role_policy_attachment.additional_jsons (expand)"
		"[root] module.lambda_layer (close)" -> "[root] module.lambda_layer.aws_iam_role_policy_attachment.additional_many (expand)"
		"[root] module.lambda_layer (close)" -> "[root] module.lambda_layer.aws_iam_role_policy_attachment.additional_one (expand)"
		"[root] module.lambda_layer (close)" -> "[root] module.lambda_layer.aws_iam_role_policy_attachment.async (expand)"
		"[root] module.lambda_layer (close)" -> "[root] module.lambda_layer.aws_iam_role_policy_attachment.dead_letter (expand)"
		"[root] module.lambda_layer (close)" -> "[root] module.lambda_layer.aws_iam_role_policy_attachment.logs (expand)"
		"[root] module.lambda_layer (close)" -> "[root] module.lambda_layer.aws_iam_role_policy_attachment.tracing (expand)"
		"[root] module.lambda_layer (close)" -> "[root] module.lambda_layer.aws_iam_role_policy_attachment.vpc (expand)"
		"[root] module.lambda_layer (close)" -> "[root] module.lambda_layer.aws_lambda_function_event_invoke_config.this (expand)"
		"[root] module.lambda_layer (close)" -> "[root] module.lambda_layer.aws_lambda_permission.current_version_triggers (expand)"
		"[root] module.lambda_layer (close)" -> "[root] module.lambda_layer.aws_lambda_permission.unqualified_alias_triggers (expand)"
		"[root] module.lambda_layer (close)" -> "[root] module.lambda_layer.aws_lambda_provisioned_concurrency_config.current_version (expand)"
		"[root] module.lambda_layer (close)" -> "[root] module.lambda_layer.output.lambda_cloudwatch_log_group_arn (expand)"
		"[root] module.lambda_layer (close)" -> "[root] module.lambda_layer.output.lambda_cloudwatch_log_group_name (expand)"
		"[root] module.lambda_layer (close)" -> "[root] module.lambda_layer.output.lambda_event_source_mapping_function_arn (expand)"
		"[root] module.lambda_layer (close)" -> "[root] module.lambda_layer.output.lambda_event_source_mapping_state (expand)"
		"[root] module.lambda_layer (close)" -> "[root] module.lambda_layer.output.lambda_event_source_mapping_state_transition_reason (expand)"
		"[root] module.lambda_layer (close)" -> "[root] module.lambda_layer.output.lambda_event_source_mapping_uuid (expand)"
		"[root] module.lambda_layer (close)" -> "[root] module.lambda_layer.output.lambda_function_arn (expand)"
		"[root] module.lambda_layer (close)" -> "[root] module.lambda_layer.output.lambda_function_invoke_arn (expand)"
		"[root] module.lambda_layer (close)" -> "[root] module.lambda_layer.output.lambda_function_kms_key_arn (expand)"
		"[root] module.lambda_layer (close)" -> "[root] module.lambda_layer.output.lambda_function_last_modified (expand)"
		"[root] module.lambda_layer (close)" -> "[root] module.lambda_layer.output.lambda_function_name (expand)"
		"[root] module.lambda_layer (close)" -> "[root] module.lambda_layer.output.lambda_function_qualified_arn (expand)"
		"[root] module.lambda_layer (close)" -> "[root] module.lambda_layer.output.lambda_function_source_code_hash (expand)"
		"[root] module.lambda_layer (close)" -> "[root] module.lambda_layer.output.lambda_function_source_code_size (expand)"
		"[root] module.lambda_layer (close)" -> "[root] module.lambda_layer.output.lambda_function_version (expand)"
		"[root] module.lambda_layer (close)" -> "[root] module.lambda_layer.output.lambda_layer_arn (expand)"
		"[root] module.lambda_layer (close)" -> "[root] module.lambda_layer.output.lambda_layer_created_date (expand)"
		"[root] module.lambda_layer (close)" -> "[root] module.lambda_layer.output.lambda_layer_layer_arn (expand)"
		"[root] module.lambda_layer (close)" -> "[root] module.lambda_layer.output.lambda_layer_source_code_size (expand)"
		"[root] module.lambda_layer (close)" -> "[root] module.lambda_layer.output.lambda_layer_version (expand)"
		"[root] module.lambda_layer (close)" -> "[root] module.lambda_layer.output.lambda_role_arn (expand)"
		"[root] module.lambda_layer (close)" -> "[root] module.lambda_layer.output.lambda_role_name (expand)"
		"[root] module.lambda_layer (close)" -> "[root] module.lambda_layer.output.lambda_role_unique_id (expand)"
		"[root] module.lambda_layer (close)" -> "[root] module.lambda_layer.output.local_filename (expand)"
		"[root] module.lambda_layer (close)" -> "[root] module.lambda_layer.output.s3_object (expand)"
		"[root] module.lambda_layer.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.lambda_layer.var.cloudwatch_logs_kms_key_id (expand)"
		"[root] module.lambda_layer.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.lambda_layer.var.cloudwatch_logs_retention_in_days (expand)"
		"[root] module.lambda_layer.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.lambda_layer.var.cloudwatch_logs_tags (expand)"
		"[root] module.lambda_layer.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.lambda_layer.var.create (expand)"
		"[root] module.lambda_layer.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.lambda_layer.var.create_function (expand)"
		"[root] module.lambda_layer.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.lambda_layer.var.create_layer (expand)"
		"[root] module.lambda_layer.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.lambda_layer.var.function_name (expand)"
		"[root] module.lambda_layer.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.lambda_layer.var.lambda_at_edge (expand)"
		"[root] module.lambda_layer.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.lambda_layer.var.tags (expand)"
		"[root] module.lambda_layer.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.lambda_layer.var.use_existing_cloudwatch_log_group (expand)"
		"[root] module.lambda_layer.aws_cloudwatch_log_group.lambda (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.lambda_layer.aws_iam_policy.additional_inline (expand)" -> "[root] module.lambda_layer.data.aws_iam_policy_document.additional_inline (expand)"
		"[root] module.lambda_layer.aws_iam_policy.additional_inline (expand)" -> "[root] module.lambda_layer.local.role_name (expand)"
		"[root] module.lambda_layer.aws_iam_policy.additional_inline (expand)" -> "[root] module.lambda_layer.var.policy_path (expand)"
		"[root] module.lambda_layer.aws_iam_policy.additional_inline (expand)" -> "[root] module.lambda_layer.var.tags (expand)"
		"[root] module.lambda_layer.aws_iam_policy.additional_json (expand)" -> "[root] module.lambda_layer.local.role_name (expand)"
		"[root] module.lambda_layer.aws_iam_policy.additional_json (expand)" -> "[root] module.lambda_layer.var.attach_policy_json (expand)"
		"[root] module.lambda_layer.aws_iam_policy.additional_json (expand)" -> "[root] module.lambda_layer.var.policy_json (expand)"
		"[root] module.lambda_layer.aws_iam_policy.additional_json (expand)" -> "[root] module.lambda_layer.var.policy_path (expand)"
		"[root] module.lambda_layer.aws_iam_policy.additional_json (expand)" -> "[root] module.lambda_layer.var.tags (expand)"
		"[root] module.lambda_layer.aws_iam_policy.additional_json (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.lambda_layer.aws_iam_policy.additional_jsons (expand)" -> "[root] module.lambda_layer.local.role_name (expand)"
		"[root] module.lambda_layer.aws_iam_policy.additional_jsons (expand)" -> "[root] module.lambda_layer.var.attach_policy_jsons (expand)"
		"[root] module.lambda_layer.aws_iam_policy.additional_jsons (expand)" -> "[root] module.lambda_layer.var.number_of_policy_jsons (expand)"
		"[root] module.lambda_layer.aws_iam_policy.additional_jsons (expand)" -> "[root] module.lambda_layer.var.policy_jsons (expand)"
		"[root] module.lambda_layer.aws_iam_policy.additional_jsons (expand)" -> "[root] module.lambda_layer.var.policy_path (expand)"
		"[root] module.lambda_layer.aws_iam_policy.additional_jsons (expand)" -> "[root] module.lambda_layer.var.tags (expand)"
		"[root] module.lambda_layer.aws_iam_policy.additional_jsons (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.lambda_layer.aws_iam_policy.async (expand)" -> "[root] module.lambda_layer.data.aws_iam_policy_document.async (expand)"
		"[root] module.lambda_layer.aws_iam_policy.async (expand)" -> "[root] module.lambda_layer.local.role_name (expand)"
		"[root] module.lambda_layer.aws_iam_policy.async (expand)" -> "[root] module.lambda_layer.var.policy_path (expand)"
		"[root] module.lambda_layer.aws_iam_policy.async (expand)" -> "[root] module.lambda_layer.var.tags (expand)"
		"[root] module.lambda_layer.aws_iam_policy.dead_letter (expand)" -> "[root] module.lambda_layer.data.aws_iam_policy_document.dead_letter (expand)"
		"[root] module.lambda_layer.aws_iam_policy.dead_letter (expand)" -> "[root] module.lambda_layer.local.role_name (expand)"
		"[root] module.lambda_layer.aws_iam_policy.dead_letter (expand)" -> "[root] module.lambda_layer.var.policy_path (expand)"
		"[root] module.lambda_layer.aws_iam_policy.dead_letter (expand)" -> "[root] module.lambda_layer.var.tags (expand)"
		"[root] module.lambda_layer.aws_iam_policy.logs (expand)" -> "[root] module.lambda_layer.data.aws_iam_policy_document.logs (expand)"
		"[root] module.lambda_layer.aws_iam_policy.logs (expand)" -> "[root] module.lambda_layer.local.role_name (expand)"
		"[root] module.lambda_layer.aws_iam_policy.logs (expand)" -> "[root] module.lambda_layer.var.policy_path (expand)"
		"[root] module.lambda_layer.aws_iam_policy.tracing (expand)" -> "[root] module.lambda_layer.data.aws_iam_policy.tracing (expand)"
		"[root] module.lambda_layer.aws_iam_policy.tracing (expand)" -> "[root] module.lambda_layer.local.role_name (expand)"
		"[root] module.lambda_layer.aws_iam_policy.tracing (expand)" -> "[root] module.lambda_layer.var.policy_path (expand)"
		"[root] module.lambda_layer.aws_iam_policy.tracing (expand)" -> "[root] module.lambda_layer.var.tags (expand)"
		"[root] module.lambda_layer.aws_iam_policy.vpc (expand)" -> "[root] module.lambda_layer.data.aws_iam_policy.vpc (expand)"
		"[root] module.lambda_layer.aws_iam_policy.vpc (expand)" -> "[root] module.lambda_layer.local.role_name (expand)"
		"[root] module.lambda_layer.aws_iam_policy.vpc (expand)" -> "[root] module.lambda_layer.var.policy_path (expand)"
		"[root] module.lambda_layer.aws_iam_policy.vpc (expand)" -> "[root] module.lambda_layer.var.tags (expand)"
		"[root] module.lambda_layer.aws_iam_role.lambda (expand)" -> "[root] module.lambda_layer.data.aws_iam_policy_document.assume_role (expand)"
		"[root] module.lambda_layer.aws_iam_role.lambda (expand)" -> "[root] module.lambda_layer.local.role_name (expand)"
		"[root] module.lambda_layer.aws_iam_role.lambda (expand)" -> "[root] module.lambda_layer.var.role_description (expand)"
		"[root] module.lambda_layer.aws_iam_role.lambda (expand)" -> "[root] module.lambda_layer.var.role_force_detach_policies (expand)"
		"[root] module.lambda_layer.aws_iam_role.lambda (expand)" -> "[root] module.lambda_layer.var.role_path (expand)"
		"[root] module.lambda_layer.aws_iam_role.lambda (expand)" -> "[root] module.lambda_layer.var.role_permissions_boundary (expand)"
		"[root] module.lambda_layer.aws_iam_role.lambda (expand)" -> "[root] module.lambda_layer.var.role_tags (expand)"
		"[root] module.lambda_layer.aws_iam_role.lambda (expand)" -> "[root] module.lambda_layer.var.tags (expand)"
		"[root] module.lambda_layer.aws_iam_role_policy_attachment.additional_inline (expand)" -> "[root] module.lambda_layer.aws_iam_policy.additional_inline (expand)"
		"[root] module.lambda_layer.aws_iam_role_policy_attachment.additional_inline (expand)" -> "[root] module.lambda_layer.aws_iam_role.lambda (expand)"
		"[root] module.lambda_layer.aws_iam_role_policy_attachment.additional_json (expand)" -> "[root] module.lambda_layer.aws_iam_policy.additional_json (expand)"
		"[root] module.lambda_layer.aws_iam_role_policy_attachment.additional_json (expand)" -> "[root] module.lambda_layer.aws_iam_role.lambda (expand)"
		"[root] module.lambda_layer.aws_iam_role_policy_attachment.additional_jsons (expand)" -> "[root] module.lambda_layer.aws_iam_policy.additional_jsons (expand)"
		"[root] module.lambda_layer.aws_iam_role_policy_attachment.additional_jsons (expand)" -> "[root] module.lambda_layer.aws_iam_role.lambda (expand)"
		"[root] module.lambda_layer.aws_iam_role_policy_attachment.additional_many (expand)" -> "[root] module.lambda_layer.aws_iam_role.lambda (expand)"
		"[root] module.lambda_layer.aws_iam_role_policy_attachment.additional_many (expand)" -> "[root] module.lambda_layer.var.attach_policies (expand)"
		"[root] module.lambda_layer.aws_iam_role_policy_attachment.additional_many (expand)" -> "[root] module.lambda_layer.var.number_of_policies (expand)"
		"[root] module.lambda_layer.aws_iam_role_policy_attachment.additional_many (expand)" -> "[root] module.lambda_layer.var.policies (expand)"
		"[root] module.lambda_layer.aws_iam_role_policy_attachment.additional_one (expand)" -> "[root] module.lambda_layer.aws_iam_role.lambda (expand)"
		"[root] module.lambda_layer.aws_iam_role_policy_attachment.additional_one (expand)" -> "[root] module.lambda_layer.var.attach_policy (expand)"
		"[root] module.lambda_layer.aws_iam_role_policy_attachment.additional_one (expand)" -> "[root] module.lambda_layer.var.policy (expand)"
		"[root] module.lambda_layer.aws_iam_role_policy_attachment.async (expand)" -> "[root] module.lambda_layer.aws_iam_policy.async (expand)"
		"[root] module.lambda_layer.aws_iam_role_policy_attachment.async (expand)" -> "[root] module.lambda_layer.aws_iam_role.lambda (expand)"
		"[root] module.lambda_layer.aws_iam_role_policy_attachment.dead_letter (expand)" -> "[root] module.lambda_layer.aws_iam_policy.dead_letter (expand)"
		"[root] module.lambda_layer.aws_iam_role_policy_attachment.dead_letter (expand)" -> "[root] module.lambda_layer.aws_iam_role.lambda (expand)"
		"[root] module.lambda_layer.aws_iam_role_policy_attachment.logs (expand)" -> "[root] module.lambda_layer.aws_iam_policy.logs (expand)"
		"[root] module.lambda_layer.aws_iam_role_policy_attachment.logs (expand)" -> "[root] module.lambda_layer.aws_iam_role.lambda (expand)"
		"[root] module.lambda_layer.aws_iam_role_policy_attachment.tracing (expand)" -> "[root] module.lambda_layer.aws_iam_policy.tracing (expand)"
		"[root] module.lambda_layer.aws_iam_role_policy_attachment.tracing (expand)" -> "[root] module.lambda_layer.aws_iam_role.lambda (expand)"
		"[root] module.lambda_layer.aws_iam_role_policy_attachment.vpc (expand)" -> "[root] module.lambda_layer.aws_iam_policy.vpc (expand)"
		"[root] module.lambda_layer.aws_iam_role_policy_attachment.vpc (expand)" -> "[root] module.lambda_layer.aws_iam_role.lambda (expand)"
		"[root] module.lambda_layer.aws_lambda_event_source_mapping.this (expand)" -> "[root] module.lambda_layer.aws_lambda_function.this (expand)"
		"[root] module.lambda_layer.aws_lambda_event_source_mapping.this (expand)" -> "[root] module.lambda_layer.var.create_unqualified_alias_allowed_triggers (expand)"
		"[root] module.lambda_layer.aws_lambda_event_source_mapping.this (expand)" -> "[root] module.lambda_layer.var.event_source_mapping (expand)"
		"[root] module.lambda_layer.aws_lambda_function.this (expand)" -> "[root] module.lambda_layer.aws_cloudwatch_log_group.lambda (expand)"
		"[root] module.lambda_layer.aws_lambda_function.this (expand)" -> "[root] module.lambda_layer.aws_iam_role.lambda (expand)"
		"[root] module.lambda_layer.aws_lambda_function.this (expand)" -> "[root] module.lambda_layer.local.filename (expand)"
		"[root] module.lambda_layer.aws_lambda_function.this (expand)" -> "[root] module.lambda_layer.local.s3_bucket (expand)"
		"[root] module.lambda_layer.aws_lambda_function.this (expand)" -> "[root] module.lambda_layer.local.s3_object_version (expand)"
		"[root] module.lambda_layer.aws_lambda_function.this (expand)" -> "[root] module.lambda_layer.local.was_missing (expand)"
		"[root] module.lambda_layer.aws_lambda_function.this (expand)" -> "[root] module.lambda_layer.var.architectures (expand)"
		"[root] module.lambda_layer.aws_lambda_function.this (expand)" -> "[root] module.lambda_layer.var.dead_letter_target_arn (expand)"
		"[root] module.lambda_layer.aws_lambda_function.this (expand)" -> "[root] module.lambda_layer.var.description (expand)"
		"[root] module.lambda_layer.aws_lambda_function.this (expand)" -> "[root] module.lambda_layer.var.environment_variables (expand)"
		"[root] module.lambda_layer.aws_lambda_function.this (expand)" -> "[root] module.lambda_layer.var.file_system_arn (expand)"
		"[root] module.lambda_layer.aws_lambda_function.this (expand)" -> "[root] module.lambda_layer.var.file_system_local_mount_path (expand)"
		"[root] module.lambda_layer.aws_lambda_function.this (expand)" -> "[root] module.lambda_layer.var.handler (expand)"
		"[root] module.lambda_layer.aws_lambda_function.this (expand)" -> "[root] module.lambda_layer.var.ignore_source_code_hash (expand)"
		"[root] module.lambda_layer.aws_lambda_function.this (expand)" -> "[root] module.lambda_layer.var.image_config_command (expand)"
		"[root] module.lambda_layer.aws_lambda_function.this (expand)" -> "[root] module.lambda_layer.var.image_config_entry_point (expand)"
		"[root] module.lambda_layer.aws_lambda_function.this (expand)" -> "[root] module.lambda_layer.var.image_config_working_directory (expand)"
		"[root] module.lambda_layer.aws_lambda_function.this (expand)" -> "[root] module.lambda_layer.var.image_uri (expand)"
		"[root] module.lambda_layer.aws_lambda_function.this (expand)" -> "[root] module.lambda_layer.var.kms_key_arn (expand)"
		"[root] module.lambda_layer.aws_lambda_function.this (expand)" -> "[root] module.lambda_layer.var.lambda_role (expand)"
		"[root] module.lambda_layer.aws_lambda_function.this (expand)" -> "[root] module.lambda_layer.var.layers (expand)"
		"[root] module.lambda_layer.aws_lambda_function.this (expand)" -> "[root] module.lambda_layer.var.memory_size (expand)"
		"[root] module.lambda_layer.aws_lambda_function.this (expand)" -> "[root] module.lambda_layer.var.package_type (expand)"
		"[root] module.lambda_layer.aws_lambda_function.this (expand)" -> "[root] module.lambda_layer.var.publish (expand)"
		"[root] module.lambda_layer.aws_lambda_function.this (expand)" -> "[root] module.lambda_layer.var.reserved_concurrent_executions (expand)"
		"[root] module.lambda_layer.aws_lambda_function.this (expand)" -> "[root] module.lambda_layer.var.timeout (expand)"
		"[root] module.lambda_layer.aws_lambda_function.this (expand)" -> "[root] module.lambda_layer.var.tracing_mode (expand)"
		"[root] module.lambda_layer.aws_lambda_function.this (expand)" -> "[root] module.lambda_layer.var.vpc_security_group_ids (expand)"
		"[root] module.lambda_layer.aws_lambda_function.this (expand)" -> "[root] module.lambda_layer.var.vpc_subnet_ids (expand)"
		"[root] module.lambda_layer.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.lambda_layer.aws_lambda_function.this (expand)"
		"[root] module.lambda_layer.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.lambda_layer.local.qualifiers (expand)"
		"[root] module.lambda_layer.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.lambda_layer.var.create_async_event_config (expand)"
		"[root] module.lambda_layer.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.lambda_layer.var.destination_on_failure (expand)"
		"[root] module.lambda_layer.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.lambda_layer.var.destination_on_success (expand)"
		"[root] module.lambda_layer.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.lambda_layer.var.maximum_event_age_in_seconds (expand)"
		"[root] module.lambda_layer.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.lambda_layer.var.maximum_retry_attempts (expand)"
		"[root] module.lambda_layer.aws_lambda_layer_version.this (expand)" -> "[root] module.lambda_layer.local.filename (expand)"
		"[root] module.lambda_layer.aws_lambda_layer_version.this (expand)" -> "[root] module.lambda_layer.local.s3_bucket (expand)"
		"[root] module.lambda_layer.aws_lambda_layer_version.this (expand)" -> "[root] module.lambda_layer.local.s3_object_version (expand)"
		"[root] module.lambda_layer.aws_lambda_layer_version.this (expand)" -> "[root] module.lambda_layer.local.was_missing (expand)"
		"[root] module.lambda_layer.aws_lambda_layer_version.this (expand)" -> "[root] module.lambda_layer.var.compatible_architectures (expand)"
		"[root] module.lambda_layer.aws_lambda_layer_version.this (expand)" -> "[root] module.lambda_layer.var.compatible_runtimes (expand)"
		"[root] module.lambda_layer.aws_lambda_layer_version.this (expand)" -> "[root] module.lambda_layer.var.create_layer (expand)"
		"[root] module.lambda_layer.aws_lambda_layer_version.this (expand)" -> "[root] module.lambda_layer.var.description (expand)"
		"[root] module.lambda_layer.aws_lambda_layer_version.this (expand)" -> "[root] module.lambda_layer.var.ignore_source_code_hash (expand)"
		"[root] module.lambda_layer.aws_lambda_layer_version.this (expand)" -> "[root] module.lambda_layer.var.layer_name (expand)"
		"[root] module.lambda_layer.aws_lambda_layer_version.this (expand)" -> "[root] module.lambda_layer.var.license_info (expand)"
		"[root] module.lambda_layer.aws_lambda_permission.current_version_triggers (expand)" -> "[root] module.lambda_layer.aws_lambda_function.this (expand)"
		"[root] module.lambda_layer.aws_lambda_permission.current_version_triggers (expand)" -> "[root] module.lambda_layer.var.allowed_triggers (expand)"
		"[root] module.lambda_layer.aws_lambda_permission.current_version_triggers (expand)" -> "[root] module.lambda_layer.var.create_current_version_allowed_triggers (expand)"
		"[root] module.lambda_layer.aws_lambda_permission.unqualified_alias_triggers (expand)" -> "[root] module.lambda_layer.aws_lambda_function.this (expand)"
		"[root] module.lambda_layer.aws_lambda_permission.unqualified_alias_triggers (expand)" -> "[root] module.lambda_layer.var.allowed_triggers (expand)"
		"[root] module.lambda_layer.aws_lambda_permission.unqualified_alias_triggers (expand)" -> "[root] module.lambda_layer.var.create_unqualified_alias_allowed_triggers (expand)"
		"[root] module.lambda_layer.aws_lambda_provisioned_concurrency_config.current_version (expand)" -> "[root] module.lambda_layer.aws_lambda_function.this (expand)"
		"[root] module.lambda_layer.aws_lambda_provisioned_concurrency_config.current_version (expand)" -> "[root] module.lambda_layer.var.provisioned_concurrent_executions (expand)"
		"[root] module.lambda_layer.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.lambda_layer.local.s3_key (expand)"
		"[root] module.lambda_layer.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.lambda_layer.null_resource.archive (expand)"
		"[root] module.lambda_layer.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.lambda_layer.var.s3_acl (expand)"
		"[root] module.lambda_layer.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.lambda_layer.var.s3_bucket (expand)"
		"[root] module.lambda_layer.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.lambda_layer.var.s3_object_storage_class (expand)"
		"[root] module.lambda_layer.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.lambda_layer.var.s3_object_tags (expand)"
		"[root] module.lambda_layer.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.lambda_layer.var.s3_server_side_encryption (expand)"
		"[root] module.lambda_layer.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.lambda_layer.var.tags (expand)"
		"[root] module.lambda_layer.aws_s3_bucket_object.lambda_package (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.lambda_layer.data.aws_arn.log_group_arn (expand)" -> "[root] module.lambda_layer.local.create_role (expand)"
		"[root] module.lambda_layer.data.aws_arn.log_group_arn (expand)" -> "[root] module.lambda_layer.local.log_group_arn_regional (expand)"
		"[root] module.lambda_layer.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.lambda_layer.var.create (expand)"
		"[root] module.lambda_layer.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.lambda_layer.var.create_function (expand)"
		"[root] module.lambda_layer.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.lambda_layer.var.create_layer (expand)"
		"[root] module.lambda_layer.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.lambda_layer.var.function_name (expand)"
		"[root] module.lambda_layer.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.lambda_layer.var.lambda_at_edge (expand)"
		"[root] module.lambda_layer.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.lambda_layer.var.use_existing_cloudwatch_log_group (expand)"
		"[root] module.lambda_layer.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.lambda_layer.data.aws_iam_policy.tracing (expand)" -> "[root] module.lambda_layer.data.aws_partition.current (expand)"
		"[root] module.lambda_layer.data.aws_iam_policy.tracing (expand)" -> "[root] module.lambda_layer.local.create_role (expand)"
		"[root] module.lambda_layer.data.aws_iam_policy.tracing (expand)" -> "[root] module.lambda_layer.var.attach_tracing_policy (expand)"
		"[root] module.lambda_layer.data.aws_iam_policy.vpc (expand)" -> "[root] module.lambda_layer.data.aws_partition.current (expand)"
		"[root] module.lambda_layer.data.aws_iam_policy.vpc (expand)" -> "[root] module.lambda_layer.local.create_role (expand)"
		"[root] module.lambda_layer.data.aws_iam_policy.vpc (expand)" -> "[root] module.lambda_layer.var.attach_network_policy (expand)"
		"[root] module.lambda_layer.data.aws_iam_policy_document.additional_inline (expand)" -> "[root] module.lambda_layer.local.create_role (expand)"
		"[root] module.lambda_layer.data.aws_iam_policy_document.additional_inline (expand)" -> "[root] module.lambda_layer.var.attach_policy_statements (expand)"
		"[root] module.lambda_layer.data.aws_iam_policy_document.additional_inline (expand)" -> "[root] module.lambda_layer.var.policy_statements (expand)"
		"[root] module.lambda_layer.data.aws_iam_policy_document.additional_inline (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.lambda_layer.data.aws_iam_policy_document.assume_role (expand)" -> "[root] module.lambda_layer.local.create_role (expand)"
		"[root] module.lambda_layer.data.aws_iam_policy_document.assume_role (expand)" -> "[root] module.lambda_layer.local.trusted_entities_principals (expand)"
		"[root] module.lambda_layer.data.aws_iam_policy_document.assume_role (expand)" -> "[root] module.lambda_layer.local.trusted_entities_services (expand)"
		"[root] module.lambda_layer.data.aws_iam_policy_document.assume_role (expand)" -> "[root] module.lambda_layer.var.assume_role_policy_statements (expand)"
		"[root] module.lambda_layer.data.aws_iam_policy_document.assume_role (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.lambda_layer.data.aws_iam_policy_document.async (expand)" -> "[root] module.lambda_layer.local.create_role (expand)"
		"[root] module.lambda_layer.data.aws_iam_policy_document.async (expand)" -> "[root] module.lambda_layer.var.attach_async_event_policy (expand)"
		"[root] module.lambda_layer.data.aws_iam_policy_document.async (expand)" -> "[root] module.lambda_layer.var.destination_on_failure (expand)"
		"[root] module.lambda_layer.data.aws_iam_policy_document.async (expand)" -> "[root] module.lambda_layer.var.destination_on_success (expand)"
		"[root] module.lambda_layer.data.aws_iam_policy_document.async (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.lambda_layer.data.aws_iam_policy_document.dead_letter (expand)" -> "[root] module.lambda_layer.local.create_role (expand)"
		"[root] module.lambda_layer.data.aws_iam_policy_document.dead_letter (expand)" -> "[root] module.lambda_layer.var.attach_dead_letter_policy (expand)"
		"[root] module.lambda_layer.data.aws_iam_policy_document.dead_letter (expand)" -> "[root] module.lambda_layer.var.dead_letter_target_arn (expand)"
		"[root] module.lambda_layer.data.aws_iam_policy_document.dead_letter (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.lambda_layer.data.aws_iam_policy_document.logs (expand)" -> "[root] module.lambda_layer.local.log_group_arn (expand)"
		"[root] module.lambda_layer.data.aws_iam_policy_document.logs (expand)" -> "[root] module.lambda_layer.var.attach_cloudwatch_logs_policy (expand)"
		"[root] module.lambda_layer.data.aws_partition.current (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.data.aws_partition.current (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.lambda_layer.data.external.archive_prepare (expand)" -> "[root] module.lambda_layer.local.python (expand)"
		"[root] module.lambda_layer.data.external.archive_prepare (expand)" -> "[root] module.lambda_layer.var.artifacts_dir (expand)"
		"[root] module.lambda_layer.data.external.archive_prepare (expand)" -> "[root] module.lambda_layer.var.build_in_docker (expand)"
		"[root] module.lambda_layer.data.external.archive_prepare (expand)" -> "[root] module.lambda_layer.var.create (expand)"
		"[root] module.lambda_layer.data.external.archive_prepare (expand)" -> "[root] module.lambda_layer.var.create_package (expand)"
		"[root] module.lambda_layer.data.external.archive_prepare (expand)" -> "[root] module.lambda_layer.var.docker_build_root (expand)"
		"[root] module.lambda_layer.data.external.archive_prepare (expand)" -> "[root] module.lambda_layer.var.docker_file (expand)"
		"[root] module.lambda_layer.data.external.archive_prepare (expand)" -> "[root] module.lambda_layer.var.docker_image (expand)"
		"[root] module.lambda_layer.data.external.archive_prepare (expand)" -> "[root] module.lambda_layer.var.docker_pip_cache (expand)"
		"[root] module.lambda_layer.data.external.archive_prepare (expand)" -> "[root] module.lambda_layer.var.docker_with_ssh_agent (expand)"
		"[root] module.lambda_layer.data.external.archive_prepare (expand)" -> "[root] module.lambda_layer.var.hash_extra (expand)"
		"[root] module.lambda_layer.data.external.archive_prepare (expand)" -> "[root] module.lambda_layer.var.recreate_missing_package (expand)"
		"[root] module.lambda_layer.data.external.archive_prepare (expand)" -> "[root] module.lambda_layer.var.runtime (expand)"
		"[root] module.lambda_layer.data.external.archive_prepare (expand)" -> "[root] module.lambda_layer.var.source_path (expand)"
		"[root] module.lambda_layer.data.external.archive_prepare (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/external\"]"
		"[root] module.lambda_layer.local.archive_filename (expand)" -> "[root] module.lambda_layer.data.external.archive_prepare (expand)"
		"[root] module.lambda_layer.local.archive_was_missing (expand)" -> "[root] module.lambda_layer.data.external.archive_prepare (expand)"
		"[root] module.lambda_layer.local.create_role (expand)" -> "[root] module.lambda_layer.var.create (expand)"
		"[root] module.lambda_layer.local.create_role (expand)" -> "[root] module.lambda_layer.var.create_function (expand)"
		"[root] module.lambda_layer.local.create_role (expand)" -> "[root] module.lambda_layer.var.create_layer (expand)"
		"[root] module.lambda_layer.local.create_role (expand)" -> "[root] module.lambda_layer.var.create_role (expand)"
		"[root] module.lambda_layer.local.filename (expand)" -> "[root] module.lambda_layer.local.archive_filename (expand)"
		"[root] module.lambda_layer.local.filename (expand)" -> "[root] module.lambda_layer.var.local_existing_package (expand)"
		"[root] module.lambda_layer.local.filename (expand)" -> "[root] module.lambda_layer.var.store_on_s3 (expand)"
		"[root] module.lambda_layer.local.log_group_arn (expand)" -> "[root] module.lambda_layer.data.aws_arn.log_group_arn (expand)"
		"[root] module.lambda_layer.local.log_group_arn_regional (expand)" -> "[root] module.lambda_layer.aws_cloudwatch_log_group.lambda (expand)"
		"[root] module.lambda_layer.local.log_group_arn_regional (expand)" -> "[root] module.lambda_layer.data.aws_cloudwatch_log_group.lambda (expand)"
		"[root] module.lambda_layer.local.log_group_name (expand)" -> "[root] module.lambda_layer.aws_cloudwatch_log_group.lambda (expand)"
		"[root] module.lambda_layer.local.log_group_name (expand)" -> "[root] module.lambda_layer.data.aws_cloudwatch_log_group.lambda (expand)"
		"[root] module.lambda_layer.local.python (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.local.qualifiers (expand)" -> "[root] module.lambda_layer.var.create_current_version_async_event_config (expand)"
		"[root] module.lambda_layer.local.qualifiers (expand)" -> "[root] module.lambda_layer.var.create_unqualified_alias_async_event_config (expand)"
		"[root] module.lambda_layer.local.role_name (expand)" -> "[root] module.lambda_layer.local.create_role (expand)"
		"[root] module.lambda_layer.local.role_name (expand)" -> "[root] module.lambda_layer.var.function_name (expand)"
		"[root] module.lambda_layer.local.role_name (expand)" -> "[root] module.lambda_layer.var.role_name (expand)"
		"[root] module.lambda_layer.local.s3_bucket (expand)" -> "[root] module.lambda_layer.var.s3_bucket (expand)"
		"[root] module.lambda_layer.local.s3_bucket (expand)" -> "[root] module.lambda_layer.var.s3_existing_package (expand)"
		"[root] module.lambda_layer.local.s3_bucket (expand)" -> "[root] module.lambda_layer.var.store_on_s3 (expand)"
		"[root] module.lambda_layer.local.s3_key (expand)" -> "[root] module.lambda_layer.local.archive_filename (expand)"
		"[root] module.lambda_layer.local.s3_key (expand)" -> "[root] module.lambda_layer.var.s3_existing_package (expand)"
		"[root] module.lambda_layer.local.s3_key (expand)" -> "[root] module.lambda_layer.var.s3_prefix (expand)"
		"[root] module.lambda_layer.local.s3_key (expand)" -> "[root] module.lambda_layer.var.store_on_s3 (expand)"
		"[root] module.lambda_layer.local.s3_object_version (expand)" -> "[root] module.lambda_layer.aws_s3_bucket_object.lambda_package (expand)"
		"[root] module.lambda_layer.local.trusted_entities_principals (expand)" -> "[root] module.lambda_layer.var.trusted_entities (expand)"
		"[root] module.lambda_layer.local.trusted_entities_services (expand)" -> "[root] module.lambda_layer.var.lambda_at_edge (expand)"
		"[root] module.lambda_layer.local.trusted_entities_services (expand)" -> "[root] module.lambda_layer.var.trusted_entities (expand)"
		"[root] module.lambda_layer.local.was_missing (expand)" -> "[root] module.lambda_layer.local.archive_was_missing (expand)"
		"[root] module.lambda_layer.local.was_missing (expand)" -> "[root] module.lambda_layer.var.local_existing_package (expand)"
		"[root] module.lambda_layer.local_file.archive_plan (expand)" -> "[root] module.lambda_layer.data.external.archive_prepare (expand)"
		"[root] module.lambda_layer.local_file.archive_plan (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/local\"]"
		"[root] module.lambda_layer.null_resource.archive (expand)" -> "[root] module.lambda_layer.local_file.archive_plan (expand)"
		"[root] module.lambda_layer.null_resource.archive (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/null\"]"
		"[root] module.lambda_layer.null_resource.archive (expand)" -> "[root] provisioner.local-exec"
		"[root] module.lambda_layer.output.lambda_cloudwatch_log_group_arn (expand)" -> "[root] module.lambda_layer.local.log_group_arn (expand)"
		"[root] module.lambda_layer.output.lambda_cloudwatch_log_group_name (expand)" -> "[root] module.lambda_layer.local.log_group_name (expand)"
		"[root] module.lambda_layer.output.lambda_event_source_mapping_function_arn (expand)" -> "[root] module.lambda_layer.aws_lambda_event_source_mapping.this (expand)"
		"[root] module.lambda_layer.output.lambda_event_source_mapping_state (expand)" -> "[root] module.lambda_layer.aws_lambda_event_source_mapping.this (expand)"
		"[root] module.lambda_layer.output.lambda_event_source_mapping_state_transition_reason (expand)" -> "[root] module.lambda_layer.aws_lambda_event_source_mapping.this (expand)"
		"[root] module.lambda_layer.output.lambda_event_source_mapping_uuid (expand)" -> "[root] module.lambda_layer.aws_lambda_event_source_mapping.this (expand)"
		"[root] module.lambda_layer.output.lambda_function_arn (expand)" -> "[root] module.lambda_layer.aws_lambda_function.this (expand)"
		"[root] module.lambda_layer.output.lambda_function_invoke_arn (expand)" -> "[root] module.lambda_layer.aws_lambda_function.this (expand)"
		"[root] module.lambda_layer.output.lambda_function_kms_key_arn (expand)" -> "[root] module.lambda_layer.aws_lambda_function.this (expand)"
		"[root] module.lambda_layer.output.lambda_function_last_modified (expand)" -> "[root] module.lambda_layer.aws_lambda_function.this (expand)"
		"[root] module.lambda_layer.output.lambda_function_name (expand)" -> "[root] module.lambda_layer.aws_lambda_function.this (expand)"
		"[root] module.lambda_layer.output.lambda_function_qualified_arn (expand)" -> "[root] module.lambda_layer.aws_lambda_function.this (expand)"
		"[root] module.lambda_layer.output.lambda_function_source_code_hash (expand)" -> "[root] module.lambda_layer.aws_lambda_function.this (expand)"
		"[root] module.lambda_layer.output.lambda_function_source_code_size (expand)" -> "[root] module.lambda_layer.aws_lambda_function.this (expand)"
		"[root] module.lambda_layer.output.lambda_function_version (expand)" -> "[root] module.lambda_layer.aws_lambda_function.this (expand)"
		"[root] module.lambda_layer.output.lambda_layer_arn (expand)" -> "[root] module.lambda_layer.aws_lambda_layer_version.this (expand)"
		"[root] module.lambda_layer.output.lambda_layer_created_date (expand)" -> "[root] module.lambda_layer.aws_lambda_layer_version.this (expand)"
		"[root] module.lambda_layer.output.lambda_layer_layer_arn (expand)" -> "[root] module.lambda_layer.aws_lambda_layer_version.this (expand)"
		"[root] module.lambda_layer.output.lambda_layer_source_code_size (expand)" -> "[root] module.lambda_layer.aws_lambda_layer_version.this (expand)"
		"[root] module.lambda_layer.output.lambda_layer_version (expand)" -> "[root] module.lambda_layer.aws_lambda_layer_version.this (expand)"
		"[root] module.lambda_layer.output.lambda_role_arn (expand)" -> "[root] module.lambda_layer.aws_iam_role.lambda (expand)"
		"[root] module.lambda_layer.output.lambda_role_name (expand)" -> "[root] module.lambda_layer.aws_iam_role.lambda (expand)"
		"[root] module.lambda_layer.output.lambda_role_unique_id (expand)" -> "[root] module.lambda_layer.aws_iam_role.lambda (expand)"
		"[root] module.lambda_layer.output.local_filename (expand)" -> "[root] module.lambda_layer.local.filename (expand)"
		"[root] module.lambda_layer.output.s3_object (expand)" -> "[root] module.lambda_layer.local.s3_bucket (expand)"
		"[root] module.lambda_layer.output.s3_object (expand)" -> "[root] module.lambda_layer.local.s3_object_version (expand)"
		"[root] module.lambda_layer.var.allowed_triggers (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.architectures (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.artifacts_dir (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.assume_role_policy_statements (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.attach_async_event_policy (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.attach_cloudwatch_logs_policy (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.attach_dead_letter_policy (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.attach_network_policy (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.attach_policies (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.attach_policy (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.attach_policy_json (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.attach_policy_jsons (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.attach_policy_statements (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.attach_tracing_policy (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.build_in_docker (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.cloudwatch_logs_kms_key_id (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.cloudwatch_logs_retention_in_days (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.cloudwatch_logs_tags (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.compatible_architectures (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.compatible_runtimes (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.create (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.create_async_event_config (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.create_current_version_allowed_triggers (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.create_current_version_async_event_config (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.create_function (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.create_layer (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.create_package (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.create_role (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.create_unqualified_alias_allowed_triggers (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.create_unqualified_alias_async_event_config (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.dead_letter_target_arn (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.description (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.destination_on_failure (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.destination_on_success (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.docker_build_root (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.docker_file (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.docker_image (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.docker_pip_cache (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.docker_with_ssh_agent (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.environment_variables (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.event_source_mapping (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.file_system_arn (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.file_system_local_mount_path (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.function_name (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.handler (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.hash_extra (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.ignore_source_code_hash (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.image_config_command (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.image_config_entry_point (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.image_config_working_directory (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.image_uri (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.kms_key_arn (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.lambda_at_edge (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.lambda_role (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.layer_name (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.layer_name (expand)" -> "[root] random_pet.this (expand)"
		"[root] module.lambda_layer.var.layers (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.license_info (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.local_existing_package (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.maximum_event_age_in_seconds (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.maximum_retry_attempts (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.memory_size (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.number_of_policies (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.number_of_policy_jsons (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.package_type (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.policies (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.policy (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.policy_json (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.policy_jsons (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.policy_path (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.policy_statements (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.provisioned_concurrent_executions (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.publish (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.recreate_missing_package (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.reserved_concurrent_executions (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.role_description (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.role_force_detach_policies (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.role_name (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.role_path (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.role_permissions_boundary (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.role_tags (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.runtime (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.s3_acl (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.s3_bucket (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.s3_existing_package (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.s3_object_storage_class (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.s3_object_tags (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.s3_prefix (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.s3_server_side_encryption (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.source_path (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.store_on_s3 (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.tags (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.timeout (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.tracing_mode (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.trusted_entities (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.use_existing_cloudwatch_log_group (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.vpc_security_group_ids (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer.var.vpc_subnet_ids (expand)" -> "[root] module.lambda_layer (expand)"
		"[root] module.lambda_layer_pip_requirements (close)" -> "[root] module.lambda_layer_pip_requirements.aws_iam_role_policy_attachment.additional_inline (expand)"
		"[root] module.lambda_layer_pip_requirements (close)" -> "[root] module.lambda_layer_pip_requirements.aws_iam_role_policy_attachment.additional_json (expand)"
		"[root] module.lambda_layer_pip_requirements (close)" -> "[root] module.lambda_layer_pip_requirements.aws_iam_role_policy_attachment.additional_jsons (expand)"
		"[root] module.lambda_layer_pip_requirements (close)" -> "[root] module.lambda_layer_pip_requirements.aws_iam_role_policy_attachment.additional_many (expand)"
		"[root] module.lambda_layer_pip_requirements (close)" -> "[root] module.lambda_layer_pip_requirements.aws_iam_role_policy_attachment.additional_one (expand)"
		"[root] module.lambda_layer_pip_requirements (close)" -> "[root] module.lambda_layer_pip_requirements.aws_iam_role_policy_attachment.async (expand)"
		"[root] module.lambda_layer_pip_requirements (close)" -> "[root] module.lambda_layer_pip_requirements.aws_iam_role_policy_attachment.dead_letter (expand)"
		"[root] module.lambda_layer_pip_requirements (close)" -> "[root] module.lambda_layer_pip_requirements.aws_iam_role_policy_attachment.logs (expand)"
		"[root] module.lambda_layer_pip_requirements (close)" -> "[root] module.lambda_layer_pip_requirements.aws_iam_role_policy_attachment.tracing (expand)"
		"[root] module.lambda_layer_pip_requirements (close)" -> "[root] module.lambda_layer_pip_requirements.aws_iam_role_policy_attachment.vpc (expand)"
		"[root] module.lambda_layer_pip_requirements (close)" -> "[root] module.lambda_layer_pip_requirements.aws_lambda_function_event_invoke_config.this (expand)"
		"[root] module.lambda_layer_pip_requirements (close)" -> "[root] module.lambda_layer_pip_requirements.aws_lambda_permission.current_version_triggers (expand)"
		"[root] module.lambda_layer_pip_requirements (close)" -> "[root] module.lambda_layer_pip_requirements.aws_lambda_permission.unqualified_alias_triggers (expand)"
		"[root] module.lambda_layer_pip_requirements (close)" -> "[root] module.lambda_layer_pip_requirements.aws_lambda_provisioned_concurrency_config.current_version (expand)"
		"[root] module.lambda_layer_pip_requirements (close)" -> "[root] module.lambda_layer_pip_requirements.output.lambda_cloudwatch_log_group_arn (expand)"
		"[root] module.lambda_layer_pip_requirements (close)" -> "[root] module.lambda_layer_pip_requirements.output.lambda_cloudwatch_log_group_name (expand)"
		"[root] module.lambda_layer_pip_requirements (close)" -> "[root] module.lambda_layer_pip_requirements.output.lambda_event_source_mapping_function_arn (expand)"
		"[root] module.lambda_layer_pip_requirements (close)" -> "[root] module.lambda_layer_pip_requirements.output.lambda_event_source_mapping_state (expand)"
		"[root] module.lambda_layer_pip_requirements (close)" -> "[root] module.lambda_layer_pip_requirements.output.lambda_event_source_mapping_state_transition_reason (expand)"
		"[root] module.lambda_layer_pip_requirements (close)" -> "[root] module.lambda_layer_pip_requirements.output.lambda_event_source_mapping_uuid (expand)"
		"[root] module.lambda_layer_pip_requirements (close)" -> "[root] module.lambda_layer_pip_requirements.output.lambda_function_arn (expand)"
		"[root] module.lambda_layer_pip_requirements (close)" -> "[root] module.lambda_layer_pip_requirements.output.lambda_function_invoke_arn (expand)"
		"[root] module.lambda_layer_pip_requirements (close)" -> "[root] module.lambda_layer_pip_requirements.output.lambda_function_kms_key_arn (expand)"
		"[root] module.lambda_layer_pip_requirements (close)" -> "[root] module.lambda_layer_pip_requirements.output.lambda_function_last_modified (expand)"
		"[root] module.lambda_layer_pip_requirements (close)" -> "[root] module.lambda_layer_pip_requirements.output.lambda_function_name (expand)"
		"[root] module.lambda_layer_pip_requirements (close)" -> "[root] module.lambda_layer_pip_requirements.output.lambda_function_qualified_arn (expand)"
		"[root] module.lambda_layer_pip_requirements (close)" -> "[root] module.lambda_layer_pip_requirements.output.lambda_function_source_code_hash (expand)"
		"[root] module.lambda_layer_pip_requirements (close)" -> "[root] module.lambda_layer_pip_requirements.output.lambda_function_source_code_size (expand)"
		"[root] module.lambda_layer_pip_requirements (close)" -> "[root] module.lambda_layer_pip_requirements.output.lambda_function_version (expand)"
		"[root] module.lambda_layer_pip_requirements (close)" -> "[root] module.lambda_layer_pip_requirements.output.lambda_layer_arn (expand)"
		"[root] module.lambda_layer_pip_requirements (close)" -> "[root] module.lambda_layer_pip_requirements.output.lambda_layer_created_date (expand)"
		"[root] module.lambda_layer_pip_requirements (close)" -> "[root] module.lambda_layer_pip_requirements.output.lambda_layer_layer_arn (expand)"
		"[root] module.lambda_layer_pip_requirements (close)" -> "[root] module.lambda_layer_pip_requirements.output.lambda_layer_source_code_size (expand)"
		"[root] module.lambda_layer_pip_requirements (close)" -> "[root] module.lambda_layer_pip_requirements.output.lambda_layer_version (expand)"
		"[root] module.lambda_layer_pip_requirements (close)" -> "[root] module.lambda_layer_pip_requirements.output.lambda_role_arn (expand)"
		"[root] module.lambda_layer_pip_requirements (close)" -> "[root] module.lambda_layer_pip_requirements.output.lambda_role_name (expand)"
		"[root] module.lambda_layer_pip_requirements (close)" -> "[root] module.lambda_layer_pip_requirements.output.lambda_role_unique_id (expand)"
		"[root] module.lambda_layer_pip_requirements (close)" -> "[root] module.lambda_layer_pip_requirements.output.local_filename (expand)"
		"[root] module.lambda_layer_pip_requirements (close)" -> "[root] module.lambda_layer_pip_requirements.output.s3_object (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.lambda_layer_pip_requirements.var.cloudwatch_logs_kms_key_id (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.lambda_layer_pip_requirements.var.cloudwatch_logs_retention_in_days (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.lambda_layer_pip_requirements.var.cloudwatch_logs_tags (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.lambda_layer_pip_requirements.var.create (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.lambda_layer_pip_requirements.var.create_function (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.lambda_layer_pip_requirements.var.create_layer (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.lambda_layer_pip_requirements.var.function_name (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.lambda_layer_pip_requirements.var.lambda_at_edge (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.lambda_layer_pip_requirements.var.tags (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.lambda_layer_pip_requirements.var.use_existing_cloudwatch_log_group (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_cloudwatch_log_group.lambda (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.lambda_layer_pip_requirements.aws_iam_policy.additional_inline (expand)" -> "[root] module.lambda_layer_pip_requirements.data.aws_iam_policy_document.additional_inline (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_iam_policy.additional_inline (expand)" -> "[root] module.lambda_layer_pip_requirements.local.role_name (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_iam_policy.additional_inline (expand)" -> "[root] module.lambda_layer_pip_requirements.var.policy_path (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_iam_policy.additional_inline (expand)" -> "[root] module.lambda_layer_pip_requirements.var.tags (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_iam_policy.additional_json (expand)" -> "[root] module.lambda_layer_pip_requirements.local.role_name (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_iam_policy.additional_json (expand)" -> "[root] module.lambda_layer_pip_requirements.var.attach_policy_json (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_iam_policy.additional_json (expand)" -> "[root] module.lambda_layer_pip_requirements.var.policy_json (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_iam_policy.additional_json (expand)" -> "[root] module.lambda_layer_pip_requirements.var.policy_path (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_iam_policy.additional_json (expand)" -> "[root] module.lambda_layer_pip_requirements.var.tags (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_iam_policy.additional_json (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.lambda_layer_pip_requirements.aws_iam_policy.additional_jsons (expand)" -> "[root] module.lambda_layer_pip_requirements.local.role_name (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_iam_policy.additional_jsons (expand)" -> "[root] module.lambda_layer_pip_requirements.var.attach_policy_jsons (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_iam_policy.additional_jsons (expand)" -> "[root] module.lambda_layer_pip_requirements.var.number_of_policy_jsons (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_iam_policy.additional_jsons (expand)" -> "[root] module.lambda_layer_pip_requirements.var.policy_jsons (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_iam_policy.additional_jsons (expand)" -> "[root] module.lambda_layer_pip_requirements.var.policy_path (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_iam_policy.additional_jsons (expand)" -> "[root] module.lambda_layer_pip_requirements.var.tags (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_iam_policy.additional_jsons (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.lambda_layer_pip_requirements.aws_iam_policy.async (expand)" -> "[root] module.lambda_layer_pip_requirements.data.aws_iam_policy_document.async (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_iam_policy.async (expand)" -> "[root] module.lambda_layer_pip_requirements.local.role_name (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_iam_policy.async (expand)" -> "[root] module.lambda_layer_pip_requirements.var.policy_path (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_iam_policy.async (expand)" -> "[root] module.lambda_layer_pip_requirements.var.tags (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_iam_policy.dead_letter (expand)" -> "[root] module.lambda_layer_pip_requirements.data.aws_iam_policy_document.dead_letter (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_iam_policy.dead_letter (expand)" -> "[root] module.lambda_layer_pip_requirements.local.role_name (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_iam_policy.dead_letter (expand)" -> "[root] module.lambda_layer_pip_requirements.var.policy_path (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_iam_policy.dead_letter (expand)" -> "[root] module.lambda_layer_pip_requirements.var.tags (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_iam_policy.logs (expand)" -> "[root] module.lambda_layer_pip_requirements.data.aws_iam_policy_document.logs (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_iam_policy.logs (expand)" -> "[root] module.lambda_layer_pip_requirements.local.role_name (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_iam_policy.logs (expand)" -> "[root] module.lambda_layer_pip_requirements.var.policy_path (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_iam_policy.tracing (expand)" -> "[root] module.lambda_layer_pip_requirements.data.aws_iam_policy.tracing (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_iam_policy.tracing (expand)" -> "[root] module.lambda_layer_pip_requirements.local.role_name (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_iam_policy.tracing (expand)" -> "[root] module.lambda_layer_pip_requirements.var.policy_path (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_iam_policy.tracing (expand)" -> "[root] module.lambda_layer_pip_requirements.var.tags (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_iam_policy.vpc (expand)" -> "[root] module.lambda_layer_pip_requirements.data.aws_iam_policy.vpc (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_iam_policy.vpc (expand)" -> "[root] module.lambda_layer_pip_requirements.local.role_name (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_iam_policy.vpc (expand)" -> "[root] module.lambda_layer_pip_requirements.var.policy_path (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_iam_policy.vpc (expand)" -> "[root] module.lambda_layer_pip_requirements.var.tags (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_iam_role.lambda (expand)" -> "[root] module.lambda_layer_pip_requirements.data.aws_iam_policy_document.assume_role (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_iam_role.lambda (expand)" -> "[root] module.lambda_layer_pip_requirements.local.role_name (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_iam_role.lambda (expand)" -> "[root] module.lambda_layer_pip_requirements.var.role_description (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_iam_role.lambda (expand)" -> "[root] module.lambda_layer_pip_requirements.var.role_force_detach_policies (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_iam_role.lambda (expand)" -> "[root] module.lambda_layer_pip_requirements.var.role_path (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_iam_role.lambda (expand)" -> "[root] module.lambda_layer_pip_requirements.var.role_permissions_boundary (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_iam_role.lambda (expand)" -> "[root] module.lambda_layer_pip_requirements.var.role_tags (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_iam_role.lambda (expand)" -> "[root] module.lambda_layer_pip_requirements.var.tags (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_iam_role_policy_attachment.additional_inline (expand)" -> "[root] module.lambda_layer_pip_requirements.aws_iam_policy.additional_inline (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_iam_role_policy_attachment.additional_inline (expand)" -> "[root] module.lambda_layer_pip_requirements.aws_iam_role.lambda (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_iam_role_policy_attachment.additional_json (expand)" -> "[root] module.lambda_layer_pip_requirements.aws_iam_policy.additional_json (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_iam_role_policy_attachment.additional_json (expand)" -> "[root] module.lambda_layer_pip_requirements.aws_iam_role.lambda (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_iam_role_policy_attachment.additional_jsons (expand)" -> "[root] module.lambda_layer_pip_requirements.aws_iam_policy.additional_jsons (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_iam_role_policy_attachment.additional_jsons (expand)" -> "[root] module.lambda_layer_pip_requirements.aws_iam_role.lambda (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_iam_role_policy_attachment.additional_many (expand)" -> "[root] module.lambda_layer_pip_requirements.aws_iam_role.lambda (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_iam_role_policy_attachment.additional_many (expand)" -> "[root] module.lambda_layer_pip_requirements.var.attach_policies (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_iam_role_policy_attachment.additional_many (expand)" -> "[root] module.lambda_layer_pip_requirements.var.number_of_policies (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_iam_role_policy_attachment.additional_many (expand)" -> "[root] module.lambda_layer_pip_requirements.var.policies (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_iam_role_policy_attachment.additional_one (expand)" -> "[root] module.lambda_layer_pip_requirements.aws_iam_role.lambda (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_iam_role_policy_attachment.additional_one (expand)" -> "[root] module.lambda_layer_pip_requirements.var.attach_policy (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_iam_role_policy_attachment.additional_one (expand)" -> "[root] module.lambda_layer_pip_requirements.var.policy (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_iam_role_policy_attachment.async (expand)" -> "[root] module.lambda_layer_pip_requirements.aws_iam_policy.async (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_iam_role_policy_attachment.async (expand)" -> "[root] module.lambda_layer_pip_requirements.aws_iam_role.lambda (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_iam_role_policy_attachment.dead_letter (expand)" -> "[root] module.lambda_layer_pip_requirements.aws_iam_policy.dead_letter (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_iam_role_policy_attachment.dead_letter (expand)" -> "[root] module.lambda_layer_pip_requirements.aws_iam_role.lambda (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_iam_role_policy_attachment.logs (expand)" -> "[root] module.lambda_layer_pip_requirements.aws_iam_policy.logs (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_iam_role_policy_attachment.logs (expand)" -> "[root] module.lambda_layer_pip_requirements.aws_iam_role.lambda (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_iam_role_policy_attachment.tracing (expand)" -> "[root] module.lambda_layer_pip_requirements.aws_iam_policy.tracing (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_iam_role_policy_attachment.tracing (expand)" -> "[root] module.lambda_layer_pip_requirements.aws_iam_role.lambda (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_iam_role_policy_attachment.vpc (expand)" -> "[root] module.lambda_layer_pip_requirements.aws_iam_policy.vpc (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_iam_role_policy_attachment.vpc (expand)" -> "[root] module.lambda_layer_pip_requirements.aws_iam_role.lambda (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_lambda_event_source_mapping.this (expand)" -> "[root] module.lambda_layer_pip_requirements.aws_lambda_function.this (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_lambda_event_source_mapping.this (expand)" -> "[root] module.lambda_layer_pip_requirements.var.create_unqualified_alias_allowed_triggers (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_lambda_event_source_mapping.this (expand)" -> "[root] module.lambda_layer_pip_requirements.var.event_source_mapping (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_lambda_function.this (expand)" -> "[root] module.lambda_layer_pip_requirements.aws_cloudwatch_log_group.lambda (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_lambda_function.this (expand)" -> "[root] module.lambda_layer_pip_requirements.aws_iam_role.lambda (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_lambda_function.this (expand)" -> "[root] module.lambda_layer_pip_requirements.local.filename (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_lambda_function.this (expand)" -> "[root] module.lambda_layer_pip_requirements.local.s3_bucket (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_lambda_function.this (expand)" -> "[root] module.lambda_layer_pip_requirements.local.s3_object_version (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_lambda_function.this (expand)" -> "[root] module.lambda_layer_pip_requirements.local.was_missing (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_lambda_function.this (expand)" -> "[root] module.lambda_layer_pip_requirements.var.architectures (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_lambda_function.this (expand)" -> "[root] module.lambda_layer_pip_requirements.var.dead_letter_target_arn (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_lambda_function.this (expand)" -> "[root] module.lambda_layer_pip_requirements.var.description (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_lambda_function.this (expand)" -> "[root] module.lambda_layer_pip_requirements.var.environment_variables (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_lambda_function.this (expand)" -> "[root] module.lambda_layer_pip_requirements.var.file_system_arn (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_lambda_function.this (expand)" -> "[root] module.lambda_layer_pip_requirements.var.file_system_local_mount_path (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_lambda_function.this (expand)" -> "[root] module.lambda_layer_pip_requirements.var.handler (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_lambda_function.this (expand)" -> "[root] module.lambda_layer_pip_requirements.var.ignore_source_code_hash (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_lambda_function.this (expand)" -> "[root] module.lambda_layer_pip_requirements.var.image_config_command (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_lambda_function.this (expand)" -> "[root] module.lambda_layer_pip_requirements.var.image_config_entry_point (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_lambda_function.this (expand)" -> "[root] module.lambda_layer_pip_requirements.var.image_config_working_directory (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_lambda_function.this (expand)" -> "[root] module.lambda_layer_pip_requirements.var.image_uri (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_lambda_function.this (expand)" -> "[root] module.lambda_layer_pip_requirements.var.kms_key_arn (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_lambda_function.this (expand)" -> "[root] module.lambda_layer_pip_requirements.var.lambda_role (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_lambda_function.this (expand)" -> "[root] module.lambda_layer_pip_requirements.var.layers (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_lambda_function.this (expand)" -> "[root] module.lambda_layer_pip_requirements.var.memory_size (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_lambda_function.this (expand)" -> "[root] module.lambda_layer_pip_requirements.var.package_type (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_lambda_function.this (expand)" -> "[root] module.lambda_layer_pip_requirements.var.publish (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_lambda_function.this (expand)" -> "[root] module.lambda_layer_pip_requirements.var.reserved_concurrent_executions (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_lambda_function.this (expand)" -> "[root] module.lambda_layer_pip_requirements.var.timeout (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_lambda_function.this (expand)" -> "[root] module.lambda_layer_pip_requirements.var.tracing_mode (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_lambda_function.this (expand)" -> "[root] module.lambda_layer_pip_requirements.var.vpc_security_group_ids (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_lambda_function.this (expand)" -> "[root] module.lambda_layer_pip_requirements.var.vpc_subnet_ids (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.lambda_layer_pip_requirements.aws_lambda_function.this (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.lambda_layer_pip_requirements.local.qualifiers (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.lambda_layer_pip_requirements.var.create_async_event_config (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.lambda_layer_pip_requirements.var.destination_on_failure (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.lambda_layer_pip_requirements.var.destination_on_success (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.lambda_layer_pip_requirements.var.maximum_event_age_in_seconds (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.lambda_layer_pip_requirements.var.maximum_retry_attempts (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_lambda_layer_version.this (expand)" -> "[root] module.lambda_layer_pip_requirements.local.filename (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_lambda_layer_version.this (expand)" -> "[root] module.lambda_layer_pip_requirements.local.s3_bucket (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_lambda_layer_version.this (expand)" -> "[root] module.lambda_layer_pip_requirements.local.s3_object_version (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_lambda_layer_version.this (expand)" -> "[root] module.lambda_layer_pip_requirements.local.was_missing (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_lambda_layer_version.this (expand)" -> "[root] module.lambda_layer_pip_requirements.var.compatible_architectures (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_lambda_layer_version.this (expand)" -> "[root] module.lambda_layer_pip_requirements.var.compatible_runtimes (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_lambda_layer_version.this (expand)" -> "[root] module.lambda_layer_pip_requirements.var.create_layer (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_lambda_layer_version.this (expand)" -> "[root] module.lambda_layer_pip_requirements.var.description (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_lambda_layer_version.this (expand)" -> "[root] module.lambda_layer_pip_requirements.var.ignore_source_code_hash (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_lambda_layer_version.this (expand)" -> "[root] module.lambda_layer_pip_requirements.var.layer_name (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_lambda_layer_version.this (expand)" -> "[root] module.lambda_layer_pip_requirements.var.license_info (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_lambda_permission.current_version_triggers (expand)" -> "[root] module.lambda_layer_pip_requirements.aws_lambda_function.this (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_lambda_permission.current_version_triggers (expand)" -> "[root] module.lambda_layer_pip_requirements.var.allowed_triggers (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_lambda_permission.current_version_triggers (expand)" -> "[root] module.lambda_layer_pip_requirements.var.create_current_version_allowed_triggers (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_lambda_permission.unqualified_alias_triggers (expand)" -> "[root] module.lambda_layer_pip_requirements.aws_lambda_function.this (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_lambda_permission.unqualified_alias_triggers (expand)" -> "[root] module.lambda_layer_pip_requirements.var.allowed_triggers (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_lambda_permission.unqualified_alias_triggers (expand)" -> "[root] module.lambda_layer_pip_requirements.var.create_unqualified_alias_allowed_triggers (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_lambda_provisioned_concurrency_config.current_version (expand)" -> "[root] module.lambda_layer_pip_requirements.aws_lambda_function.this (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_lambda_provisioned_concurrency_config.current_version (expand)" -> "[root] module.lambda_layer_pip_requirements.var.provisioned_concurrent_executions (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.lambda_layer_pip_requirements.local.s3_key (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.lambda_layer_pip_requirements.null_resource.archive (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.lambda_layer_pip_requirements.var.s3_acl (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.lambda_layer_pip_requirements.var.s3_bucket (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.lambda_layer_pip_requirements.var.s3_object_storage_class (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.lambda_layer_pip_requirements.var.s3_object_tags (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.lambda_layer_pip_requirements.var.s3_server_side_encryption (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.lambda_layer_pip_requirements.var.tags (expand)"
		"[root] module.lambda_layer_pip_requirements.aws_s3_bucket_object.lambda_package (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.lambda_layer_pip_requirements.data.aws_arn.log_group_arn (expand)" -> "[root] module.lambda_layer_pip_requirements.local.create_role (expand)"
		"[root] module.lambda_layer_pip_requirements.data.aws_arn.log_group_arn (expand)" -> "[root] module.lambda_layer_pip_requirements.local.log_group_arn_regional (expand)"
		"[root] module.lambda_layer_pip_requirements.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.lambda_layer_pip_requirements.var.create (expand)"
		"[root] module.lambda_layer_pip_requirements.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.lambda_layer_pip_requirements.var.create_function (expand)"
		"[root] module.lambda_layer_pip_requirements.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.lambda_layer_pip_requirements.var.create_layer (expand)"
		"[root] module.lambda_layer_pip_requirements.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.lambda_layer_pip_requirements.var.function_name (expand)"
		"[root] module.lambda_layer_pip_requirements.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.lambda_layer_pip_requirements.var.lambda_at_edge (expand)"
		"[root] module.lambda_layer_pip_requirements.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.lambda_layer_pip_requirements.var.use_existing_cloudwatch_log_group (expand)"
		"[root] module.lambda_layer_pip_requirements.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.lambda_layer_pip_requirements.data.aws_iam_policy.tracing (expand)" -> "[root] module.lambda_layer_pip_requirements.data.aws_partition.current (expand)"
		"[root] module.lambda_layer_pip_requirements.data.aws_iam_policy.tracing (expand)" -> "[root] module.lambda_layer_pip_requirements.local.create_role (expand)"
		"[root] module.lambda_layer_pip_requirements.data.aws_iam_policy.tracing (expand)" -> "[root] module.lambda_layer_pip_requirements.var.attach_tracing_policy (expand)"
		"[root] module.lambda_layer_pip_requirements.data.aws_iam_policy.vpc (expand)" -> "[root] module.lambda_layer_pip_requirements.data.aws_partition.current (expand)"
		"[root] module.lambda_layer_pip_requirements.data.aws_iam_policy.vpc (expand)" -> "[root] module.lambda_layer_pip_requirements.local.create_role (expand)"
		"[root] module.lambda_layer_pip_requirements.data.aws_iam_policy.vpc (expand)" -> "[root] module.lambda_layer_pip_requirements.var.attach_network_policy (expand)"
		"[root] module.lambda_layer_pip_requirements.data.aws_iam_policy_document.additional_inline (expand)" -> "[root] module.lambda_layer_pip_requirements.local.create_role (expand)"
		"[root] module.lambda_layer_pip_requirements.data.aws_iam_policy_document.additional_inline (expand)" -> "[root] module.lambda_layer_pip_requirements.var.attach_policy_statements (expand)"
		"[root] module.lambda_layer_pip_requirements.data.aws_iam_policy_document.additional_inline (expand)" -> "[root] module.lambda_layer_pip_requirements.var.policy_statements (expand)"
		"[root] module.lambda_layer_pip_requirements.data.aws_iam_policy_document.additional_inline (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.lambda_layer_pip_requirements.data.aws_iam_policy_document.assume_role (expand)" -> "[root] module.lambda_layer_pip_requirements.local.create_role (expand)"
		"[root] module.lambda_layer_pip_requirements.data.aws_iam_policy_document.assume_role (expand)" -> "[root] module.lambda_layer_pip_requirements.local.trusted_entities_principals (expand)"
		"[root] module.lambda_layer_pip_requirements.data.aws_iam_policy_document.assume_role (expand)" -> "[root] module.lambda_layer_pip_requirements.local.trusted_entities_services (expand)"
		"[root] module.lambda_layer_pip_requirements.data.aws_iam_policy_document.assume_role (expand)" -> "[root] module.lambda_layer_pip_requirements.var.assume_role_policy_statements (expand)"
		"[root] module.lambda_layer_pip_requirements.data.aws_iam_policy_document.assume_role (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.lambda_layer_pip_requirements.data.aws_iam_policy_document.async (expand)" -> "[root] module.lambda_layer_pip_requirements.local.create_role (expand)"
		"[root] module.lambda_layer_pip_requirements.data.aws_iam_policy_document.async (expand)" -> "[root] module.lambda_layer_pip_requirements.var.attach_async_event_policy (expand)"
		"[root] module.lambda_layer_pip_requirements.data.aws_iam_policy_document.async (expand)" -> "[root] module.lambda_layer_pip_requirements.var.destination_on_failure (expand)"
		"[root] module.lambda_layer_pip_requirements.data.aws_iam_policy_document.async (expand)" -> "[root] module.lambda_layer_pip_requirements.var.destination_on_success (expand)"
		"[root] module.lambda_layer_pip_requirements.data.aws_iam_policy_document.async (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.lambda_layer_pip_requirements.data.aws_iam_policy_document.dead_letter (expand)" -> "[root] module.lambda_layer_pip_requirements.local.create_role (expand)"
		"[root] module.lambda_layer_pip_requirements.data.aws_iam_policy_document.dead_letter (expand)" -> "[root] module.lambda_layer_pip_requirements.var.attach_dead_letter_policy (expand)"
		"[root] module.lambda_layer_pip_requirements.data.aws_iam_policy_document.dead_letter (expand)" -> "[root] module.lambda_layer_pip_requirements.var.dead_letter_target_arn (expand)"
		"[root] module.lambda_layer_pip_requirements.data.aws_iam_policy_document.dead_letter (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.lambda_layer_pip_requirements.data.aws_iam_policy_document.logs (expand)" -> "[root] module.lambda_layer_pip_requirements.local.log_group_arn (expand)"
		"[root] module.lambda_layer_pip_requirements.data.aws_iam_policy_document.logs (expand)" -> "[root] module.lambda_layer_pip_requirements.var.attach_cloudwatch_logs_policy (expand)"
		"[root] module.lambda_layer_pip_requirements.data.aws_partition.current (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.data.aws_partition.current (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.lambda_layer_pip_requirements.data.external.archive_prepare (expand)" -> "[root] module.lambda_layer_pip_requirements.local.python (expand)"
		"[root] module.lambda_layer_pip_requirements.data.external.archive_prepare (expand)" -> "[root] module.lambda_layer_pip_requirements.var.artifacts_dir (expand)"
		"[root] module.lambda_layer_pip_requirements.data.external.archive_prepare (expand)" -> "[root] module.lambda_layer_pip_requirements.var.build_in_docker (expand)"
		"[root] module.lambda_layer_pip_requirements.data.external.archive_prepare (expand)" -> "[root] module.lambda_layer_pip_requirements.var.create (expand)"
		"[root] module.lambda_layer_pip_requirements.data.external.archive_prepare (expand)" -> "[root] module.lambda_layer_pip_requirements.var.create_package (expand)"
		"[root] module.lambda_layer_pip_requirements.data.external.archive_prepare (expand)" -> "[root] module.lambda_layer_pip_requirements.var.docker_build_root (expand)"
		"[root] module.lambda_layer_pip_requirements.data.external.archive_prepare (expand)" -> "[root] module.lambda_layer_pip_requirements.var.docker_file (expand)"
		"[root] module.lambda_layer_pip_requirements.data.external.archive_prepare (expand)" -> "[root] module.lambda_layer_pip_requirements.var.docker_image (expand)"
		"[root] module.lambda_layer_pip_requirements.data.external.archive_prepare (expand)" -> "[root] module.lambda_layer_pip_requirements.var.docker_pip_cache (expand)"
		"[root] module.lambda_layer_pip_requirements.data.external.archive_prepare (expand)" -> "[root] module.lambda_layer_pip_requirements.var.docker_with_ssh_agent (expand)"
		"[root] module.lambda_layer_pip_requirements.data.external.archive_prepare (expand)" -> "[root] module.lambda_layer_pip_requirements.var.hash_extra (expand)"
		"[root] module.lambda_layer_pip_requirements.data.external.archive_prepare (expand)" -> "[root] module.lambda_layer_pip_requirements.var.recreate_missing_package (expand)"
		"[root] module.lambda_layer_pip_requirements.data.external.archive_prepare (expand)" -> "[root] module.lambda_layer_pip_requirements.var.runtime (expand)"
		"[root] module.lambda_layer_pip_requirements.data.external.archive_prepare (expand)" -> "[root] module.lambda_layer_pip_requirements.var.source_path (expand)"
		"[root] module.lambda_layer_pip_requirements.data.external.archive_prepare (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/external\"]"
		"[root] module.lambda_layer_pip_requirements.local.archive_filename (expand)" -> "[root] module.lambda_layer_pip_requirements.data.external.archive_prepare (expand)"
		"[root] module.lambda_layer_pip_requirements.local.archive_was_missing (expand)" -> "[root] module.lambda_layer_pip_requirements.data.external.archive_prepare (expand)"
		"[root] module.lambda_layer_pip_requirements.local.create_role (expand)" -> "[root] module.lambda_layer_pip_requirements.var.create (expand)"
		"[root] module.lambda_layer_pip_requirements.local.create_role (expand)" -> "[root] module.lambda_layer_pip_requirements.var.create_function (expand)"
		"[root] module.lambda_layer_pip_requirements.local.create_role (expand)" -> "[root] module.lambda_layer_pip_requirements.var.create_layer (expand)"
		"[root] module.lambda_layer_pip_requirements.local.create_role (expand)" -> "[root] module.lambda_layer_pip_requirements.var.create_role (expand)"
		"[root] module.lambda_layer_pip_requirements.local.filename (expand)" -> "[root] module.lambda_layer_pip_requirements.local.archive_filename (expand)"
		"[root] module.lambda_layer_pip_requirements.local.filename (expand)" -> "[root] module.lambda_layer_pip_requirements.var.local_existing_package (expand)"
		"[root] module.lambda_layer_pip_requirements.local.filename (expand)" -> "[root] module.lambda_layer_pip_requirements.var.store_on_s3 (expand)"
		"[root] module.lambda_layer_pip_requirements.local.log_group_arn (expand)" -> "[root] module.lambda_layer_pip_requirements.data.aws_arn.log_group_arn (expand)"
		"[root] module.lambda_layer_pip_requirements.local.log_group_arn_regional (expand)" -> "[root] module.lambda_layer_pip_requirements.aws_cloudwatch_log_group.lambda (expand)"
		"[root] module.lambda_layer_pip_requirements.local.log_group_arn_regional (expand)" -> "[root] module.lambda_layer_pip_requirements.data.aws_cloudwatch_log_group.lambda (expand)"
		"[root] module.lambda_layer_pip_requirements.local.log_group_name (expand)" -> "[root] module.lambda_layer_pip_requirements.aws_cloudwatch_log_group.lambda (expand)"
		"[root] module.lambda_layer_pip_requirements.local.log_group_name (expand)" -> "[root] module.lambda_layer_pip_requirements.data.aws_cloudwatch_log_group.lambda (expand)"
		"[root] module.lambda_layer_pip_requirements.local.python (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.local.qualifiers (expand)" -> "[root] module.lambda_layer_pip_requirements.var.create_current_version_async_event_config (expand)"
		"[root] module.lambda_layer_pip_requirements.local.qualifiers (expand)" -> "[root] module.lambda_layer_pip_requirements.var.create_unqualified_alias_async_event_config (expand)"
		"[root] module.lambda_layer_pip_requirements.local.role_name (expand)" -> "[root] module.lambda_layer_pip_requirements.local.create_role (expand)"
		"[root] module.lambda_layer_pip_requirements.local.role_name (expand)" -> "[root] module.lambda_layer_pip_requirements.var.function_name (expand)"
		"[root] module.lambda_layer_pip_requirements.local.role_name (expand)" -> "[root] module.lambda_layer_pip_requirements.var.role_name (expand)"
		"[root] module.lambda_layer_pip_requirements.local.s3_bucket (expand)" -> "[root] module.lambda_layer_pip_requirements.var.s3_bucket (expand)"
		"[root] module.lambda_layer_pip_requirements.local.s3_bucket (expand)" -> "[root] module.lambda_layer_pip_requirements.var.s3_existing_package (expand)"
		"[root] module.lambda_layer_pip_requirements.local.s3_bucket (expand)" -> "[root] module.lambda_layer_pip_requirements.var.store_on_s3 (expand)"
		"[root] module.lambda_layer_pip_requirements.local.s3_key (expand)" -> "[root] module.lambda_layer_pip_requirements.local.archive_filename (expand)"
		"[root] module.lambda_layer_pip_requirements.local.s3_key (expand)" -> "[root] module.lambda_layer_pip_requirements.var.s3_existing_package (expand)"
		"[root] module.lambda_layer_pip_requirements.local.s3_key (expand)" -> "[root] module.lambda_layer_pip_requirements.var.s3_prefix (expand)"
		"[root] module.lambda_layer_pip_requirements.local.s3_key (expand)" -> "[root] module.lambda_layer_pip_requirements.var.store_on_s3 (expand)"
		"[root] module.lambda_layer_pip_requirements.local.s3_object_version (expand)" -> "[root] module.lambda_layer_pip_requirements.aws_s3_bucket_object.lambda_package (expand)"
		"[root] module.lambda_layer_pip_requirements.local.trusted_entities_principals (expand)" -> "[root] module.lambda_layer_pip_requirements.var.trusted_entities (expand)"
		"[root] module.lambda_layer_pip_requirements.local.trusted_entities_services (expand)" -> "[root] module.lambda_layer_pip_requirements.var.lambda_at_edge (expand)"
		"[root] module.lambda_layer_pip_requirements.local.trusted_entities_services (expand)" -> "[root] module.lambda_layer_pip_requirements.var.trusted_entities (expand)"
		"[root] module.lambda_layer_pip_requirements.local.was_missing (expand)" -> "[root] module.lambda_layer_pip_requirements.local.archive_was_missing (expand)"
		"[root] module.lambda_layer_pip_requirements.local.was_missing (expand)" -> "[root] module.lambda_layer_pip_requirements.var.local_existing_package (expand)"
		"[root] module.lambda_layer_pip_requirements.local_file.archive_plan (expand)" -> "[root] module.lambda_layer_pip_requirements.data.external.archive_prepare (expand)"
		"[root] module.lambda_layer_pip_requirements.local_file.archive_plan (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/local\"]"
		"[root] module.lambda_layer_pip_requirements.null_resource.archive (expand)" -> "[root] module.lambda_layer_pip_requirements.local_file.archive_plan (expand)"
		"[root] module.lambda_layer_pip_requirements.null_resource.archive (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/null\"]"
		"[root] module.lambda_layer_pip_requirements.null_resource.archive (expand)" -> "[root] provisioner.local-exec"
		"[root] module.lambda_layer_pip_requirements.output.lambda_cloudwatch_log_group_arn (expand)" -> "[root] module.lambda_layer_pip_requirements.local.log_group_arn (expand)"
		"[root] module.lambda_layer_pip_requirements.output.lambda_cloudwatch_log_group_name (expand)" -> "[root] module.lambda_layer_pip_requirements.local.log_group_name (expand)"
		"[root] module.lambda_layer_pip_requirements.output.lambda_event_source_mapping_function_arn (expand)" -> "[root] module.lambda_layer_pip_requirements.aws_lambda_event_source_mapping.this (expand)"
		"[root] module.lambda_layer_pip_requirements.output.lambda_event_source_mapping_state (expand)" -> "[root] module.lambda_layer_pip_requirements.aws_lambda_event_source_mapping.this (expand)"
		"[root] module.lambda_layer_pip_requirements.output.lambda_event_source_mapping_state_transition_reason (expand)" -> "[root] module.lambda_layer_pip_requirements.aws_lambda_event_source_mapping.this (expand)"
		"[root] module.lambda_layer_pip_requirements.output.lambda_event_source_mapping_uuid (expand)" -> "[root] module.lambda_layer_pip_requirements.aws_lambda_event_source_mapping.this (expand)"
		"[root] module.lambda_layer_pip_requirements.output.lambda_function_arn (expand)" -> "[root] module.lambda_layer_pip_requirements.aws_lambda_function.this (expand)"
		"[root] module.lambda_layer_pip_requirements.output.lambda_function_invoke_arn (expand)" -> "[root] module.lambda_layer_pip_requirements.aws_lambda_function.this (expand)"
		"[root] module.lambda_layer_pip_requirements.output.lambda_function_kms_key_arn (expand)" -> "[root] module.lambda_layer_pip_requirements.aws_lambda_function.this (expand)"
		"[root] module.lambda_layer_pip_requirements.output.lambda_function_last_modified (expand)" -> "[root] module.lambda_layer_pip_requirements.aws_lambda_function.this (expand)"
		"[root] module.lambda_layer_pip_requirements.output.lambda_function_name (expand)" -> "[root] module.lambda_layer_pip_requirements.aws_lambda_function.this (expand)"
		"[root] module.lambda_layer_pip_requirements.output.lambda_function_qualified_arn (expand)" -> "[root] module.lambda_layer_pip_requirements.aws_lambda_function.this (expand)"
		"[root] module.lambda_layer_pip_requirements.output.lambda_function_source_code_hash (expand)" -> "[root] module.lambda_layer_pip_requirements.aws_lambda_function.this (expand)"
		"[root] module.lambda_layer_pip_requirements.output.lambda_function_source_code_size (expand)" -> "[root] module.lambda_layer_pip_requirements.aws_lambda_function.this (expand)"
		"[root] module.lambda_layer_pip_requirements.output.lambda_function_version (expand)" -> "[root] module.lambda_layer_pip_requirements.aws_lambda_function.this (expand)"
		"[root] module.lambda_layer_pip_requirements.output.lambda_layer_arn (expand)" -> "[root] module.lambda_layer_pip_requirements.aws_lambda_layer_version.this (expand)"
		"[root] module.lambda_layer_pip_requirements.output.lambda_layer_created_date (expand)" -> "[root] module.lambda_layer_pip_requirements.aws_lambda_layer_version.this (expand)"
		"[root] module.lambda_layer_pip_requirements.output.lambda_layer_layer_arn (expand)" -> "[root] module.lambda_layer_pip_requirements.aws_lambda_layer_version.this (expand)"
		"[root] module.lambda_layer_pip_requirements.output.lambda_layer_source_code_size (expand)" -> "[root] module.lambda_layer_pip_requirements.aws_lambda_layer_version.this (expand)"
		"[root] module.lambda_layer_pip_requirements.output.lambda_layer_version (expand)" -> "[root] module.lambda_layer_pip_requirements.aws_lambda_layer_version.this (expand)"
		"[root] module.lambda_layer_pip_requirements.output.lambda_role_arn (expand)" -> "[root] module.lambda_layer_pip_requirements.aws_iam_role.lambda (expand)"
		"[root] module.lambda_layer_pip_requirements.output.lambda_role_name (expand)" -> "[root] module.lambda_layer_pip_requirements.aws_iam_role.lambda (expand)"
		"[root] module.lambda_layer_pip_requirements.output.lambda_role_unique_id (expand)" -> "[root] module.lambda_layer_pip_requirements.aws_iam_role.lambda (expand)"
		"[root] module.lambda_layer_pip_requirements.output.local_filename (expand)" -> "[root] module.lambda_layer_pip_requirements.local.filename (expand)"
		"[root] module.lambda_layer_pip_requirements.output.s3_object (expand)" -> "[root] module.lambda_layer_pip_requirements.local.s3_bucket (expand)"
		"[root] module.lambda_layer_pip_requirements.output.s3_object (expand)" -> "[root] module.lambda_layer_pip_requirements.local.s3_object_version (expand)"
		"[root] module.lambda_layer_pip_requirements.var.allowed_triggers (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.architectures (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.artifacts_dir (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.assume_role_policy_statements (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.attach_async_event_policy (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.attach_cloudwatch_logs_policy (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.attach_dead_letter_policy (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.attach_network_policy (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.attach_policies (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.attach_policy (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.attach_policy_json (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.attach_policy_jsons (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.attach_policy_statements (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.attach_tracing_policy (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.build_in_docker (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.cloudwatch_logs_kms_key_id (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.cloudwatch_logs_retention_in_days (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.cloudwatch_logs_tags (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.compatible_architectures (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.compatible_runtimes (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.create (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.create_async_event_config (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.create_current_version_allowed_triggers (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.create_current_version_async_event_config (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.create_function (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.create_layer (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.create_package (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.create_role (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.create_unqualified_alias_allowed_triggers (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.create_unqualified_alias_async_event_config (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.dead_letter_target_arn (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.description (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.destination_on_failure (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.destination_on_success (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.docker_build_root (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.docker_file (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.docker_image (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.docker_pip_cache (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.docker_with_ssh_agent (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.environment_variables (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.event_source_mapping (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.file_system_arn (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.file_system_local_mount_path (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.function_name (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.handler (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.hash_extra (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.ignore_source_code_hash (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.image_config_command (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.image_config_entry_point (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.image_config_working_directory (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.image_uri (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.kms_key_arn (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.lambda_at_edge (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.lambda_role (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.layer_name (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.layer_name (expand)" -> "[root] random_pet.this (expand)"
		"[root] module.lambda_layer_pip_requirements.var.layers (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.license_info (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.local_existing_package (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.maximum_event_age_in_seconds (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.maximum_retry_attempts (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.memory_size (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.number_of_policies (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.number_of_policy_jsons (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.package_type (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.policies (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.policy (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.policy_json (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.policy_jsons (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.policy_path (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.policy_statements (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.provisioned_concurrent_executions (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.publish (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.recreate_missing_package (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.reserved_concurrent_executions (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.role_description (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.role_force_detach_policies (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.role_name (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.role_path (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.role_permissions_boundary (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.role_tags (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.runtime (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.s3_acl (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.s3_bucket (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.s3_existing_package (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.s3_object_storage_class (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.s3_object_tags (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.s3_prefix (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.s3_server_side_encryption (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.source_path (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.store_on_s3 (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.tags (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.timeout (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.tracing_mode (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.trusted_entities (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.use_existing_cloudwatch_log_group (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.vpc_security_group_ids (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.lambda_layer_pip_requirements.var.vpc_subnet_ids (expand)" -> "[root] module.lambda_layer_pip_requirements (expand)"
		"[root] module.package_dir (close)" -> "[root] module.package_dir.aws_iam_role_policy_attachment.additional_inline (expand)"
		"[root] module.package_dir (close)" -> "[root] module.package_dir.aws_iam_role_policy_attachment.additional_json (expand)"
		"[root] module.package_dir (close)" -> "[root] module.package_dir.aws_iam_role_policy_attachment.additional_jsons (expand)"
		"[root] module.package_dir (close)" -> "[root] module.package_dir.aws_iam_role_policy_attachment.additional_many (expand)"
		"[root] module.package_dir (close)" -> "[root] module.package_dir.aws_iam_role_policy_attachment.additional_one (expand)"
		"[root] module.package_dir (close)" -> "[root] module.package_dir.aws_iam_role_policy_attachment.async (expand)"
		"[root] module.package_dir (close)" -> "[root] module.package_dir.aws_iam_role_policy_attachment.dead_letter (expand)"
		"[root] module.package_dir (close)" -> "[root] module.package_dir.aws_iam_role_policy_attachment.logs (expand)"
		"[root] module.package_dir (close)" -> "[root] module.package_dir.aws_iam_role_policy_attachment.tracing (expand)"
		"[root] module.package_dir (close)" -> "[root] module.package_dir.aws_iam_role_policy_attachment.vpc (expand)"
		"[root] module.package_dir (close)" -> "[root] module.package_dir.aws_lambda_function_event_invoke_config.this (expand)"
		"[root] module.package_dir (close)" -> "[root] module.package_dir.aws_lambda_permission.current_version_triggers (expand)"
		"[root] module.package_dir (close)" -> "[root] module.package_dir.aws_lambda_permission.unqualified_alias_triggers (expand)"
		"[root] module.package_dir (close)" -> "[root] module.package_dir.aws_lambda_provisioned_concurrency_config.current_version (expand)"
		"[root] module.package_dir (close)" -> "[root] module.package_dir.output.lambda_cloudwatch_log_group_arn (expand)"
		"[root] module.package_dir (close)" -> "[root] module.package_dir.output.lambda_cloudwatch_log_group_name (expand)"
		"[root] module.package_dir (close)" -> "[root] module.package_dir.output.lambda_event_source_mapping_function_arn (expand)"
		"[root] module.package_dir (close)" -> "[root] module.package_dir.output.lambda_event_source_mapping_state (expand)"
		"[root] module.package_dir (close)" -> "[root] module.package_dir.output.lambda_event_source_mapping_state_transition_reason (expand)"
		"[root] module.package_dir (close)" -> "[root] module.package_dir.output.lambda_event_source_mapping_uuid (expand)"
		"[root] module.package_dir (close)" -> "[root] module.package_dir.output.lambda_function_arn (expand)"
		"[root] module.package_dir (close)" -> "[root] module.package_dir.output.lambda_function_invoke_arn (expand)"
		"[root] module.package_dir (close)" -> "[root] module.package_dir.output.lambda_function_kms_key_arn (expand)"
		"[root] module.package_dir (close)" -> "[root] module.package_dir.output.lambda_function_last_modified (expand)"
		"[root] module.package_dir (close)" -> "[root] module.package_dir.output.lambda_function_name (expand)"
		"[root] module.package_dir (close)" -> "[root] module.package_dir.output.lambda_function_qualified_arn (expand)"
		"[root] module.package_dir (close)" -> "[root] module.package_dir.output.lambda_function_source_code_hash (expand)"
		"[root] module.package_dir (close)" -> "[root] module.package_dir.output.lambda_function_source_code_size (expand)"
		"[root] module.package_dir (close)" -> "[root] module.package_dir.output.lambda_function_version (expand)"
		"[root] module.package_dir (close)" -> "[root] module.package_dir.output.lambda_layer_arn (expand)"
		"[root] module.package_dir (close)" -> "[root] module.package_dir.output.lambda_layer_created_date (expand)"
		"[root] module.package_dir (close)" -> "[root] module.package_dir.output.lambda_layer_layer_arn (expand)"
		"[root] module.package_dir (close)" -> "[root] module.package_dir.output.lambda_layer_source_code_size (expand)"
		"[root] module.package_dir (close)" -> "[root] module.package_dir.output.lambda_layer_version (expand)"
		"[root] module.package_dir (close)" -> "[root] module.package_dir.output.lambda_role_arn (expand)"
		"[root] module.package_dir (close)" -> "[root] module.package_dir.output.lambda_role_name (expand)"
		"[root] module.package_dir (close)" -> "[root] module.package_dir.output.lambda_role_unique_id (expand)"
		"[root] module.package_dir (close)" -> "[root] module.package_dir.output.local_filename (expand)"
		"[root] module.package_dir (close)" -> "[root] module.package_dir.output.s3_object (expand)"
		"[root] module.package_dir.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_dir.var.cloudwatch_logs_kms_key_id (expand)"
		"[root] module.package_dir.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_dir.var.cloudwatch_logs_retention_in_days (expand)"
		"[root] module.package_dir.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_dir.var.cloudwatch_logs_tags (expand)"
		"[root] module.package_dir.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_dir.var.create (expand)"
		"[root] module.package_dir.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_dir.var.create_function (expand)"
		"[root] module.package_dir.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_dir.var.create_layer (expand)"
		"[root] module.package_dir.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_dir.var.function_name (expand)"
		"[root] module.package_dir.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_dir.var.lambda_at_edge (expand)"
		"[root] module.package_dir.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_dir.var.tags (expand)"
		"[root] module.package_dir.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_dir.var.use_existing_cloudwatch_log_group (expand)"
		"[root] module.package_dir.aws_cloudwatch_log_group.lambda (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_dir.aws_iam_policy.additional_inline (expand)" -> "[root] module.package_dir.data.aws_iam_policy_document.additional_inline (expand)"
		"[root] module.package_dir.aws_iam_policy.additional_inline (expand)" -> "[root] module.package_dir.local.role_name (expand)"
		"[root] module.package_dir.aws_iam_policy.additional_inline (expand)" -> "[root] module.package_dir.var.policy_path (expand)"
		"[root] module.package_dir.aws_iam_policy.additional_inline (expand)" -> "[root] module.package_dir.var.tags (expand)"
		"[root] module.package_dir.aws_iam_policy.additional_json (expand)" -> "[root] module.package_dir.local.role_name (expand)"
		"[root] module.package_dir.aws_iam_policy.additional_json (expand)" -> "[root] module.package_dir.var.attach_policy_json (expand)"
		"[root] module.package_dir.aws_iam_policy.additional_json (expand)" -> "[root] module.package_dir.var.policy_json (expand)"
		"[root] module.package_dir.aws_iam_policy.additional_json (expand)" -> "[root] module.package_dir.var.policy_path (expand)"
		"[root] module.package_dir.aws_iam_policy.additional_json (expand)" -> "[root] module.package_dir.var.tags (expand)"
		"[root] module.package_dir.aws_iam_policy.additional_json (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_dir.aws_iam_policy.additional_jsons (expand)" -> "[root] module.package_dir.local.role_name (expand)"
		"[root] module.package_dir.aws_iam_policy.additional_jsons (expand)" -> "[root] module.package_dir.var.attach_policy_jsons (expand)"
		"[root] module.package_dir.aws_iam_policy.additional_jsons (expand)" -> "[root] module.package_dir.var.number_of_policy_jsons (expand)"
		"[root] module.package_dir.aws_iam_policy.additional_jsons (expand)" -> "[root] module.package_dir.var.policy_jsons (expand)"
		"[root] module.package_dir.aws_iam_policy.additional_jsons (expand)" -> "[root] module.package_dir.var.policy_path (expand)"
		"[root] module.package_dir.aws_iam_policy.additional_jsons (expand)" -> "[root] module.package_dir.var.tags (expand)"
		"[root] module.package_dir.aws_iam_policy.additional_jsons (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_dir.aws_iam_policy.async (expand)" -> "[root] module.package_dir.data.aws_iam_policy_document.async (expand)"
		"[root] module.package_dir.aws_iam_policy.async (expand)" -> "[root] module.package_dir.local.role_name (expand)"
		"[root] module.package_dir.aws_iam_policy.async (expand)" -> "[root] module.package_dir.var.policy_path (expand)"
		"[root] module.package_dir.aws_iam_policy.async (expand)" -> "[root] module.package_dir.var.tags (expand)"
		"[root] module.package_dir.aws_iam_policy.dead_letter (expand)" -> "[root] module.package_dir.data.aws_iam_policy_document.dead_letter (expand)"
		"[root] module.package_dir.aws_iam_policy.dead_letter (expand)" -> "[root] module.package_dir.local.role_name (expand)"
		"[root] module.package_dir.aws_iam_policy.dead_letter (expand)" -> "[root] module.package_dir.var.policy_path (expand)"
		"[root] module.package_dir.aws_iam_policy.dead_letter (expand)" -> "[root] module.package_dir.var.tags (expand)"
		"[root] module.package_dir.aws_iam_policy.logs (expand)" -> "[root] module.package_dir.data.aws_iam_policy_document.logs (expand)"
		"[root] module.package_dir.aws_iam_policy.logs (expand)" -> "[root] module.package_dir.local.role_name (expand)"
		"[root] module.package_dir.aws_iam_policy.logs (expand)" -> "[root] module.package_dir.var.policy_path (expand)"
		"[root] module.package_dir.aws_iam_policy.tracing (expand)" -> "[root] module.package_dir.data.aws_iam_policy.tracing (expand)"
		"[root] module.package_dir.aws_iam_policy.tracing (expand)" -> "[root] module.package_dir.local.role_name (expand)"
		"[root] module.package_dir.aws_iam_policy.tracing (expand)" -> "[root] module.package_dir.var.policy_path (expand)"
		"[root] module.package_dir.aws_iam_policy.tracing (expand)" -> "[root] module.package_dir.var.tags (expand)"
		"[root] module.package_dir.aws_iam_policy.vpc (expand)" -> "[root] module.package_dir.data.aws_iam_policy.vpc (expand)"
		"[root] module.package_dir.aws_iam_policy.vpc (expand)" -> "[root] module.package_dir.local.role_name (expand)"
		"[root] module.package_dir.aws_iam_policy.vpc (expand)" -> "[root] module.package_dir.var.policy_path (expand)"
		"[root] module.package_dir.aws_iam_policy.vpc (expand)" -> "[root] module.package_dir.var.tags (expand)"
		"[root] module.package_dir.aws_iam_role.lambda (expand)" -> "[root] module.package_dir.data.aws_iam_policy_document.assume_role (expand)"
		"[root] module.package_dir.aws_iam_role.lambda (expand)" -> "[root] module.package_dir.local.role_name (expand)"
		"[root] module.package_dir.aws_iam_role.lambda (expand)" -> "[root] module.package_dir.var.role_description (expand)"
		"[root] module.package_dir.aws_iam_role.lambda (expand)" -> "[root] module.package_dir.var.role_force_detach_policies (expand)"
		"[root] module.package_dir.aws_iam_role.lambda (expand)" -> "[root] module.package_dir.var.role_path (expand)"
		"[root] module.package_dir.aws_iam_role.lambda (expand)" -> "[root] module.package_dir.var.role_permissions_boundary (expand)"
		"[root] module.package_dir.aws_iam_role.lambda (expand)" -> "[root] module.package_dir.var.role_tags (expand)"
		"[root] module.package_dir.aws_iam_role.lambda (expand)" -> "[root] module.package_dir.var.tags (expand)"
		"[root] module.package_dir.aws_iam_role_policy_attachment.additional_inline (expand)" -> "[root] module.package_dir.aws_iam_policy.additional_inline (expand)"
		"[root] module.package_dir.aws_iam_role_policy_attachment.additional_inline (expand)" -> "[root] module.package_dir.aws_iam_role.lambda (expand)"
		"[root] module.package_dir.aws_iam_role_policy_attachment.additional_json (expand)" -> "[root] module.package_dir.aws_iam_policy.additional_json (expand)"
		"[root] module.package_dir.aws_iam_role_policy_attachment.additional_json (expand)" -> "[root] module.package_dir.aws_iam_role.lambda (expand)"
		"[root] module.package_dir.aws_iam_role_policy_attachment.additional_jsons (expand)" -> "[root] module.package_dir.aws_iam_policy.additional_jsons (expand)"
		"[root] module.package_dir.aws_iam_role_policy_attachment.additional_jsons (expand)" -> "[root] module.package_dir.aws_iam_role.lambda (expand)"
		"[root] module.package_dir.aws_iam_role_policy_attachment.additional_many (expand)" -> "[root] module.package_dir.aws_iam_role.lambda (expand)"
		"[root] module.package_dir.aws_iam_role_policy_attachment.additional_many (expand)" -> "[root] module.package_dir.var.attach_policies (expand)"
		"[root] module.package_dir.aws_iam_role_policy_attachment.additional_many (expand)" -> "[root] module.package_dir.var.number_of_policies (expand)"
		"[root] module.package_dir.aws_iam_role_policy_attachment.additional_many (expand)" -> "[root] module.package_dir.var.policies (expand)"
		"[root] module.package_dir.aws_iam_role_policy_attachment.additional_one (expand)" -> "[root] module.package_dir.aws_iam_role.lambda (expand)"
		"[root] module.package_dir.aws_iam_role_policy_attachment.additional_one (expand)" -> "[root] module.package_dir.var.attach_policy (expand)"
		"[root] module.package_dir.aws_iam_role_policy_attachment.additional_one (expand)" -> "[root] module.package_dir.var.policy (expand)"
		"[root] module.package_dir.aws_iam_role_policy_attachment.async (expand)" -> "[root] module.package_dir.aws_iam_policy.async (expand)"
		"[root] module.package_dir.aws_iam_role_policy_attachment.async (expand)" -> "[root] module.package_dir.aws_iam_role.lambda (expand)"
		"[root] module.package_dir.aws_iam_role_policy_attachment.dead_letter (expand)" -> "[root] module.package_dir.aws_iam_policy.dead_letter (expand)"
		"[root] module.package_dir.aws_iam_role_policy_attachment.dead_letter (expand)" -> "[root] module.package_dir.aws_iam_role.lambda (expand)"
		"[root] module.package_dir.aws_iam_role_policy_attachment.logs (expand)" -> "[root] module.package_dir.aws_iam_policy.logs (expand)"
		"[root] module.package_dir.aws_iam_role_policy_attachment.logs (expand)" -> "[root] module.package_dir.aws_iam_role.lambda (expand)"
		"[root] module.package_dir.aws_iam_role_policy_attachment.tracing (expand)" -> "[root] module.package_dir.aws_iam_policy.tracing (expand)"
		"[root] module.package_dir.aws_iam_role_policy_attachment.tracing (expand)" -> "[root] module.package_dir.aws_iam_role.lambda (expand)"
		"[root] module.package_dir.aws_iam_role_policy_attachment.vpc (expand)" -> "[root] module.package_dir.aws_iam_policy.vpc (expand)"
		"[root] module.package_dir.aws_iam_role_policy_attachment.vpc (expand)" -> "[root] module.package_dir.aws_iam_role.lambda (expand)"
		"[root] module.package_dir.aws_lambda_event_source_mapping.this (expand)" -> "[root] module.package_dir.aws_lambda_function.this (expand)"
		"[root] module.package_dir.aws_lambda_event_source_mapping.this (expand)" -> "[root] module.package_dir.var.create_unqualified_alias_allowed_triggers (expand)"
		"[root] module.package_dir.aws_lambda_event_source_mapping.this (expand)" -> "[root] module.package_dir.var.event_source_mapping (expand)"
		"[root] module.package_dir.aws_lambda_function.this (expand)" -> "[root] module.package_dir.aws_cloudwatch_log_group.lambda (expand)"
		"[root] module.package_dir.aws_lambda_function.this (expand)" -> "[root] module.package_dir.aws_iam_role.lambda (expand)"
		"[root] module.package_dir.aws_lambda_function.this (expand)" -> "[root] module.package_dir.local.filename (expand)"
		"[root] module.package_dir.aws_lambda_function.this (expand)" -> "[root] module.package_dir.local.s3_bucket (expand)"
		"[root] module.package_dir.aws_lambda_function.this (expand)" -> "[root] module.package_dir.local.s3_object_version (expand)"
		"[root] module.package_dir.aws_lambda_function.this (expand)" -> "[root] module.package_dir.local.was_missing (expand)"
		"[root] module.package_dir.aws_lambda_function.this (expand)" -> "[root] module.package_dir.var.architectures (expand)"
		"[root] module.package_dir.aws_lambda_function.this (expand)" -> "[root] module.package_dir.var.dead_letter_target_arn (expand)"
		"[root] module.package_dir.aws_lambda_function.this (expand)" -> "[root] module.package_dir.var.description (expand)"
		"[root] module.package_dir.aws_lambda_function.this (expand)" -> "[root] module.package_dir.var.environment_variables (expand)"
		"[root] module.package_dir.aws_lambda_function.this (expand)" -> "[root] module.package_dir.var.file_system_arn (expand)"
		"[root] module.package_dir.aws_lambda_function.this (expand)" -> "[root] module.package_dir.var.file_system_local_mount_path (expand)"
		"[root] module.package_dir.aws_lambda_function.this (expand)" -> "[root] module.package_dir.var.handler (expand)"
		"[root] module.package_dir.aws_lambda_function.this (expand)" -> "[root] module.package_dir.var.ignore_source_code_hash (expand)"
		"[root] module.package_dir.aws_lambda_function.this (expand)" -> "[root] module.package_dir.var.image_config_command (expand)"
		"[root] module.package_dir.aws_lambda_function.this (expand)" -> "[root] module.package_dir.var.image_config_entry_point (expand)"
		"[root] module.package_dir.aws_lambda_function.this (expand)" -> "[root] module.package_dir.var.image_config_working_directory (expand)"
		"[root] module.package_dir.aws_lambda_function.this (expand)" -> "[root] module.package_dir.var.image_uri (expand)"
		"[root] module.package_dir.aws_lambda_function.this (expand)" -> "[root] module.package_dir.var.kms_key_arn (expand)"
		"[root] module.package_dir.aws_lambda_function.this (expand)" -> "[root] module.package_dir.var.lambda_role (expand)"
		"[root] module.package_dir.aws_lambda_function.this (expand)" -> "[root] module.package_dir.var.layers (expand)"
		"[root] module.package_dir.aws_lambda_function.this (expand)" -> "[root] module.package_dir.var.memory_size (expand)"
		"[root] module.package_dir.aws_lambda_function.this (expand)" -> "[root] module.package_dir.var.package_type (expand)"
		"[root] module.package_dir.aws_lambda_function.this (expand)" -> "[root] module.package_dir.var.publish (expand)"
		"[root] module.package_dir.aws_lambda_function.this (expand)" -> "[root] module.package_dir.var.reserved_concurrent_executions (expand)"
		"[root] module.package_dir.aws_lambda_function.this (expand)" -> "[root] module.package_dir.var.timeout (expand)"
		"[root] module.package_dir.aws_lambda_function.this (expand)" -> "[root] module.package_dir.var.tracing_mode (expand)"
		"[root] module.package_dir.aws_lambda_function.this (expand)" -> "[root] module.package_dir.var.vpc_security_group_ids (expand)"
		"[root] module.package_dir.aws_lambda_function.this (expand)" -> "[root] module.package_dir.var.vpc_subnet_ids (expand)"
		"[root] module.package_dir.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.package_dir.aws_lambda_function.this (expand)"
		"[root] module.package_dir.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.package_dir.local.qualifiers (expand)"
		"[root] module.package_dir.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.package_dir.var.create_async_event_config (expand)"
		"[root] module.package_dir.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.package_dir.var.destination_on_failure (expand)"
		"[root] module.package_dir.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.package_dir.var.destination_on_success (expand)"
		"[root] module.package_dir.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.package_dir.var.maximum_event_age_in_seconds (expand)"
		"[root] module.package_dir.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.package_dir.var.maximum_retry_attempts (expand)"
		"[root] module.package_dir.aws_lambda_layer_version.this (expand)" -> "[root] module.package_dir.local.filename (expand)"
		"[root] module.package_dir.aws_lambda_layer_version.this (expand)" -> "[root] module.package_dir.local.s3_bucket (expand)"
		"[root] module.package_dir.aws_lambda_layer_version.this (expand)" -> "[root] module.package_dir.local.s3_object_version (expand)"
		"[root] module.package_dir.aws_lambda_layer_version.this (expand)" -> "[root] module.package_dir.local.was_missing (expand)"
		"[root] module.package_dir.aws_lambda_layer_version.this (expand)" -> "[root] module.package_dir.var.compatible_architectures (expand)"
		"[root] module.package_dir.aws_lambda_layer_version.this (expand)" -> "[root] module.package_dir.var.compatible_runtimes (expand)"
		"[root] module.package_dir.aws_lambda_layer_version.this (expand)" -> "[root] module.package_dir.var.create_layer (expand)"
		"[root] module.package_dir.aws_lambda_layer_version.this (expand)" -> "[root] module.package_dir.var.description (expand)"
		"[root] module.package_dir.aws_lambda_layer_version.this (expand)" -> "[root] module.package_dir.var.ignore_source_code_hash (expand)"
		"[root] module.package_dir.aws_lambda_layer_version.this (expand)" -> "[root] module.package_dir.var.layer_name (expand)"
		"[root] module.package_dir.aws_lambda_layer_version.this (expand)" -> "[root] module.package_dir.var.license_info (expand)"
		"[root] module.package_dir.aws_lambda_permission.current_version_triggers (expand)" -> "[root] module.package_dir.aws_lambda_function.this (expand)"
		"[root] module.package_dir.aws_lambda_permission.current_version_triggers (expand)" -> "[root] module.package_dir.var.allowed_triggers (expand)"
		"[root] module.package_dir.aws_lambda_permission.current_version_triggers (expand)" -> "[root] module.package_dir.var.create_current_version_allowed_triggers (expand)"
		"[root] module.package_dir.aws_lambda_permission.unqualified_alias_triggers (expand)" -> "[root] module.package_dir.aws_lambda_function.this (expand)"
		"[root] module.package_dir.aws_lambda_permission.unqualified_alias_triggers (expand)" -> "[root] module.package_dir.var.allowed_triggers (expand)"
		"[root] module.package_dir.aws_lambda_permission.unqualified_alias_triggers (expand)" -> "[root] module.package_dir.var.create_unqualified_alias_allowed_triggers (expand)"
		"[root] module.package_dir.aws_lambda_provisioned_concurrency_config.current_version (expand)" -> "[root] module.package_dir.aws_lambda_function.this (expand)"
		"[root] module.package_dir.aws_lambda_provisioned_concurrency_config.current_version (expand)" -> "[root] module.package_dir.var.provisioned_concurrent_executions (expand)"
		"[root] module.package_dir.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.package_dir.local.s3_key (expand)"
		"[root] module.package_dir.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.package_dir.null_resource.archive (expand)"
		"[root] module.package_dir.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.package_dir.var.s3_acl (expand)"
		"[root] module.package_dir.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.package_dir.var.s3_bucket (expand)"
		"[root] module.package_dir.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.package_dir.var.s3_object_storage_class (expand)"
		"[root] module.package_dir.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.package_dir.var.s3_object_tags (expand)"
		"[root] module.package_dir.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.package_dir.var.s3_server_side_encryption (expand)"
		"[root] module.package_dir.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.package_dir.var.tags (expand)"
		"[root] module.package_dir.aws_s3_bucket_object.lambda_package (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_dir.data.aws_arn.log_group_arn (expand)" -> "[root] module.package_dir.local.create_role (expand)"
		"[root] module.package_dir.data.aws_arn.log_group_arn (expand)" -> "[root] module.package_dir.local.log_group_arn_regional (expand)"
		"[root] module.package_dir.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_dir.var.create (expand)"
		"[root] module.package_dir.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_dir.var.create_function (expand)"
		"[root] module.package_dir.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_dir.var.create_layer (expand)"
		"[root] module.package_dir.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_dir.var.function_name (expand)"
		"[root] module.package_dir.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_dir.var.lambda_at_edge (expand)"
		"[root] module.package_dir.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_dir.var.use_existing_cloudwatch_log_group (expand)"
		"[root] module.package_dir.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_dir.data.aws_iam_policy.tracing (expand)" -> "[root] module.package_dir.data.aws_partition.current (expand)"
		"[root] module.package_dir.data.aws_iam_policy.tracing (expand)" -> "[root] module.package_dir.local.create_role (expand)"
		"[root] module.package_dir.data.aws_iam_policy.tracing (expand)" -> "[root] module.package_dir.var.attach_tracing_policy (expand)"
		"[root] module.package_dir.data.aws_iam_policy.vpc (expand)" -> "[root] module.package_dir.data.aws_partition.current (expand)"
		"[root] module.package_dir.data.aws_iam_policy.vpc (expand)" -> "[root] module.package_dir.local.create_role (expand)"
		"[root] module.package_dir.data.aws_iam_policy.vpc (expand)" -> "[root] module.package_dir.var.attach_network_policy (expand)"
		"[root] module.package_dir.data.aws_iam_policy_document.additional_inline (expand)" -> "[root] module.package_dir.local.create_role (expand)"
		"[root] module.package_dir.data.aws_iam_policy_document.additional_inline (expand)" -> "[root] module.package_dir.var.attach_policy_statements (expand)"
		"[root] module.package_dir.data.aws_iam_policy_document.additional_inline (expand)" -> "[root] module.package_dir.var.policy_statements (expand)"
		"[root] module.package_dir.data.aws_iam_policy_document.additional_inline (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_dir.data.aws_iam_policy_document.assume_role (expand)" -> "[root] module.package_dir.local.create_role (expand)"
		"[root] module.package_dir.data.aws_iam_policy_document.assume_role (expand)" -> "[root] module.package_dir.local.trusted_entities_principals (expand)"
		"[root] module.package_dir.data.aws_iam_policy_document.assume_role (expand)" -> "[root] module.package_dir.local.trusted_entities_services (expand)"
		"[root] module.package_dir.data.aws_iam_policy_document.assume_role (expand)" -> "[root] module.package_dir.var.assume_role_policy_statements (expand)"
		"[root] module.package_dir.data.aws_iam_policy_document.assume_role (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_dir.data.aws_iam_policy_document.async (expand)" -> "[root] module.package_dir.local.create_role (expand)"
		"[root] module.package_dir.data.aws_iam_policy_document.async (expand)" -> "[root] module.package_dir.var.attach_async_event_policy (expand)"
		"[root] module.package_dir.data.aws_iam_policy_document.async (expand)" -> "[root] module.package_dir.var.destination_on_failure (expand)"
		"[root] module.package_dir.data.aws_iam_policy_document.async (expand)" -> "[root] module.package_dir.var.destination_on_success (expand)"
		"[root] module.package_dir.data.aws_iam_policy_document.async (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_dir.data.aws_iam_policy_document.dead_letter (expand)" -> "[root] module.package_dir.local.create_role (expand)"
		"[root] module.package_dir.data.aws_iam_policy_document.dead_letter (expand)" -> "[root] module.package_dir.var.attach_dead_letter_policy (expand)"
		"[root] module.package_dir.data.aws_iam_policy_document.dead_letter (expand)" -> "[root] module.package_dir.var.dead_letter_target_arn (expand)"
		"[root] module.package_dir.data.aws_iam_policy_document.dead_letter (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_dir.data.aws_iam_policy_document.logs (expand)" -> "[root] module.package_dir.local.log_group_arn (expand)"
		"[root] module.package_dir.data.aws_iam_policy_document.logs (expand)" -> "[root] module.package_dir.var.attach_cloudwatch_logs_policy (expand)"
		"[root] module.package_dir.data.aws_partition.current (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.data.aws_partition.current (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_dir.data.external.archive_prepare (expand)" -> "[root] module.package_dir.local.python (expand)"
		"[root] module.package_dir.data.external.archive_prepare (expand)" -> "[root] module.package_dir.var.artifacts_dir (expand)"
		"[root] module.package_dir.data.external.archive_prepare (expand)" -> "[root] module.package_dir.var.build_in_docker (expand)"
		"[root] module.package_dir.data.external.archive_prepare (expand)" -> "[root] module.package_dir.var.create (expand)"
		"[root] module.package_dir.data.external.archive_prepare (expand)" -> "[root] module.package_dir.var.create_package (expand)"
		"[root] module.package_dir.data.external.archive_prepare (expand)" -> "[root] module.package_dir.var.docker_build_root (expand)"
		"[root] module.package_dir.data.external.archive_prepare (expand)" -> "[root] module.package_dir.var.docker_file (expand)"
		"[root] module.package_dir.data.external.archive_prepare (expand)" -> "[root] module.package_dir.var.docker_image (expand)"
		"[root] module.package_dir.data.external.archive_prepare (expand)" -> "[root] module.package_dir.var.docker_pip_cache (expand)"
		"[root] module.package_dir.data.external.archive_prepare (expand)" -> "[root] module.package_dir.var.docker_with_ssh_agent (expand)"
		"[root] module.package_dir.data.external.archive_prepare (expand)" -> "[root] module.package_dir.var.hash_extra (expand)"
		"[root] module.package_dir.data.external.archive_prepare (expand)" -> "[root] module.package_dir.var.recreate_missing_package (expand)"
		"[root] module.package_dir.data.external.archive_prepare (expand)" -> "[root] module.package_dir.var.runtime (expand)"
		"[root] module.package_dir.data.external.archive_prepare (expand)" -> "[root] module.package_dir.var.source_path (expand)"
		"[root] module.package_dir.data.external.archive_prepare (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/external\"]"
		"[root] module.package_dir.local.archive_filename (expand)" -> "[root] module.package_dir.data.external.archive_prepare (expand)"
		"[root] module.package_dir.local.archive_was_missing (expand)" -> "[root] module.package_dir.data.external.archive_prepare (expand)"
		"[root] module.package_dir.local.create_role (expand)" -> "[root] module.package_dir.var.create (expand)"
		"[root] module.package_dir.local.create_role (expand)" -> "[root] module.package_dir.var.create_function (expand)"
		"[root] module.package_dir.local.create_role (expand)" -> "[root] module.package_dir.var.create_layer (expand)"
		"[root] module.package_dir.local.create_role (expand)" -> "[root] module.package_dir.var.create_role (expand)"
		"[root] module.package_dir.local.filename (expand)" -> "[root] module.package_dir.local.archive_filename (expand)"
		"[root] module.package_dir.local.filename (expand)" -> "[root] module.package_dir.var.local_existing_package (expand)"
		"[root] module.package_dir.local.filename (expand)" -> "[root] module.package_dir.var.store_on_s3 (expand)"
		"[root] module.package_dir.local.log_group_arn (expand)" -> "[root] module.package_dir.data.aws_arn.log_group_arn (expand)"
		"[root] module.package_dir.local.log_group_arn_regional (expand)" -> "[root] module.package_dir.aws_cloudwatch_log_group.lambda (expand)"
		"[root] module.package_dir.local.log_group_arn_regional (expand)" -> "[root] module.package_dir.data.aws_cloudwatch_log_group.lambda (expand)"
		"[root] module.package_dir.local.log_group_name (expand)" -> "[root] module.package_dir.aws_cloudwatch_log_group.lambda (expand)"
		"[root] module.package_dir.local.log_group_name (expand)" -> "[root] module.package_dir.data.aws_cloudwatch_log_group.lambda (expand)"
		"[root] module.package_dir.local.python (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.local.qualifiers (expand)" -> "[root] module.package_dir.var.create_current_version_async_event_config (expand)"
		"[root] module.package_dir.local.qualifiers (expand)" -> "[root] module.package_dir.var.create_unqualified_alias_async_event_config (expand)"
		"[root] module.package_dir.local.role_name (expand)" -> "[root] module.package_dir.local.create_role (expand)"
		"[root] module.package_dir.local.role_name (expand)" -> "[root] module.package_dir.var.function_name (expand)"
		"[root] module.package_dir.local.role_name (expand)" -> "[root] module.package_dir.var.role_name (expand)"
		"[root] module.package_dir.local.s3_bucket (expand)" -> "[root] module.package_dir.var.s3_bucket (expand)"
		"[root] module.package_dir.local.s3_bucket (expand)" -> "[root] module.package_dir.var.s3_existing_package (expand)"
		"[root] module.package_dir.local.s3_bucket (expand)" -> "[root] module.package_dir.var.store_on_s3 (expand)"
		"[root] module.package_dir.local.s3_key (expand)" -> "[root] module.package_dir.local.archive_filename (expand)"
		"[root] module.package_dir.local.s3_key (expand)" -> "[root] module.package_dir.var.s3_existing_package (expand)"
		"[root] module.package_dir.local.s3_key (expand)" -> "[root] module.package_dir.var.s3_prefix (expand)"
		"[root] module.package_dir.local.s3_key (expand)" -> "[root] module.package_dir.var.store_on_s3 (expand)"
		"[root] module.package_dir.local.s3_object_version (expand)" -> "[root] module.package_dir.aws_s3_bucket_object.lambda_package (expand)"
		"[root] module.package_dir.local.trusted_entities_principals (expand)" -> "[root] module.package_dir.var.trusted_entities (expand)"
		"[root] module.package_dir.local.trusted_entities_services (expand)" -> "[root] module.package_dir.var.lambda_at_edge (expand)"
		"[root] module.package_dir.local.trusted_entities_services (expand)" -> "[root] module.package_dir.var.trusted_entities (expand)"
		"[root] module.package_dir.local.was_missing (expand)" -> "[root] module.package_dir.local.archive_was_missing (expand)"
		"[root] module.package_dir.local.was_missing (expand)" -> "[root] module.package_dir.var.local_existing_package (expand)"
		"[root] module.package_dir.local_file.archive_plan (expand)" -> "[root] module.package_dir.data.external.archive_prepare (expand)"
		"[root] module.package_dir.local_file.archive_plan (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/local\"]"
		"[root] module.package_dir.null_resource.archive (expand)" -> "[root] module.package_dir.local_file.archive_plan (expand)"
		"[root] module.package_dir.null_resource.archive (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/null\"]"
		"[root] module.package_dir.null_resource.archive (expand)" -> "[root] provisioner.local-exec"
		"[root] module.package_dir.output.lambda_cloudwatch_log_group_arn (expand)" -> "[root] module.package_dir.local.log_group_arn (expand)"
		"[root] module.package_dir.output.lambda_cloudwatch_log_group_name (expand)" -> "[root] module.package_dir.local.log_group_name (expand)"
		"[root] module.package_dir.output.lambda_event_source_mapping_function_arn (expand)" -> "[root] module.package_dir.aws_lambda_event_source_mapping.this (expand)"
		"[root] module.package_dir.output.lambda_event_source_mapping_state (expand)" -> "[root] module.package_dir.aws_lambda_event_source_mapping.this (expand)"
		"[root] module.package_dir.output.lambda_event_source_mapping_state_transition_reason (expand)" -> "[root] module.package_dir.aws_lambda_event_source_mapping.this (expand)"
		"[root] module.package_dir.output.lambda_event_source_mapping_uuid (expand)" -> "[root] module.package_dir.aws_lambda_event_source_mapping.this (expand)"
		"[root] module.package_dir.output.lambda_function_arn (expand)" -> "[root] module.package_dir.aws_lambda_function.this (expand)"
		"[root] module.package_dir.output.lambda_function_invoke_arn (expand)" -> "[root] module.package_dir.aws_lambda_function.this (expand)"
		"[root] module.package_dir.output.lambda_function_kms_key_arn (expand)" -> "[root] module.package_dir.aws_lambda_function.this (expand)"
		"[root] module.package_dir.output.lambda_function_last_modified (expand)" -> "[root] module.package_dir.aws_lambda_function.this (expand)"
		"[root] module.package_dir.output.lambda_function_name (expand)" -> "[root] module.package_dir.aws_lambda_function.this (expand)"
		"[root] module.package_dir.output.lambda_function_qualified_arn (expand)" -> "[root] module.package_dir.aws_lambda_function.this (expand)"
		"[root] module.package_dir.output.lambda_function_source_code_hash (expand)" -> "[root] module.package_dir.aws_lambda_function.this (expand)"
		"[root] module.package_dir.output.lambda_function_source_code_size (expand)" -> "[root] module.package_dir.aws_lambda_function.this (expand)"
		"[root] module.package_dir.output.lambda_function_version (expand)" -> "[root] module.package_dir.aws_lambda_function.this (expand)"
		"[root] module.package_dir.output.lambda_layer_arn (expand)" -> "[root] module.package_dir.aws_lambda_layer_version.this (expand)"
		"[root] module.package_dir.output.lambda_layer_created_date (expand)" -> "[root] module.package_dir.aws_lambda_layer_version.this (expand)"
		"[root] module.package_dir.output.lambda_layer_layer_arn (expand)" -> "[root] module.package_dir.aws_lambda_layer_version.this (expand)"
		"[root] module.package_dir.output.lambda_layer_source_code_size (expand)" -> "[root] module.package_dir.aws_lambda_layer_version.this (expand)"
		"[root] module.package_dir.output.lambda_layer_version (expand)" -> "[root] module.package_dir.aws_lambda_layer_version.this (expand)"
		"[root] module.package_dir.output.lambda_role_arn (expand)" -> "[root] module.package_dir.aws_iam_role.lambda (expand)"
		"[root] module.package_dir.output.lambda_role_name (expand)" -> "[root] module.package_dir.aws_iam_role.lambda (expand)"
		"[root] module.package_dir.output.lambda_role_unique_id (expand)" -> "[root] module.package_dir.aws_iam_role.lambda (expand)"
		"[root] module.package_dir.output.local_filename (expand)" -> "[root] module.package_dir.local.filename (expand)"
		"[root] module.package_dir.output.s3_object (expand)" -> "[root] module.package_dir.local.s3_bucket (expand)"
		"[root] module.package_dir.output.s3_object (expand)" -> "[root] module.package_dir.local.s3_object_version (expand)"
		"[root] module.package_dir.var.allowed_triggers (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.architectures (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.artifacts_dir (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.assume_role_policy_statements (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.attach_async_event_policy (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.attach_cloudwatch_logs_policy (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.attach_dead_letter_policy (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.attach_network_policy (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.attach_policies (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.attach_policy (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.attach_policy_json (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.attach_policy_jsons (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.attach_policy_statements (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.attach_tracing_policy (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.build_in_docker (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.cloudwatch_logs_kms_key_id (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.cloudwatch_logs_retention_in_days (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.cloudwatch_logs_tags (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.compatible_architectures (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.compatible_runtimes (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.create (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.create_async_event_config (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.create_current_version_allowed_triggers (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.create_current_version_async_event_config (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.create_function (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.create_layer (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.create_package (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.create_role (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.create_unqualified_alias_allowed_triggers (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.create_unqualified_alias_async_event_config (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.dead_letter_target_arn (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.description (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.destination_on_failure (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.destination_on_success (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.docker_build_root (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.docker_file (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.docker_image (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.docker_pip_cache (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.docker_with_ssh_agent (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.environment_variables (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.event_source_mapping (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.file_system_arn (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.file_system_local_mount_path (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.function_name (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.handler (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.hash_extra (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.ignore_source_code_hash (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.image_config_command (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.image_config_entry_point (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.image_config_working_directory (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.image_uri (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.kms_key_arn (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.lambda_at_edge (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.lambda_role (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.layer_name (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.layers (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.license_info (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.local_existing_package (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.maximum_event_age_in_seconds (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.maximum_retry_attempts (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.memory_size (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.number_of_policies (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.number_of_policy_jsons (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.package_type (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.policies (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.policy (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.policy_json (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.policy_jsons (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.policy_path (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.policy_statements (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.provisioned_concurrent_executions (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.publish (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.recreate_missing_package (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.reserved_concurrent_executions (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.role_description (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.role_force_detach_policies (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.role_name (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.role_path (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.role_permissions_boundary (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.role_tags (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.runtime (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.s3_acl (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.s3_bucket (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.s3_existing_package (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.s3_object_storage_class (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.s3_object_tags (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.s3_prefix (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.s3_server_side_encryption (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.source_path (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.store_on_s3 (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.tags (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.timeout (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.tracing_mode (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.trusted_entities (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.use_existing_cloudwatch_log_group (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.vpc_security_group_ids (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir.var.vpc_subnet_ids (expand)" -> "[root] module.package_dir (expand)"
		"[root] module.package_dir_pip_dir (close)" -> "[root] module.package_dir_pip_dir.aws_iam_role_policy_attachment.additional_inline (expand)"
		"[root] module.package_dir_pip_dir (close)" -> "[root] module.package_dir_pip_dir.aws_iam_role_policy_attachment.additional_json (expand)"
		"[root] module.package_dir_pip_dir (close)" -> "[root] module.package_dir_pip_dir.aws_iam_role_policy_attachment.additional_jsons (expand)"
		"[root] module.package_dir_pip_dir (close)" -> "[root] module.package_dir_pip_dir.aws_iam_role_policy_attachment.additional_many (expand)"
		"[root] module.package_dir_pip_dir (close)" -> "[root] module.package_dir_pip_dir.aws_iam_role_policy_attachment.additional_one (expand)"
		"[root] module.package_dir_pip_dir (close)" -> "[root] module.package_dir_pip_dir.aws_iam_role_policy_attachment.async (expand)"
		"[root] module.package_dir_pip_dir (close)" -> "[root] module.package_dir_pip_dir.aws_iam_role_policy_attachment.dead_letter (expand)"
		"[root] module.package_dir_pip_dir (close)" -> "[root] module.package_dir_pip_dir.aws_iam_role_policy_attachment.logs (expand)"
		"[root] module.package_dir_pip_dir (close)" -> "[root] module.package_dir_pip_dir.aws_iam_role_policy_attachment.tracing (expand)"
		"[root] module.package_dir_pip_dir (close)" -> "[root] module.package_dir_pip_dir.aws_iam_role_policy_attachment.vpc (expand)"
		"[root] module.package_dir_pip_dir (close)" -> "[root] module.package_dir_pip_dir.aws_lambda_function_event_invoke_config.this (expand)"
		"[root] module.package_dir_pip_dir (close)" -> "[root] module.package_dir_pip_dir.aws_lambda_permission.current_version_triggers (expand)"
		"[root] module.package_dir_pip_dir (close)" -> "[root] module.package_dir_pip_dir.aws_lambda_permission.unqualified_alias_triggers (expand)"
		"[root] module.package_dir_pip_dir (close)" -> "[root] module.package_dir_pip_dir.aws_lambda_provisioned_concurrency_config.current_version (expand)"
		"[root] module.package_dir_pip_dir (close)" -> "[root] module.package_dir_pip_dir.output.lambda_cloudwatch_log_group_arn (expand)"
		"[root] module.package_dir_pip_dir (close)" -> "[root] module.package_dir_pip_dir.output.lambda_cloudwatch_log_group_name (expand)"
		"[root] module.package_dir_pip_dir (close)" -> "[root] module.package_dir_pip_dir.output.lambda_event_source_mapping_function_arn (expand)"
		"[root] module.package_dir_pip_dir (close)" -> "[root] module.package_dir_pip_dir.output.lambda_event_source_mapping_state (expand)"
		"[root] module.package_dir_pip_dir (close)" -> "[root] module.package_dir_pip_dir.output.lambda_event_source_mapping_state_transition_reason (expand)"
		"[root] module.package_dir_pip_dir (close)" -> "[root] module.package_dir_pip_dir.output.lambda_event_source_mapping_uuid (expand)"
		"[root] module.package_dir_pip_dir (close)" -> "[root] module.package_dir_pip_dir.output.lambda_function_arn (expand)"
		"[root] module.package_dir_pip_dir (close)" -> "[root] module.package_dir_pip_dir.output.lambda_function_invoke_arn (expand)"
		"[root] module.package_dir_pip_dir (close)" -> "[root] module.package_dir_pip_dir.output.lambda_function_kms_key_arn (expand)"
		"[root] module.package_dir_pip_dir (close)" -> "[root] module.package_dir_pip_dir.output.lambda_function_last_modified (expand)"
		"[root] module.package_dir_pip_dir (close)" -> "[root] module.package_dir_pip_dir.output.lambda_function_name (expand)"
		"[root] module.package_dir_pip_dir (close)" -> "[root] module.package_dir_pip_dir.output.lambda_function_qualified_arn (expand)"
		"[root] module.package_dir_pip_dir (close)" -> "[root] module.package_dir_pip_dir.output.lambda_function_source_code_hash (expand)"
		"[root] module.package_dir_pip_dir (close)" -> "[root] module.package_dir_pip_dir.output.lambda_function_source_code_size (expand)"
		"[root] module.package_dir_pip_dir (close)" -> "[root] module.package_dir_pip_dir.output.lambda_function_version (expand)"
		"[root] module.package_dir_pip_dir (close)" -> "[root] module.package_dir_pip_dir.output.lambda_layer_arn (expand)"
		"[root] module.package_dir_pip_dir (close)" -> "[root] module.package_dir_pip_dir.output.lambda_layer_created_date (expand)"
		"[root] module.package_dir_pip_dir (close)" -> "[root] module.package_dir_pip_dir.output.lambda_layer_layer_arn (expand)"
		"[root] module.package_dir_pip_dir (close)" -> "[root] module.package_dir_pip_dir.output.lambda_layer_source_code_size (expand)"
		"[root] module.package_dir_pip_dir (close)" -> "[root] module.package_dir_pip_dir.output.lambda_layer_version (expand)"
		"[root] module.package_dir_pip_dir (close)" -> "[root] module.package_dir_pip_dir.output.lambda_role_arn (expand)"
		"[root] module.package_dir_pip_dir (close)" -> "[root] module.package_dir_pip_dir.output.lambda_role_name (expand)"
		"[root] module.package_dir_pip_dir (close)" -> "[root] module.package_dir_pip_dir.output.lambda_role_unique_id (expand)"
		"[root] module.package_dir_pip_dir (close)" -> "[root] module.package_dir_pip_dir.output.local_filename (expand)"
		"[root] module.package_dir_pip_dir (close)" -> "[root] module.package_dir_pip_dir.output.s3_object (expand)"
		"[root] module.package_dir_pip_dir.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_dir_pip_dir.var.cloudwatch_logs_kms_key_id (expand)"
		"[root] module.package_dir_pip_dir.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_dir_pip_dir.var.cloudwatch_logs_retention_in_days (expand)"
		"[root] module.package_dir_pip_dir.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_dir_pip_dir.var.cloudwatch_logs_tags (expand)"
		"[root] module.package_dir_pip_dir.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_dir_pip_dir.var.create (expand)"
		"[root] module.package_dir_pip_dir.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_dir_pip_dir.var.create_function (expand)"
		"[root] module.package_dir_pip_dir.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_dir_pip_dir.var.create_layer (expand)"
		"[root] module.package_dir_pip_dir.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_dir_pip_dir.var.function_name (expand)"
		"[root] module.package_dir_pip_dir.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_dir_pip_dir.var.lambda_at_edge (expand)"
		"[root] module.package_dir_pip_dir.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_dir_pip_dir.var.tags (expand)"
		"[root] module.package_dir_pip_dir.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_dir_pip_dir.var.use_existing_cloudwatch_log_group (expand)"
		"[root] module.package_dir_pip_dir.aws_cloudwatch_log_group.lambda (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_dir_pip_dir.aws_iam_policy.additional_inline (expand)" -> "[root] module.package_dir_pip_dir.data.aws_iam_policy_document.additional_inline (expand)"
		"[root] module.package_dir_pip_dir.aws_iam_policy.additional_inline (expand)" -> "[root] module.package_dir_pip_dir.local.role_name (expand)"
		"[root] module.package_dir_pip_dir.aws_iam_policy.additional_inline (expand)" -> "[root] module.package_dir_pip_dir.var.policy_path (expand)"
		"[root] module.package_dir_pip_dir.aws_iam_policy.additional_inline (expand)" -> "[root] module.package_dir_pip_dir.var.tags (expand)"
		"[root] module.package_dir_pip_dir.aws_iam_policy.additional_json (expand)" -> "[root] module.package_dir_pip_dir.local.role_name (expand)"
		"[root] module.package_dir_pip_dir.aws_iam_policy.additional_json (expand)" -> "[root] module.package_dir_pip_dir.var.attach_policy_json (expand)"
		"[root] module.package_dir_pip_dir.aws_iam_policy.additional_json (expand)" -> "[root] module.package_dir_pip_dir.var.policy_json (expand)"
		"[root] module.package_dir_pip_dir.aws_iam_policy.additional_json (expand)" -> "[root] module.package_dir_pip_dir.var.policy_path (expand)"
		"[root] module.package_dir_pip_dir.aws_iam_policy.additional_json (expand)" -> "[root] module.package_dir_pip_dir.var.tags (expand)"
		"[root] module.package_dir_pip_dir.aws_iam_policy.additional_json (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_dir_pip_dir.aws_iam_policy.additional_jsons (expand)" -> "[root] module.package_dir_pip_dir.local.role_name (expand)"
		"[root] module.package_dir_pip_dir.aws_iam_policy.additional_jsons (expand)" -> "[root] module.package_dir_pip_dir.var.attach_policy_jsons (expand)"
		"[root] module.package_dir_pip_dir.aws_iam_policy.additional_jsons (expand)" -> "[root] module.package_dir_pip_dir.var.number_of_policy_jsons (expand)"
		"[root] module.package_dir_pip_dir.aws_iam_policy.additional_jsons (expand)" -> "[root] module.package_dir_pip_dir.var.policy_jsons (expand)"
		"[root] module.package_dir_pip_dir.aws_iam_policy.additional_jsons (expand)" -> "[root] module.package_dir_pip_dir.var.policy_path (expand)"
		"[root] module.package_dir_pip_dir.aws_iam_policy.additional_jsons (expand)" -> "[root] module.package_dir_pip_dir.var.tags (expand)"
		"[root] module.package_dir_pip_dir.aws_iam_policy.additional_jsons (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_dir_pip_dir.aws_iam_policy.async (expand)" -> "[root] module.package_dir_pip_dir.data.aws_iam_policy_document.async (expand)"
		"[root] module.package_dir_pip_dir.aws_iam_policy.async (expand)" -> "[root] module.package_dir_pip_dir.local.role_name (expand)"
		"[root] module.package_dir_pip_dir.aws_iam_policy.async (expand)" -> "[root] module.package_dir_pip_dir.var.policy_path (expand)"
		"[root] module.package_dir_pip_dir.aws_iam_policy.async (expand)" -> "[root] module.package_dir_pip_dir.var.tags (expand)"
		"[root] module.package_dir_pip_dir.aws_iam_policy.dead_letter (expand)" -> "[root] module.package_dir_pip_dir.data.aws_iam_policy_document.dead_letter (expand)"
		"[root] module.package_dir_pip_dir.aws_iam_policy.dead_letter (expand)" -> "[root] module.package_dir_pip_dir.local.role_name (expand)"
		"[root] module.package_dir_pip_dir.aws_iam_policy.dead_letter (expand)" -> "[root] module.package_dir_pip_dir.var.policy_path (expand)"
		"[root] module.package_dir_pip_dir.aws_iam_policy.dead_letter (expand)" -> "[root] module.package_dir_pip_dir.var.tags (expand)"
		"[root] module.package_dir_pip_dir.aws_iam_policy.logs (expand)" -> "[root] module.package_dir_pip_dir.data.aws_iam_policy_document.logs (expand)"
		"[root] module.package_dir_pip_dir.aws_iam_policy.logs (expand)" -> "[root] module.package_dir_pip_dir.local.role_name (expand)"
		"[root] module.package_dir_pip_dir.aws_iam_policy.logs (expand)" -> "[root] module.package_dir_pip_dir.var.policy_path (expand)"
		"[root] module.package_dir_pip_dir.aws_iam_policy.tracing (expand)" -> "[root] module.package_dir_pip_dir.data.aws_iam_policy.tracing (expand)"
		"[root] module.package_dir_pip_dir.aws_iam_policy.tracing (expand)" -> "[root] module.package_dir_pip_dir.local.role_name (expand)"
		"[root] module.package_dir_pip_dir.aws_iam_policy.tracing (expand)" -> "[root] module.package_dir_pip_dir.var.policy_path (expand)"
		"[root] module.package_dir_pip_dir.aws_iam_policy.tracing (expand)" -> "[root] module.package_dir_pip_dir.var.tags (expand)"
		"[root] module.package_dir_pip_dir.aws_iam_policy.vpc (expand)" -> "[root] module.package_dir_pip_dir.data.aws_iam_policy.vpc (expand)"
		"[root] module.package_dir_pip_dir.aws_iam_policy.vpc (expand)" -> "[root] module.package_dir_pip_dir.local.role_name (expand)"
		"[root] module.package_dir_pip_dir.aws_iam_policy.vpc (expand)" -> "[root] module.package_dir_pip_dir.var.policy_path (expand)"
		"[root] module.package_dir_pip_dir.aws_iam_policy.vpc (expand)" -> "[root] module.package_dir_pip_dir.var.tags (expand)"
		"[root] module.package_dir_pip_dir.aws_iam_role.lambda (expand)" -> "[root] module.package_dir_pip_dir.data.aws_iam_policy_document.assume_role (expand)"
		"[root] module.package_dir_pip_dir.aws_iam_role.lambda (expand)" -> "[root] module.package_dir_pip_dir.local.role_name (expand)"
		"[root] module.package_dir_pip_dir.aws_iam_role.lambda (expand)" -> "[root] module.package_dir_pip_dir.var.role_description (expand)"
		"[root] module.package_dir_pip_dir.aws_iam_role.lambda (expand)" -> "[root] module.package_dir_pip_dir.var.role_force_detach_policies (expand)"
		"[root] module.package_dir_pip_dir.aws_iam_role.lambda (expand)" -> "[root] module.package_dir_pip_dir.var.role_path (expand)"
		"[root] module.package_dir_pip_dir.aws_iam_role.lambda (expand)" -> "[root] module.package_dir_pip_dir.var.role_permissions_boundary (expand)"
		"[root] module.package_dir_pip_dir.aws_iam_role.lambda (expand)" -> "[root] module.package_dir_pip_dir.var.role_tags (expand)"
		"[root] module.package_dir_pip_dir.aws_iam_role.lambda (expand)" -> "[root] module.package_dir_pip_dir.var.tags (expand)"
		"[root] module.package_dir_pip_dir.aws_iam_role_policy_attachment.additional_inline (expand)" -> "[root] module.package_dir_pip_dir.aws_iam_policy.additional_inline (expand)"
		"[root] module.package_dir_pip_dir.aws_iam_role_policy_attachment.additional_inline (expand)" -> "[root] module.package_dir_pip_dir.aws_iam_role.lambda (expand)"
		"[root] module.package_dir_pip_dir.aws_iam_role_policy_attachment.additional_json (expand)" -> "[root] module.package_dir_pip_dir.aws_iam_policy.additional_json (expand)"
		"[root] module.package_dir_pip_dir.aws_iam_role_policy_attachment.additional_json (expand)" -> "[root] module.package_dir_pip_dir.aws_iam_role.lambda (expand)"
		"[root] module.package_dir_pip_dir.aws_iam_role_policy_attachment.additional_jsons (expand)" -> "[root] module.package_dir_pip_dir.aws_iam_policy.additional_jsons (expand)"
		"[root] module.package_dir_pip_dir.aws_iam_role_policy_attachment.additional_jsons (expand)" -> "[root] module.package_dir_pip_dir.aws_iam_role.lambda (expand)"
		"[root] module.package_dir_pip_dir.aws_iam_role_policy_attachment.additional_many (expand)" -> "[root] module.package_dir_pip_dir.aws_iam_role.lambda (expand)"
		"[root] module.package_dir_pip_dir.aws_iam_role_policy_attachment.additional_many (expand)" -> "[root] module.package_dir_pip_dir.var.attach_policies (expand)"
		"[root] module.package_dir_pip_dir.aws_iam_role_policy_attachment.additional_many (expand)" -> "[root] module.package_dir_pip_dir.var.number_of_policies (expand)"
		"[root] module.package_dir_pip_dir.aws_iam_role_policy_attachment.additional_many (expand)" -> "[root] module.package_dir_pip_dir.var.policies (expand)"
		"[root] module.package_dir_pip_dir.aws_iam_role_policy_attachment.additional_one (expand)" -> "[root] module.package_dir_pip_dir.aws_iam_role.lambda (expand)"
		"[root] module.package_dir_pip_dir.aws_iam_role_policy_attachment.additional_one (expand)" -> "[root] module.package_dir_pip_dir.var.attach_policy (expand)"
		"[root] module.package_dir_pip_dir.aws_iam_role_policy_attachment.additional_one (expand)" -> "[root] module.package_dir_pip_dir.var.policy (expand)"
		"[root] module.package_dir_pip_dir.aws_iam_role_policy_attachment.async (expand)" -> "[root] module.package_dir_pip_dir.aws_iam_policy.async (expand)"
		"[root] module.package_dir_pip_dir.aws_iam_role_policy_attachment.async (expand)" -> "[root] module.package_dir_pip_dir.aws_iam_role.lambda (expand)"
		"[root] module.package_dir_pip_dir.aws_iam_role_policy_attachment.dead_letter (expand)" -> "[root] module.package_dir_pip_dir.aws_iam_policy.dead_letter (expand)"
		"[root] module.package_dir_pip_dir.aws_iam_role_policy_attachment.dead_letter (expand)" -> "[root] module.package_dir_pip_dir.aws_iam_role.lambda (expand)"
		"[root] module.package_dir_pip_dir.aws_iam_role_policy_attachment.logs (expand)" -> "[root] module.package_dir_pip_dir.aws_iam_policy.logs (expand)"
		"[root] module.package_dir_pip_dir.aws_iam_role_policy_attachment.logs (expand)" -> "[root] module.package_dir_pip_dir.aws_iam_role.lambda (expand)"
		"[root] module.package_dir_pip_dir.aws_iam_role_policy_attachment.tracing (expand)" -> "[root] module.package_dir_pip_dir.aws_iam_policy.tracing (expand)"
		"[root] module.package_dir_pip_dir.aws_iam_role_policy_attachment.tracing (expand)" -> "[root] module.package_dir_pip_dir.aws_iam_role.lambda (expand)"
		"[root] module.package_dir_pip_dir.aws_iam_role_policy_attachment.vpc (expand)" -> "[root] module.package_dir_pip_dir.aws_iam_policy.vpc (expand)"
		"[root] module.package_dir_pip_dir.aws_iam_role_policy_attachment.vpc (expand)" -> "[root] module.package_dir_pip_dir.aws_iam_role.lambda (expand)"
		"[root] module.package_dir_pip_dir.aws_lambda_event_source_mapping.this (expand)" -> "[root] module.package_dir_pip_dir.aws_lambda_function.this (expand)"
		"[root] module.package_dir_pip_dir.aws_lambda_event_source_mapping.this (expand)" -> "[root] module.package_dir_pip_dir.var.create_unqualified_alias_allowed_triggers (expand)"
		"[root] module.package_dir_pip_dir.aws_lambda_event_source_mapping.this (expand)" -> "[root] module.package_dir_pip_dir.var.event_source_mapping (expand)"
		"[root] module.package_dir_pip_dir.aws_lambda_function.this (expand)" -> "[root] module.package_dir_pip_dir.aws_cloudwatch_log_group.lambda (expand)"
		"[root] module.package_dir_pip_dir.aws_lambda_function.this (expand)" -> "[root] module.package_dir_pip_dir.aws_iam_role.lambda (expand)"
		"[root] module.package_dir_pip_dir.aws_lambda_function.this (expand)" -> "[root] module.package_dir_pip_dir.local.filename (expand)"
		"[root] module.package_dir_pip_dir.aws_lambda_function.this (expand)" -> "[root] module.package_dir_pip_dir.local.s3_bucket (expand)"
		"[root] module.package_dir_pip_dir.aws_lambda_function.this (expand)" -> "[root] module.package_dir_pip_dir.local.s3_object_version (expand)"
		"[root] module.package_dir_pip_dir.aws_lambda_function.this (expand)" -> "[root] module.package_dir_pip_dir.local.was_missing (expand)"
		"[root] module.package_dir_pip_dir.aws_lambda_function.this (expand)" -> "[root] module.package_dir_pip_dir.var.architectures (expand)"
		"[root] module.package_dir_pip_dir.aws_lambda_function.this (expand)" -> "[root] module.package_dir_pip_dir.var.dead_letter_target_arn (expand)"
		"[root] module.package_dir_pip_dir.aws_lambda_function.this (expand)" -> "[root] module.package_dir_pip_dir.var.description (expand)"
		"[root] module.package_dir_pip_dir.aws_lambda_function.this (expand)" -> "[root] module.package_dir_pip_dir.var.environment_variables (expand)"
		"[root] module.package_dir_pip_dir.aws_lambda_function.this (expand)" -> "[root] module.package_dir_pip_dir.var.file_system_arn (expand)"
		"[root] module.package_dir_pip_dir.aws_lambda_function.this (expand)" -> "[root] module.package_dir_pip_dir.var.file_system_local_mount_path (expand)"
		"[root] module.package_dir_pip_dir.aws_lambda_function.this (expand)" -> "[root] module.package_dir_pip_dir.var.handler (expand)"
		"[root] module.package_dir_pip_dir.aws_lambda_function.this (expand)" -> "[root] module.package_dir_pip_dir.var.ignore_source_code_hash (expand)"
		"[root] module.package_dir_pip_dir.aws_lambda_function.this (expand)" -> "[root] module.package_dir_pip_dir.var.image_config_command (expand)"
		"[root] module.package_dir_pip_dir.aws_lambda_function.this (expand)" -> "[root] module.package_dir_pip_dir.var.image_config_entry_point (expand)"
		"[root] module.package_dir_pip_dir.aws_lambda_function.this (expand)" -> "[root] module.package_dir_pip_dir.var.image_config_working_directory (expand)"
		"[root] module.package_dir_pip_dir.aws_lambda_function.this (expand)" -> "[root] module.package_dir_pip_dir.var.image_uri (expand)"
		"[root] module.package_dir_pip_dir.aws_lambda_function.this (expand)" -> "[root] module.package_dir_pip_dir.var.kms_key_arn (expand)"
		"[root] module.package_dir_pip_dir.aws_lambda_function.this (expand)" -> "[root] module.package_dir_pip_dir.var.lambda_role (expand)"
		"[root] module.package_dir_pip_dir.aws_lambda_function.this (expand)" -> "[root] module.package_dir_pip_dir.var.layers (expand)"
		"[root] module.package_dir_pip_dir.aws_lambda_function.this (expand)" -> "[root] module.package_dir_pip_dir.var.memory_size (expand)"
		"[root] module.package_dir_pip_dir.aws_lambda_function.this (expand)" -> "[root] module.package_dir_pip_dir.var.package_type (expand)"
		"[root] module.package_dir_pip_dir.aws_lambda_function.this (expand)" -> "[root] module.package_dir_pip_dir.var.publish (expand)"
		"[root] module.package_dir_pip_dir.aws_lambda_function.this (expand)" -> "[root] module.package_dir_pip_dir.var.reserved_concurrent_executions (expand)"
		"[root] module.package_dir_pip_dir.aws_lambda_function.this (expand)" -> "[root] module.package_dir_pip_dir.var.timeout (expand)"
		"[root] module.package_dir_pip_dir.aws_lambda_function.this (expand)" -> "[root] module.package_dir_pip_dir.var.tracing_mode (expand)"
		"[root] module.package_dir_pip_dir.aws_lambda_function.this (expand)" -> "[root] module.package_dir_pip_dir.var.vpc_security_group_ids (expand)"
		"[root] module.package_dir_pip_dir.aws_lambda_function.this (expand)" -> "[root] module.package_dir_pip_dir.var.vpc_subnet_ids (expand)"
		"[root] module.package_dir_pip_dir.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.package_dir_pip_dir.aws_lambda_function.this (expand)"
		"[root] module.package_dir_pip_dir.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.package_dir_pip_dir.local.qualifiers (expand)"
		"[root] module.package_dir_pip_dir.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.package_dir_pip_dir.var.create_async_event_config (expand)"
		"[root] module.package_dir_pip_dir.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.package_dir_pip_dir.var.destination_on_failure (expand)"
		"[root] module.package_dir_pip_dir.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.package_dir_pip_dir.var.destination_on_success (expand)"
		"[root] module.package_dir_pip_dir.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.package_dir_pip_dir.var.maximum_event_age_in_seconds (expand)"
		"[root] module.package_dir_pip_dir.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.package_dir_pip_dir.var.maximum_retry_attempts (expand)"
		"[root] module.package_dir_pip_dir.aws_lambda_layer_version.this (expand)" -> "[root] module.package_dir_pip_dir.local.filename (expand)"
		"[root] module.package_dir_pip_dir.aws_lambda_layer_version.this (expand)" -> "[root] module.package_dir_pip_dir.local.s3_bucket (expand)"
		"[root] module.package_dir_pip_dir.aws_lambda_layer_version.this (expand)" -> "[root] module.package_dir_pip_dir.local.s3_object_version (expand)"
		"[root] module.package_dir_pip_dir.aws_lambda_layer_version.this (expand)" -> "[root] module.package_dir_pip_dir.local.was_missing (expand)"
		"[root] module.package_dir_pip_dir.aws_lambda_layer_version.this (expand)" -> "[root] module.package_dir_pip_dir.var.compatible_architectures (expand)"
		"[root] module.package_dir_pip_dir.aws_lambda_layer_version.this (expand)" -> "[root] module.package_dir_pip_dir.var.compatible_runtimes (expand)"
		"[root] module.package_dir_pip_dir.aws_lambda_layer_version.this (expand)" -> "[root] module.package_dir_pip_dir.var.create_layer (expand)"
		"[root] module.package_dir_pip_dir.aws_lambda_layer_version.this (expand)" -> "[root] module.package_dir_pip_dir.var.description (expand)"
		"[root] module.package_dir_pip_dir.aws_lambda_layer_version.this (expand)" -> "[root] module.package_dir_pip_dir.var.ignore_source_code_hash (expand)"
		"[root] module.package_dir_pip_dir.aws_lambda_layer_version.this (expand)" -> "[root] module.package_dir_pip_dir.var.layer_name (expand)"
		"[root] module.package_dir_pip_dir.aws_lambda_layer_version.this (expand)" -> "[root] module.package_dir_pip_dir.var.license_info (expand)"
		"[root] module.package_dir_pip_dir.aws_lambda_permission.current_version_triggers (expand)" -> "[root] module.package_dir_pip_dir.aws_lambda_function.this (expand)"
		"[root] module.package_dir_pip_dir.aws_lambda_permission.current_version_triggers (expand)" -> "[root] module.package_dir_pip_dir.var.allowed_triggers (expand)"
		"[root] module.package_dir_pip_dir.aws_lambda_permission.current_version_triggers (expand)" -> "[root] module.package_dir_pip_dir.var.create_current_version_allowed_triggers (expand)"
		"[root] module.package_dir_pip_dir.aws_lambda_permission.unqualified_alias_triggers (expand)" -> "[root] module.package_dir_pip_dir.aws_lambda_function.this (expand)"
		"[root] module.package_dir_pip_dir.aws_lambda_permission.unqualified_alias_triggers (expand)" -> "[root] module.package_dir_pip_dir.var.allowed_triggers (expand)"
		"[root] module.package_dir_pip_dir.aws_lambda_permission.unqualified_alias_triggers (expand)" -> "[root] module.package_dir_pip_dir.var.create_unqualified_alias_allowed_triggers (expand)"
		"[root] module.package_dir_pip_dir.aws_lambda_provisioned_concurrency_config.current_version (expand)" -> "[root] module.package_dir_pip_dir.aws_lambda_function.this (expand)"
		"[root] module.package_dir_pip_dir.aws_lambda_provisioned_concurrency_config.current_version (expand)" -> "[root] module.package_dir_pip_dir.var.provisioned_concurrent_executions (expand)"
		"[root] module.package_dir_pip_dir.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.package_dir_pip_dir.local.s3_key (expand)"
		"[root] module.package_dir_pip_dir.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.package_dir_pip_dir.null_resource.archive (expand)"
		"[root] module.package_dir_pip_dir.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.package_dir_pip_dir.var.s3_acl (expand)"
		"[root] module.package_dir_pip_dir.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.package_dir_pip_dir.var.s3_bucket (expand)"
		"[root] module.package_dir_pip_dir.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.package_dir_pip_dir.var.s3_object_storage_class (expand)"
		"[root] module.package_dir_pip_dir.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.package_dir_pip_dir.var.s3_object_tags (expand)"
		"[root] module.package_dir_pip_dir.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.package_dir_pip_dir.var.s3_server_side_encryption (expand)"
		"[root] module.package_dir_pip_dir.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.package_dir_pip_dir.var.tags (expand)"
		"[root] module.package_dir_pip_dir.aws_s3_bucket_object.lambda_package (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_dir_pip_dir.data.aws_arn.log_group_arn (expand)" -> "[root] module.package_dir_pip_dir.local.create_role (expand)"
		"[root] module.package_dir_pip_dir.data.aws_arn.log_group_arn (expand)" -> "[root] module.package_dir_pip_dir.local.log_group_arn_regional (expand)"
		"[root] module.package_dir_pip_dir.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_dir_pip_dir.var.create (expand)"
		"[root] module.package_dir_pip_dir.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_dir_pip_dir.var.create_function (expand)"
		"[root] module.package_dir_pip_dir.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_dir_pip_dir.var.create_layer (expand)"
		"[root] module.package_dir_pip_dir.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_dir_pip_dir.var.function_name (expand)"
		"[root] module.package_dir_pip_dir.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_dir_pip_dir.var.lambda_at_edge (expand)"
		"[root] module.package_dir_pip_dir.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_dir_pip_dir.var.use_existing_cloudwatch_log_group (expand)"
		"[root] module.package_dir_pip_dir.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_dir_pip_dir.data.aws_iam_policy.tracing (expand)" -> "[root] module.package_dir_pip_dir.data.aws_partition.current (expand)"
		"[root] module.package_dir_pip_dir.data.aws_iam_policy.tracing (expand)" -> "[root] module.package_dir_pip_dir.local.create_role (expand)"
		"[root] module.package_dir_pip_dir.data.aws_iam_policy.tracing (expand)" -> "[root] module.package_dir_pip_dir.var.attach_tracing_policy (expand)"
		"[root] module.package_dir_pip_dir.data.aws_iam_policy.vpc (expand)" -> "[root] module.package_dir_pip_dir.data.aws_partition.current (expand)"
		"[root] module.package_dir_pip_dir.data.aws_iam_policy.vpc (expand)" -> "[root] module.package_dir_pip_dir.local.create_role (expand)"
		"[root] module.package_dir_pip_dir.data.aws_iam_policy.vpc (expand)" -> "[root] module.package_dir_pip_dir.var.attach_network_policy (expand)"
		"[root] module.package_dir_pip_dir.data.aws_iam_policy_document.additional_inline (expand)" -> "[root] module.package_dir_pip_dir.local.create_role (expand)"
		"[root] module.package_dir_pip_dir.data.aws_iam_policy_document.additional_inline (expand)" -> "[root] module.package_dir_pip_dir.var.attach_policy_statements (expand)"
		"[root] module.package_dir_pip_dir.data.aws_iam_policy_document.additional_inline (expand)" -> "[root] module.package_dir_pip_dir.var.policy_statements (expand)"
		"[root] module.package_dir_pip_dir.data.aws_iam_policy_document.additional_inline (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_dir_pip_dir.data.aws_iam_policy_document.assume_role (expand)" -> "[root] module.package_dir_pip_dir.local.create_role (expand)"
		"[root] module.package_dir_pip_dir.data.aws_iam_policy_document.assume_role (expand)" -> "[root] module.package_dir_pip_dir.local.trusted_entities_principals (expand)"
		"[root] module.package_dir_pip_dir.data.aws_iam_policy_document.assume_role (expand)" -> "[root] module.package_dir_pip_dir.local.trusted_entities_services (expand)"
		"[root] module.package_dir_pip_dir.data.aws_iam_policy_document.assume_role (expand)" -> "[root] module.package_dir_pip_dir.var.assume_role_policy_statements (expand)"
		"[root] module.package_dir_pip_dir.data.aws_iam_policy_document.assume_role (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_dir_pip_dir.data.aws_iam_policy_document.async (expand)" -> "[root] module.package_dir_pip_dir.local.create_role (expand)"
		"[root] module.package_dir_pip_dir.data.aws_iam_policy_document.async (expand)" -> "[root] module.package_dir_pip_dir.var.attach_async_event_policy (expand)"
		"[root] module.package_dir_pip_dir.data.aws_iam_policy_document.async (expand)" -> "[root] module.package_dir_pip_dir.var.destination_on_failure (expand)"
		"[root] module.package_dir_pip_dir.data.aws_iam_policy_document.async (expand)" -> "[root] module.package_dir_pip_dir.var.destination_on_success (expand)"
		"[root] module.package_dir_pip_dir.data.aws_iam_policy_document.async (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_dir_pip_dir.data.aws_iam_policy_document.dead_letter (expand)" -> "[root] module.package_dir_pip_dir.local.create_role (expand)"
		"[root] module.package_dir_pip_dir.data.aws_iam_policy_document.dead_letter (expand)" -> "[root] module.package_dir_pip_dir.var.attach_dead_letter_policy (expand)"
		"[root] module.package_dir_pip_dir.data.aws_iam_policy_document.dead_letter (expand)" -> "[root] module.package_dir_pip_dir.var.dead_letter_target_arn (expand)"
		"[root] module.package_dir_pip_dir.data.aws_iam_policy_document.dead_letter (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_dir_pip_dir.data.aws_iam_policy_document.logs (expand)" -> "[root] module.package_dir_pip_dir.local.log_group_arn (expand)"
		"[root] module.package_dir_pip_dir.data.aws_iam_policy_document.logs (expand)" -> "[root] module.package_dir_pip_dir.var.attach_cloudwatch_logs_policy (expand)"
		"[root] module.package_dir_pip_dir.data.aws_partition.current (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.data.aws_partition.current (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_dir_pip_dir.data.external.archive_prepare (expand)" -> "[root] module.package_dir_pip_dir.local.python (expand)"
		"[root] module.package_dir_pip_dir.data.external.archive_prepare (expand)" -> "[root] module.package_dir_pip_dir.var.artifacts_dir (expand)"
		"[root] module.package_dir_pip_dir.data.external.archive_prepare (expand)" -> "[root] module.package_dir_pip_dir.var.build_in_docker (expand)"
		"[root] module.package_dir_pip_dir.data.external.archive_prepare (expand)" -> "[root] module.package_dir_pip_dir.var.create (expand)"
		"[root] module.package_dir_pip_dir.data.external.archive_prepare (expand)" -> "[root] module.package_dir_pip_dir.var.create_package (expand)"
		"[root] module.package_dir_pip_dir.data.external.archive_prepare (expand)" -> "[root] module.package_dir_pip_dir.var.docker_build_root (expand)"
		"[root] module.package_dir_pip_dir.data.external.archive_prepare (expand)" -> "[root] module.package_dir_pip_dir.var.docker_file (expand)"
		"[root] module.package_dir_pip_dir.data.external.archive_prepare (expand)" -> "[root] module.package_dir_pip_dir.var.docker_image (expand)"
		"[root] module.package_dir_pip_dir.data.external.archive_prepare (expand)" -> "[root] module.package_dir_pip_dir.var.docker_pip_cache (expand)"
		"[root] module.package_dir_pip_dir.data.external.archive_prepare (expand)" -> "[root] module.package_dir_pip_dir.var.docker_with_ssh_agent (expand)"
		"[root] module.package_dir_pip_dir.data.external.archive_prepare (expand)" -> "[root] module.package_dir_pip_dir.var.hash_extra (expand)"
		"[root] module.package_dir_pip_dir.data.external.archive_prepare (expand)" -> "[root] module.package_dir_pip_dir.var.recreate_missing_package (expand)"
		"[root] module.package_dir_pip_dir.data.external.archive_prepare (expand)" -> "[root] module.package_dir_pip_dir.var.runtime (expand)"
		"[root] module.package_dir_pip_dir.data.external.archive_prepare (expand)" -> "[root] module.package_dir_pip_dir.var.source_path (expand)"
		"[root] module.package_dir_pip_dir.data.external.archive_prepare (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/external\"]"
		"[root] module.package_dir_pip_dir.local.archive_filename (expand)" -> "[root] module.package_dir_pip_dir.data.external.archive_prepare (expand)"
		"[root] module.package_dir_pip_dir.local.archive_was_missing (expand)" -> "[root] module.package_dir_pip_dir.data.external.archive_prepare (expand)"
		"[root] module.package_dir_pip_dir.local.create_role (expand)" -> "[root] module.package_dir_pip_dir.var.create (expand)"
		"[root] module.package_dir_pip_dir.local.create_role (expand)" -> "[root] module.package_dir_pip_dir.var.create_function (expand)"
		"[root] module.package_dir_pip_dir.local.create_role (expand)" -> "[root] module.package_dir_pip_dir.var.create_layer (expand)"
		"[root] module.package_dir_pip_dir.local.create_role (expand)" -> "[root] module.package_dir_pip_dir.var.create_role (expand)"
		"[root] module.package_dir_pip_dir.local.filename (expand)" -> "[root] module.package_dir_pip_dir.local.archive_filename (expand)"
		"[root] module.package_dir_pip_dir.local.filename (expand)" -> "[root] module.package_dir_pip_dir.var.local_existing_package (expand)"
		"[root] module.package_dir_pip_dir.local.filename (expand)" -> "[root] module.package_dir_pip_dir.var.store_on_s3 (expand)"
		"[root] module.package_dir_pip_dir.local.log_group_arn (expand)" -> "[root] module.package_dir_pip_dir.data.aws_arn.log_group_arn (expand)"
		"[root] module.package_dir_pip_dir.local.log_group_arn_regional (expand)" -> "[root] module.package_dir_pip_dir.aws_cloudwatch_log_group.lambda (expand)"
		"[root] module.package_dir_pip_dir.local.log_group_arn_regional (expand)" -> "[root] module.package_dir_pip_dir.data.aws_cloudwatch_log_group.lambda (expand)"
		"[root] module.package_dir_pip_dir.local.log_group_name (expand)" -> "[root] module.package_dir_pip_dir.aws_cloudwatch_log_group.lambda (expand)"
		"[root] module.package_dir_pip_dir.local.log_group_name (expand)" -> "[root] module.package_dir_pip_dir.data.aws_cloudwatch_log_group.lambda (expand)"
		"[root] module.package_dir_pip_dir.local.python (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.local.qualifiers (expand)" -> "[root] module.package_dir_pip_dir.var.create_current_version_async_event_config (expand)"
		"[root] module.package_dir_pip_dir.local.qualifiers (expand)" -> "[root] module.package_dir_pip_dir.var.create_unqualified_alias_async_event_config (expand)"
		"[root] module.package_dir_pip_dir.local.role_name (expand)" -> "[root] module.package_dir_pip_dir.local.create_role (expand)"
		"[root] module.package_dir_pip_dir.local.role_name (expand)" -> "[root] module.package_dir_pip_dir.var.function_name (expand)"
		"[root] module.package_dir_pip_dir.local.role_name (expand)" -> "[root] module.package_dir_pip_dir.var.role_name (expand)"
		"[root] module.package_dir_pip_dir.local.s3_bucket (expand)" -> "[root] module.package_dir_pip_dir.var.s3_bucket (expand)"
		"[root] module.package_dir_pip_dir.local.s3_bucket (expand)" -> "[root] module.package_dir_pip_dir.var.s3_existing_package (expand)"
		"[root] module.package_dir_pip_dir.local.s3_bucket (expand)" -> "[root] module.package_dir_pip_dir.var.store_on_s3 (expand)"
		"[root] module.package_dir_pip_dir.local.s3_key (expand)" -> "[root] module.package_dir_pip_dir.local.archive_filename (expand)"
		"[root] module.package_dir_pip_dir.local.s3_key (expand)" -> "[root] module.package_dir_pip_dir.var.s3_existing_package (expand)"
		"[root] module.package_dir_pip_dir.local.s3_key (expand)" -> "[root] module.package_dir_pip_dir.var.s3_prefix (expand)"
		"[root] module.package_dir_pip_dir.local.s3_key (expand)" -> "[root] module.package_dir_pip_dir.var.store_on_s3 (expand)"
		"[root] module.package_dir_pip_dir.local.s3_object_version (expand)" -> "[root] module.package_dir_pip_dir.aws_s3_bucket_object.lambda_package (expand)"
		"[root] module.package_dir_pip_dir.local.trusted_entities_principals (expand)" -> "[root] module.package_dir_pip_dir.var.trusted_entities (expand)"
		"[root] module.package_dir_pip_dir.local.trusted_entities_services (expand)" -> "[root] module.package_dir_pip_dir.var.lambda_at_edge (expand)"
		"[root] module.package_dir_pip_dir.local.trusted_entities_services (expand)" -> "[root] module.package_dir_pip_dir.var.trusted_entities (expand)"
		"[root] module.package_dir_pip_dir.local.was_missing (expand)" -> "[root] module.package_dir_pip_dir.local.archive_was_missing (expand)"
		"[root] module.package_dir_pip_dir.local.was_missing (expand)" -> "[root] module.package_dir_pip_dir.var.local_existing_package (expand)"
		"[root] module.package_dir_pip_dir.local_file.archive_plan (expand)" -> "[root] module.package_dir_pip_dir.data.external.archive_prepare (expand)"
		"[root] module.package_dir_pip_dir.local_file.archive_plan (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/local\"]"
		"[root] module.package_dir_pip_dir.null_resource.archive (expand)" -> "[root] module.package_dir_pip_dir.local_file.archive_plan (expand)"
		"[root] module.package_dir_pip_dir.null_resource.archive (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/null\"]"
		"[root] module.package_dir_pip_dir.null_resource.archive (expand)" -> "[root] provisioner.local-exec"
		"[root] module.package_dir_pip_dir.output.lambda_cloudwatch_log_group_arn (expand)" -> "[root] module.package_dir_pip_dir.local.log_group_arn (expand)"
		"[root] module.package_dir_pip_dir.output.lambda_cloudwatch_log_group_name (expand)" -> "[root] module.package_dir_pip_dir.local.log_group_name (expand)"
		"[root] module.package_dir_pip_dir.output.lambda_event_source_mapping_function_arn (expand)" -> "[root] module.package_dir_pip_dir.aws_lambda_event_source_mapping.this (expand)"
		"[root] module.package_dir_pip_dir.output.lambda_event_source_mapping_state (expand)" -> "[root] module.package_dir_pip_dir.aws_lambda_event_source_mapping.this (expand)"
		"[root] module.package_dir_pip_dir.output.lambda_event_source_mapping_state_transition_reason (expand)" -> "[root] module.package_dir_pip_dir.aws_lambda_event_source_mapping.this (expand)"
		"[root] module.package_dir_pip_dir.output.lambda_event_source_mapping_uuid (expand)" -> "[root] module.package_dir_pip_dir.aws_lambda_event_source_mapping.this (expand)"
		"[root] module.package_dir_pip_dir.output.lambda_function_arn (expand)" -> "[root] module.package_dir_pip_dir.aws_lambda_function.this (expand)"
		"[root] module.package_dir_pip_dir.output.lambda_function_invoke_arn (expand)" -> "[root] module.package_dir_pip_dir.aws_lambda_function.this (expand)"
		"[root] module.package_dir_pip_dir.output.lambda_function_kms_key_arn (expand)" -> "[root] module.package_dir_pip_dir.aws_lambda_function.this (expand)"
		"[root] module.package_dir_pip_dir.output.lambda_function_last_modified (expand)" -> "[root] module.package_dir_pip_dir.aws_lambda_function.this (expand)"
		"[root] module.package_dir_pip_dir.output.lambda_function_name (expand)" -> "[root] module.package_dir_pip_dir.aws_lambda_function.this (expand)"
		"[root] module.package_dir_pip_dir.output.lambda_function_qualified_arn (expand)" -> "[root] module.package_dir_pip_dir.aws_lambda_function.this (expand)"
		"[root] module.package_dir_pip_dir.output.lambda_function_source_code_hash (expand)" -> "[root] module.package_dir_pip_dir.aws_lambda_function.this (expand)"
		"[root] module.package_dir_pip_dir.output.lambda_function_source_code_size (expand)" -> "[root] module.package_dir_pip_dir.aws_lambda_function.this (expand)"
		"[root] module.package_dir_pip_dir.output.lambda_function_version (expand)" -> "[root] module.package_dir_pip_dir.aws_lambda_function.this (expand)"
		"[root] module.package_dir_pip_dir.output.lambda_layer_arn (expand)" -> "[root] module.package_dir_pip_dir.aws_lambda_layer_version.this (expand)"
		"[root] module.package_dir_pip_dir.output.lambda_layer_created_date (expand)" -> "[root] module.package_dir_pip_dir.aws_lambda_layer_version.this (expand)"
		"[root] module.package_dir_pip_dir.output.lambda_layer_layer_arn (expand)" -> "[root] module.package_dir_pip_dir.aws_lambda_layer_version.this (expand)"
		"[root] module.package_dir_pip_dir.output.lambda_layer_source_code_size (expand)" -> "[root] module.package_dir_pip_dir.aws_lambda_layer_version.this (expand)"
		"[root] module.package_dir_pip_dir.output.lambda_layer_version (expand)" -> "[root] module.package_dir_pip_dir.aws_lambda_layer_version.this (expand)"
		"[root] module.package_dir_pip_dir.output.lambda_role_arn (expand)" -> "[root] module.package_dir_pip_dir.aws_iam_role.lambda (expand)"
		"[root] module.package_dir_pip_dir.output.lambda_role_name (expand)" -> "[root] module.package_dir_pip_dir.aws_iam_role.lambda (expand)"
		"[root] module.package_dir_pip_dir.output.lambda_role_unique_id (expand)" -> "[root] module.package_dir_pip_dir.aws_iam_role.lambda (expand)"
		"[root] module.package_dir_pip_dir.output.local_filename (expand)" -> "[root] module.package_dir_pip_dir.local.filename (expand)"
		"[root] module.package_dir_pip_dir.output.s3_object (expand)" -> "[root] module.package_dir_pip_dir.local.s3_bucket (expand)"
		"[root] module.package_dir_pip_dir.output.s3_object (expand)" -> "[root] module.package_dir_pip_dir.local.s3_object_version (expand)"
		"[root] module.package_dir_pip_dir.var.allowed_triggers (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.architectures (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.artifacts_dir (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.assume_role_policy_statements (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.attach_async_event_policy (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.attach_cloudwatch_logs_policy (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.attach_dead_letter_policy (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.attach_network_policy (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.attach_policies (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.attach_policy (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.attach_policy_json (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.attach_policy_jsons (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.attach_policy_statements (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.attach_tracing_policy (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.build_in_docker (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.cloudwatch_logs_kms_key_id (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.cloudwatch_logs_retention_in_days (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.cloudwatch_logs_tags (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.compatible_architectures (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.compatible_runtimes (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.create (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.create_async_event_config (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.create_current_version_allowed_triggers (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.create_current_version_async_event_config (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.create_function (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.create_layer (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.create_package (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.create_role (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.create_unqualified_alias_allowed_triggers (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.create_unqualified_alias_async_event_config (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.dead_letter_target_arn (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.description (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.destination_on_failure (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.destination_on_success (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.docker_build_root (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.docker_file (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.docker_image (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.docker_pip_cache (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.docker_with_ssh_agent (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.environment_variables (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.event_source_mapping (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.file_system_arn (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.file_system_local_mount_path (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.function_name (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.handler (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.hash_extra (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.ignore_source_code_hash (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.image_config_command (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.image_config_entry_point (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.image_config_working_directory (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.image_uri (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.kms_key_arn (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.lambda_at_edge (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.lambda_role (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.layer_name (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.layers (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.license_info (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.local_existing_package (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.maximum_event_age_in_seconds (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.maximum_retry_attempts (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.memory_size (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.number_of_policies (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.number_of_policy_jsons (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.package_type (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.policies (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.policy (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.policy_json (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.policy_jsons (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.policy_path (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.policy_statements (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.provisioned_concurrent_executions (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.publish (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.recreate_missing_package (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.reserved_concurrent_executions (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.role_description (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.role_force_detach_policies (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.role_name (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.role_path (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.role_permissions_boundary (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.role_tags (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.runtime (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.s3_acl (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.s3_bucket (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.s3_existing_package (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.s3_object_storage_class (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.s3_object_tags (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.s3_prefix (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.s3_server_side_encryption (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.source_path (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.store_on_s3 (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.tags (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.timeout (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.tracing_mode (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.trusted_entities (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.use_existing_cloudwatch_log_group (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.vpc_security_group_ids (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_pip_dir.var.vpc_subnet_ids (expand)" -> "[root] module.package_dir_pip_dir (expand)"
		"[root] module.package_dir_without_pip_install (close)" -> "[root] module.package_dir_without_pip_install.aws_iam_role_policy_attachment.additional_inline (expand)"
		"[root] module.package_dir_without_pip_install (close)" -> "[root] module.package_dir_without_pip_install.aws_iam_role_policy_attachment.additional_json (expand)"
		"[root] module.package_dir_without_pip_install (close)" -> "[root] module.package_dir_without_pip_install.aws_iam_role_policy_attachment.additional_jsons (expand)"
		"[root] module.package_dir_without_pip_install (close)" -> "[root] module.package_dir_without_pip_install.aws_iam_role_policy_attachment.additional_many (expand)"
		"[root] module.package_dir_without_pip_install (close)" -> "[root] module.package_dir_without_pip_install.aws_iam_role_policy_attachment.additional_one (expand)"
		"[root] module.package_dir_without_pip_install (close)" -> "[root] module.package_dir_without_pip_install.aws_iam_role_policy_attachment.async (expand)"
		"[root] module.package_dir_without_pip_install (close)" -> "[root] module.package_dir_without_pip_install.aws_iam_role_policy_attachment.dead_letter (expand)"
		"[root] module.package_dir_without_pip_install (close)" -> "[root] module.package_dir_without_pip_install.aws_iam_role_policy_attachment.logs (expand)"
		"[root] module.package_dir_without_pip_install (close)" -> "[root] module.package_dir_without_pip_install.aws_iam_role_policy_attachment.tracing (expand)"
		"[root] module.package_dir_without_pip_install (close)" -> "[root] module.package_dir_without_pip_install.aws_iam_role_policy_attachment.vpc (expand)"
		"[root] module.package_dir_without_pip_install (close)" -> "[root] module.package_dir_without_pip_install.aws_lambda_function_event_invoke_config.this (expand)"
		"[root] module.package_dir_without_pip_install (close)" -> "[root] module.package_dir_without_pip_install.aws_lambda_permission.current_version_triggers (expand)"
		"[root] module.package_dir_without_pip_install (close)" -> "[root] module.package_dir_without_pip_install.aws_lambda_permission.unqualified_alias_triggers (expand)"
		"[root] module.package_dir_without_pip_install (close)" -> "[root] module.package_dir_without_pip_install.aws_lambda_provisioned_concurrency_config.current_version (expand)"
		"[root] module.package_dir_without_pip_install (close)" -> "[root] module.package_dir_without_pip_install.output.lambda_cloudwatch_log_group_arn (expand)"
		"[root] module.package_dir_without_pip_install (close)" -> "[root] module.package_dir_without_pip_install.output.lambda_cloudwatch_log_group_name (expand)"
		"[root] module.package_dir_without_pip_install (close)" -> "[root] module.package_dir_without_pip_install.output.lambda_event_source_mapping_function_arn (expand)"
		"[root] module.package_dir_without_pip_install (close)" -> "[root] module.package_dir_without_pip_install.output.lambda_event_source_mapping_state (expand)"
		"[root] module.package_dir_without_pip_install (close)" -> "[root] module.package_dir_without_pip_install.output.lambda_event_source_mapping_state_transition_reason (expand)"
		"[root] module.package_dir_without_pip_install (close)" -> "[root] module.package_dir_without_pip_install.output.lambda_event_source_mapping_uuid (expand)"
		"[root] module.package_dir_without_pip_install (close)" -> "[root] module.package_dir_without_pip_install.output.lambda_function_arn (expand)"
		"[root] module.package_dir_without_pip_install (close)" -> "[root] module.package_dir_without_pip_install.output.lambda_function_invoke_arn (expand)"
		"[root] module.package_dir_without_pip_install (close)" -> "[root] module.package_dir_without_pip_install.output.lambda_function_kms_key_arn (expand)"
		"[root] module.package_dir_without_pip_install (close)" -> "[root] module.package_dir_without_pip_install.output.lambda_function_last_modified (expand)"
		"[root] module.package_dir_without_pip_install (close)" -> "[root] module.package_dir_without_pip_install.output.lambda_function_name (expand)"
		"[root] module.package_dir_without_pip_install (close)" -> "[root] module.package_dir_without_pip_install.output.lambda_function_qualified_arn (expand)"
		"[root] module.package_dir_without_pip_install (close)" -> "[root] module.package_dir_without_pip_install.output.lambda_function_source_code_hash (expand)"
		"[root] module.package_dir_without_pip_install (close)" -> "[root] module.package_dir_without_pip_install.output.lambda_function_source_code_size (expand)"
		"[root] module.package_dir_without_pip_install (close)" -> "[root] module.package_dir_without_pip_install.output.lambda_function_version (expand)"
		"[root] module.package_dir_without_pip_install (close)" -> "[root] module.package_dir_without_pip_install.output.lambda_layer_arn (expand)"
		"[root] module.package_dir_without_pip_install (close)" -> "[root] module.package_dir_without_pip_install.output.lambda_layer_created_date (expand)"
		"[root] module.package_dir_without_pip_install (close)" -> "[root] module.package_dir_without_pip_install.output.lambda_layer_layer_arn (expand)"
		"[root] module.package_dir_without_pip_install (close)" -> "[root] module.package_dir_without_pip_install.output.lambda_layer_source_code_size (expand)"
		"[root] module.package_dir_without_pip_install (close)" -> "[root] module.package_dir_without_pip_install.output.lambda_layer_version (expand)"
		"[root] module.package_dir_without_pip_install (close)" -> "[root] module.package_dir_without_pip_install.output.lambda_role_arn (expand)"
		"[root] module.package_dir_without_pip_install (close)" -> "[root] module.package_dir_without_pip_install.output.lambda_role_name (expand)"
		"[root] module.package_dir_without_pip_install (close)" -> "[root] module.package_dir_without_pip_install.output.lambda_role_unique_id (expand)"
		"[root] module.package_dir_without_pip_install (close)" -> "[root] module.package_dir_without_pip_install.output.local_filename (expand)"
		"[root] module.package_dir_without_pip_install (close)" -> "[root] module.package_dir_without_pip_install.output.s3_object (expand)"
		"[root] module.package_dir_without_pip_install.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_dir_without_pip_install.var.cloudwatch_logs_kms_key_id (expand)"
		"[root] module.package_dir_without_pip_install.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_dir_without_pip_install.var.cloudwatch_logs_retention_in_days (expand)"
		"[root] module.package_dir_without_pip_install.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_dir_without_pip_install.var.cloudwatch_logs_tags (expand)"
		"[root] module.package_dir_without_pip_install.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_dir_without_pip_install.var.create (expand)"
		"[root] module.package_dir_without_pip_install.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_dir_without_pip_install.var.create_function (expand)"
		"[root] module.package_dir_without_pip_install.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_dir_without_pip_install.var.create_layer (expand)"
		"[root] module.package_dir_without_pip_install.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_dir_without_pip_install.var.function_name (expand)"
		"[root] module.package_dir_without_pip_install.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_dir_without_pip_install.var.lambda_at_edge (expand)"
		"[root] module.package_dir_without_pip_install.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_dir_without_pip_install.var.tags (expand)"
		"[root] module.package_dir_without_pip_install.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_dir_without_pip_install.var.use_existing_cloudwatch_log_group (expand)"
		"[root] module.package_dir_without_pip_install.aws_cloudwatch_log_group.lambda (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_dir_without_pip_install.aws_iam_policy.additional_inline (expand)" -> "[root] module.package_dir_without_pip_install.data.aws_iam_policy_document.additional_inline (expand)"
		"[root] module.package_dir_without_pip_install.aws_iam_policy.additional_inline (expand)" -> "[root] module.package_dir_without_pip_install.local.role_name (expand)"
		"[root] module.package_dir_without_pip_install.aws_iam_policy.additional_inline (expand)" -> "[root] module.package_dir_without_pip_install.var.policy_path (expand)"
		"[root] module.package_dir_without_pip_install.aws_iam_policy.additional_inline (expand)" -> "[root] module.package_dir_without_pip_install.var.tags (expand)"
		"[root] module.package_dir_without_pip_install.aws_iam_policy.additional_json (expand)" -> "[root] module.package_dir_without_pip_install.local.role_name (expand)"
		"[root] module.package_dir_without_pip_install.aws_iam_policy.additional_json (expand)" -> "[root] module.package_dir_without_pip_install.var.attach_policy_json (expand)"
		"[root] module.package_dir_without_pip_install.aws_iam_policy.additional_json (expand)" -> "[root] module.package_dir_without_pip_install.var.policy_json (expand)"
		"[root] module.package_dir_without_pip_install.aws_iam_policy.additional_json (expand)" -> "[root] module.package_dir_without_pip_install.var.policy_path (expand)"
		"[root] module.package_dir_without_pip_install.aws_iam_policy.additional_json (expand)" -> "[root] module.package_dir_without_pip_install.var.tags (expand)"
		"[root] module.package_dir_without_pip_install.aws_iam_policy.additional_json (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_dir_without_pip_install.aws_iam_policy.additional_jsons (expand)" -> "[root] module.package_dir_without_pip_install.local.role_name (expand)"
		"[root] module.package_dir_without_pip_install.aws_iam_policy.additional_jsons (expand)" -> "[root] module.package_dir_without_pip_install.var.attach_policy_jsons (expand)"
		"[root] module.package_dir_without_pip_install.aws_iam_policy.additional_jsons (expand)" -> "[root] module.package_dir_without_pip_install.var.number_of_policy_jsons (expand)"
		"[root] module.package_dir_without_pip_install.aws_iam_policy.additional_jsons (expand)" -> "[root] module.package_dir_without_pip_install.var.policy_jsons (expand)"
		"[root] module.package_dir_without_pip_install.aws_iam_policy.additional_jsons (expand)" -> "[root] module.package_dir_without_pip_install.var.policy_path (expand)"
		"[root] module.package_dir_without_pip_install.aws_iam_policy.additional_jsons (expand)" -> "[root] module.package_dir_without_pip_install.var.tags (expand)"
		"[root] module.package_dir_without_pip_install.aws_iam_policy.additional_jsons (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_dir_without_pip_install.aws_iam_policy.async (expand)" -> "[root] module.package_dir_without_pip_install.data.aws_iam_policy_document.async (expand)"
		"[root] module.package_dir_without_pip_install.aws_iam_policy.async (expand)" -> "[root] module.package_dir_without_pip_install.local.role_name (expand)"
		"[root] module.package_dir_without_pip_install.aws_iam_policy.async (expand)" -> "[root] module.package_dir_without_pip_install.var.policy_path (expand)"
		"[root] module.package_dir_without_pip_install.aws_iam_policy.async (expand)" -> "[root] module.package_dir_without_pip_install.var.tags (expand)"
		"[root] module.package_dir_without_pip_install.aws_iam_policy.dead_letter (expand)" -> "[root] module.package_dir_without_pip_install.data.aws_iam_policy_document.dead_letter (expand)"
		"[root] module.package_dir_without_pip_install.aws_iam_policy.dead_letter (expand)" -> "[root] module.package_dir_without_pip_install.local.role_name (expand)"
		"[root] module.package_dir_without_pip_install.aws_iam_policy.dead_letter (expand)" -> "[root] module.package_dir_without_pip_install.var.policy_path (expand)"
		"[root] module.package_dir_without_pip_install.aws_iam_policy.dead_letter (expand)" -> "[root] module.package_dir_without_pip_install.var.tags (expand)"
		"[root] module.package_dir_without_pip_install.aws_iam_policy.logs (expand)" -> "[root] module.package_dir_without_pip_install.data.aws_iam_policy_document.logs (expand)"
		"[root] module.package_dir_without_pip_install.aws_iam_policy.logs (expand)" -> "[root] module.package_dir_without_pip_install.local.role_name (expand)"
		"[root] module.package_dir_without_pip_install.aws_iam_policy.logs (expand)" -> "[root] module.package_dir_without_pip_install.var.policy_path (expand)"
		"[root] module.package_dir_without_pip_install.aws_iam_policy.tracing (expand)" -> "[root] module.package_dir_without_pip_install.data.aws_iam_policy.tracing (expand)"
		"[root] module.package_dir_without_pip_install.aws_iam_policy.tracing (expand)" -> "[root] module.package_dir_without_pip_install.local.role_name (expand)"
		"[root] module.package_dir_without_pip_install.aws_iam_policy.tracing (expand)" -> "[root] module.package_dir_without_pip_install.var.policy_path (expand)"
		"[root] module.package_dir_without_pip_install.aws_iam_policy.tracing (expand)" -> "[root] module.package_dir_without_pip_install.var.tags (expand)"
		"[root] module.package_dir_without_pip_install.aws_iam_policy.vpc (expand)" -> "[root] module.package_dir_without_pip_install.data.aws_iam_policy.vpc (expand)"
		"[root] module.package_dir_without_pip_install.aws_iam_policy.vpc (expand)" -> "[root] module.package_dir_without_pip_install.local.role_name (expand)"
		"[root] module.package_dir_without_pip_install.aws_iam_policy.vpc (expand)" -> "[root] module.package_dir_without_pip_install.var.policy_path (expand)"
		"[root] module.package_dir_without_pip_install.aws_iam_policy.vpc (expand)" -> "[root] module.package_dir_without_pip_install.var.tags (expand)"
		"[root] module.package_dir_without_pip_install.aws_iam_role.lambda (expand)" -> "[root] module.package_dir_without_pip_install.data.aws_iam_policy_document.assume_role (expand)"
		"[root] module.package_dir_without_pip_install.aws_iam_role.lambda (expand)" -> "[root] module.package_dir_without_pip_install.local.role_name (expand)"
		"[root] module.package_dir_without_pip_install.aws_iam_role.lambda (expand)" -> "[root] module.package_dir_without_pip_install.var.role_description (expand)"
		"[root] module.package_dir_without_pip_install.aws_iam_role.lambda (expand)" -> "[root] module.package_dir_without_pip_install.var.role_force_detach_policies (expand)"
		"[root] module.package_dir_without_pip_install.aws_iam_role.lambda (expand)" -> "[root] module.package_dir_without_pip_install.var.role_path (expand)"
		"[root] module.package_dir_without_pip_install.aws_iam_role.lambda (expand)" -> "[root] module.package_dir_without_pip_install.var.role_permissions_boundary (expand)"
		"[root] module.package_dir_without_pip_install.aws_iam_role.lambda (expand)" -> "[root] module.package_dir_without_pip_install.var.role_tags (expand)"
		"[root] module.package_dir_without_pip_install.aws_iam_role.lambda (expand)" -> "[root] module.package_dir_without_pip_install.var.tags (expand)"
		"[root] module.package_dir_without_pip_install.aws_iam_role_policy_attachment.additional_inline (expand)" -> "[root] module.package_dir_without_pip_install.aws_iam_policy.additional_inline (expand)"
		"[root] module.package_dir_without_pip_install.aws_iam_role_policy_attachment.additional_inline (expand)" -> "[root] module.package_dir_without_pip_install.aws_iam_role.lambda (expand)"
		"[root] module.package_dir_without_pip_install.aws_iam_role_policy_attachment.additional_json (expand)" -> "[root] module.package_dir_without_pip_install.aws_iam_policy.additional_json (expand)"
		"[root] module.package_dir_without_pip_install.aws_iam_role_policy_attachment.additional_json (expand)" -> "[root] module.package_dir_without_pip_install.aws_iam_role.lambda (expand)"
		"[root] module.package_dir_without_pip_install.aws_iam_role_policy_attachment.additional_jsons (expand)" -> "[root] module.package_dir_without_pip_install.aws_iam_policy.additional_jsons (expand)"
		"[root] module.package_dir_without_pip_install.aws_iam_role_policy_attachment.additional_jsons (expand)" -> "[root] module.package_dir_without_pip_install.aws_iam_role.lambda (expand)"
		"[root] module.package_dir_without_pip_install.aws_iam_role_policy_attachment.additional_many (expand)" -> "[root] module.package_dir_without_pip_install.aws_iam_role.lambda (expand)"
		"[root] module.package_dir_without_pip_install.aws_iam_role_policy_attachment.additional_many (expand)" -> "[root] module.package_dir_without_pip_install.var.attach_policies (expand)"
		"[root] module.package_dir_without_pip_install.aws_iam_role_policy_attachment.additional_many (expand)" -> "[root] module.package_dir_without_pip_install.var.number_of_policies (expand)"
		"[root] module.package_dir_without_pip_install.aws_iam_role_policy_attachment.additional_many (expand)" -> "[root] module.package_dir_without_pip_install.var.policies (expand)"
		"[root] module.package_dir_without_pip_install.aws_iam_role_policy_attachment.additional_one (expand)" -> "[root] module.package_dir_without_pip_install.aws_iam_role.lambda (expand)"
		"[root] module.package_dir_without_pip_install.aws_iam_role_policy_attachment.additional_one (expand)" -> "[root] module.package_dir_without_pip_install.var.attach_policy (expand)"
		"[root] module.package_dir_without_pip_install.aws_iam_role_policy_attachment.additional_one (expand)" -> "[root] module.package_dir_without_pip_install.var.policy (expand)"
		"[root] module.package_dir_without_pip_install.aws_iam_role_policy_attachment.async (expand)" -> "[root] module.package_dir_without_pip_install.aws_iam_policy.async (expand)"
		"[root] module.package_dir_without_pip_install.aws_iam_role_policy_attachment.async (expand)" -> "[root] module.package_dir_without_pip_install.aws_iam_role.lambda (expand)"
		"[root] module.package_dir_without_pip_install.aws_iam_role_policy_attachment.dead_letter (expand)" -> "[root] module.package_dir_without_pip_install.aws_iam_policy.dead_letter (expand)"
		"[root] module.package_dir_without_pip_install.aws_iam_role_policy_attachment.dead_letter (expand)" -> "[root] module.package_dir_without_pip_install.aws_iam_role.lambda (expand)"
		"[root] module.package_dir_without_pip_install.aws_iam_role_policy_attachment.logs (expand)" -> "[root] module.package_dir_without_pip_install.aws_iam_policy.logs (expand)"
		"[root] module.package_dir_without_pip_install.aws_iam_role_policy_attachment.logs (expand)" -> "[root] module.package_dir_without_pip_install.aws_iam_role.lambda (expand)"
		"[root] module.package_dir_without_pip_install.aws_iam_role_policy_attachment.tracing (expand)" -> "[root] module.package_dir_without_pip_install.aws_iam_policy.tracing (expand)"
		"[root] module.package_dir_without_pip_install.aws_iam_role_policy_attachment.tracing (expand)" -> "[root] module.package_dir_without_pip_install.aws_iam_role.lambda (expand)"
		"[root] module.package_dir_without_pip_install.aws_iam_role_policy_attachment.vpc (expand)" -> "[root] module.package_dir_without_pip_install.aws_iam_policy.vpc (expand)"
		"[root] module.package_dir_without_pip_install.aws_iam_role_policy_attachment.vpc (expand)" -> "[root] module.package_dir_without_pip_install.aws_iam_role.lambda (expand)"
		"[root] module.package_dir_without_pip_install.aws_lambda_event_source_mapping.this (expand)" -> "[root] module.package_dir_without_pip_install.aws_lambda_function.this (expand)"
		"[root] module.package_dir_without_pip_install.aws_lambda_event_source_mapping.this (expand)" -> "[root] module.package_dir_without_pip_install.var.create_unqualified_alias_allowed_triggers (expand)"
		"[root] module.package_dir_without_pip_install.aws_lambda_event_source_mapping.this (expand)" -> "[root] module.package_dir_without_pip_install.var.event_source_mapping (expand)"
		"[root] module.package_dir_without_pip_install.aws_lambda_function.this (expand)" -> "[root] module.package_dir_without_pip_install.aws_cloudwatch_log_group.lambda (expand)"
		"[root] module.package_dir_without_pip_install.aws_lambda_function.this (expand)" -> "[root] module.package_dir_without_pip_install.aws_iam_role.lambda (expand)"
		"[root] module.package_dir_without_pip_install.aws_lambda_function.this (expand)" -> "[root] module.package_dir_without_pip_install.local.filename (expand)"
		"[root] module.package_dir_without_pip_install.aws_lambda_function.this (expand)" -> "[root] module.package_dir_without_pip_install.local.s3_bucket (expand)"
		"[root] module.package_dir_without_pip_install.aws_lambda_function.this (expand)" -> "[root] module.package_dir_without_pip_install.local.s3_object_version (expand)"
		"[root] module.package_dir_without_pip_install.aws_lambda_function.this (expand)" -> "[root] module.package_dir_without_pip_install.local.was_missing (expand)"
		"[root] module.package_dir_without_pip_install.aws_lambda_function.this (expand)" -> "[root] module.package_dir_without_pip_install.var.architectures (expand)"
		"[root] module.package_dir_without_pip_install.aws_lambda_function.this (expand)" -> "[root] module.package_dir_without_pip_install.var.dead_letter_target_arn (expand)"
		"[root] module.package_dir_without_pip_install.aws_lambda_function.this (expand)" -> "[root] module.package_dir_without_pip_install.var.description (expand)"
		"[root] module.package_dir_without_pip_install.aws_lambda_function.this (expand)" -> "[root] module.package_dir_without_pip_install.var.environment_variables (expand)"
		"[root] module.package_dir_without_pip_install.aws_lambda_function.this (expand)" -> "[root] module.package_dir_without_pip_install.var.file_system_arn (expand)"
		"[root] module.package_dir_without_pip_install.aws_lambda_function.this (expand)" -> "[root] module.package_dir_without_pip_install.var.file_system_local_mount_path (expand)"
		"[root] module.package_dir_without_pip_install.aws_lambda_function.this (expand)" -> "[root] module.package_dir_without_pip_install.var.handler (expand)"
		"[root] module.package_dir_without_pip_install.aws_lambda_function.this (expand)" -> "[root] module.package_dir_without_pip_install.var.ignore_source_code_hash (expand)"
		"[root] module.package_dir_without_pip_install.aws_lambda_function.this (expand)" -> "[root] module.package_dir_without_pip_install.var.image_config_command (expand)"
		"[root] module.package_dir_without_pip_install.aws_lambda_function.this (expand)" -> "[root] module.package_dir_without_pip_install.var.image_config_entry_point (expand)"
		"[root] module.package_dir_without_pip_install.aws_lambda_function.this (expand)" -> "[root] module.package_dir_without_pip_install.var.image_config_working_directory (expand)"
		"[root] module.package_dir_without_pip_install.aws_lambda_function.this (expand)" -> "[root] module.package_dir_without_pip_install.var.image_uri (expand)"
		"[root] module.package_dir_without_pip_install.aws_lambda_function.this (expand)" -> "[root] module.package_dir_without_pip_install.var.kms_key_arn (expand)"
		"[root] module.package_dir_without_pip_install.aws_lambda_function.this (expand)" -> "[root] module.package_dir_without_pip_install.var.lambda_role (expand)"
		"[root] module.package_dir_without_pip_install.aws_lambda_function.this (expand)" -> "[root] module.package_dir_without_pip_install.var.layers (expand)"
		"[root] module.package_dir_without_pip_install.aws_lambda_function.this (expand)" -> "[root] module.package_dir_without_pip_install.var.memory_size (expand)"
		"[root] module.package_dir_without_pip_install.aws_lambda_function.this (expand)" -> "[root] module.package_dir_without_pip_install.var.package_type (expand)"
		"[root] module.package_dir_without_pip_install.aws_lambda_function.this (expand)" -> "[root] module.package_dir_without_pip_install.var.publish (expand)"
		"[root] module.package_dir_without_pip_install.aws_lambda_function.this (expand)" -> "[root] module.package_dir_without_pip_install.var.reserved_concurrent_executions (expand)"
		"[root] module.package_dir_without_pip_install.aws_lambda_function.this (expand)" -> "[root] module.package_dir_without_pip_install.var.timeout (expand)"
		"[root] module.package_dir_without_pip_install.aws_lambda_function.this (expand)" -> "[root] module.package_dir_without_pip_install.var.tracing_mode (expand)"
		"[root] module.package_dir_without_pip_install.aws_lambda_function.this (expand)" -> "[root] module.package_dir_without_pip_install.var.vpc_security_group_ids (expand)"
		"[root] module.package_dir_without_pip_install.aws_lambda_function.this (expand)" -> "[root] module.package_dir_without_pip_install.var.vpc_subnet_ids (expand)"
		"[root] module.package_dir_without_pip_install.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.package_dir_without_pip_install.aws_lambda_function.this (expand)"
		"[root] module.package_dir_without_pip_install.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.package_dir_without_pip_install.local.qualifiers (expand)"
		"[root] module.package_dir_without_pip_install.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.package_dir_without_pip_install.var.create_async_event_config (expand)"
		"[root] module.package_dir_without_pip_install.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.package_dir_without_pip_install.var.destination_on_failure (expand)"
		"[root] module.package_dir_without_pip_install.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.package_dir_without_pip_install.var.destination_on_success (expand)"
		"[root] module.package_dir_without_pip_install.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.package_dir_without_pip_install.var.maximum_event_age_in_seconds (expand)"
		"[root] module.package_dir_without_pip_install.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.package_dir_without_pip_install.var.maximum_retry_attempts (expand)"
		"[root] module.package_dir_without_pip_install.aws_lambda_layer_version.this (expand)" -> "[root] module.package_dir_without_pip_install.local.filename (expand)"
		"[root] module.package_dir_without_pip_install.aws_lambda_layer_version.this (expand)" -> "[root] module.package_dir_without_pip_install.local.s3_bucket (expand)"
		"[root] module.package_dir_without_pip_install.aws_lambda_layer_version.this (expand)" -> "[root] module.package_dir_without_pip_install.local.s3_object_version (expand)"
		"[root] module.package_dir_without_pip_install.aws_lambda_layer_version.this (expand)" -> "[root] module.package_dir_without_pip_install.local.was_missing (expand)"
		"[root] module.package_dir_without_pip_install.aws_lambda_layer_version.this (expand)" -> "[root] module.package_dir_without_pip_install.var.compatible_architectures (expand)"
		"[root] module.package_dir_without_pip_install.aws_lambda_layer_version.this (expand)" -> "[root] module.package_dir_without_pip_install.var.compatible_runtimes (expand)"
		"[root] module.package_dir_without_pip_install.aws_lambda_layer_version.this (expand)" -> "[root] module.package_dir_without_pip_install.var.create_layer (expand)"
		"[root] module.package_dir_without_pip_install.aws_lambda_layer_version.this (expand)" -> "[root] module.package_dir_without_pip_install.var.description (expand)"
		"[root] module.package_dir_without_pip_install.aws_lambda_layer_version.this (expand)" -> "[root] module.package_dir_without_pip_install.var.ignore_source_code_hash (expand)"
		"[root] module.package_dir_without_pip_install.aws_lambda_layer_version.this (expand)" -> "[root] module.package_dir_without_pip_install.var.layer_name (expand)"
		"[root] module.package_dir_without_pip_install.aws_lambda_layer_version.this (expand)" -> "[root] module.package_dir_without_pip_install.var.license_info (expand)"
		"[root] module.package_dir_without_pip_install.aws_lambda_permission.current_version_triggers (expand)" -> "[root] module.package_dir_without_pip_install.aws_lambda_function.this (expand)"
		"[root] module.package_dir_without_pip_install.aws_lambda_permission.current_version_triggers (expand)" -> "[root] module.package_dir_without_pip_install.var.allowed_triggers (expand)"
		"[root] module.package_dir_without_pip_install.aws_lambda_permission.current_version_triggers (expand)" -> "[root] module.package_dir_without_pip_install.var.create_current_version_allowed_triggers (expand)"
		"[root] module.package_dir_without_pip_install.aws_lambda_permission.unqualified_alias_triggers (expand)" -> "[root] module.package_dir_without_pip_install.aws_lambda_function.this (expand)"
		"[root] module.package_dir_without_pip_install.aws_lambda_permission.unqualified_alias_triggers (expand)" -> "[root] module.package_dir_without_pip_install.var.allowed_triggers (expand)"
		"[root] module.package_dir_without_pip_install.aws_lambda_permission.unqualified_alias_triggers (expand)" -> "[root] module.package_dir_without_pip_install.var.create_unqualified_alias_allowed_triggers (expand)"
		"[root] module.package_dir_without_pip_install.aws_lambda_provisioned_concurrency_config.current_version (expand)" -> "[root] module.package_dir_without_pip_install.aws_lambda_function.this (expand)"
		"[root] module.package_dir_without_pip_install.aws_lambda_provisioned_concurrency_config.current_version (expand)" -> "[root] module.package_dir_without_pip_install.var.provisioned_concurrent_executions (expand)"
		"[root] module.package_dir_without_pip_install.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.package_dir_without_pip_install.local.s3_key (expand)"
		"[root] module.package_dir_without_pip_install.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.package_dir_without_pip_install.null_resource.archive (expand)"
		"[root] module.package_dir_without_pip_install.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.package_dir_without_pip_install.var.s3_acl (expand)"
		"[root] module.package_dir_without_pip_install.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.package_dir_without_pip_install.var.s3_bucket (expand)"
		"[root] module.package_dir_without_pip_install.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.package_dir_without_pip_install.var.s3_object_storage_class (expand)"
		"[root] module.package_dir_without_pip_install.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.package_dir_without_pip_install.var.s3_object_tags (expand)"
		"[root] module.package_dir_without_pip_install.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.package_dir_without_pip_install.var.s3_server_side_encryption (expand)"
		"[root] module.package_dir_without_pip_install.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.package_dir_without_pip_install.var.tags (expand)"
		"[root] module.package_dir_without_pip_install.aws_s3_bucket_object.lambda_package (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_dir_without_pip_install.data.aws_arn.log_group_arn (expand)" -> "[root] module.package_dir_without_pip_install.local.create_role (expand)"
		"[root] module.package_dir_without_pip_install.data.aws_arn.log_group_arn (expand)" -> "[root] module.package_dir_without_pip_install.local.log_group_arn_regional (expand)"
		"[root] module.package_dir_without_pip_install.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_dir_without_pip_install.var.create (expand)"
		"[root] module.package_dir_without_pip_install.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_dir_without_pip_install.var.create_function (expand)"
		"[root] module.package_dir_without_pip_install.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_dir_without_pip_install.var.create_layer (expand)"
		"[root] module.package_dir_without_pip_install.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_dir_without_pip_install.var.function_name (expand)"
		"[root] module.package_dir_without_pip_install.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_dir_without_pip_install.var.lambda_at_edge (expand)"
		"[root] module.package_dir_without_pip_install.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_dir_without_pip_install.var.use_existing_cloudwatch_log_group (expand)"
		"[root] module.package_dir_without_pip_install.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_dir_without_pip_install.data.aws_iam_policy.tracing (expand)" -> "[root] module.package_dir_without_pip_install.data.aws_partition.current (expand)"
		"[root] module.package_dir_without_pip_install.data.aws_iam_policy.tracing (expand)" -> "[root] module.package_dir_without_pip_install.local.create_role (expand)"
		"[root] module.package_dir_without_pip_install.data.aws_iam_policy.tracing (expand)" -> "[root] module.package_dir_without_pip_install.var.attach_tracing_policy (expand)"
		"[root] module.package_dir_without_pip_install.data.aws_iam_policy.vpc (expand)" -> "[root] module.package_dir_without_pip_install.data.aws_partition.current (expand)"
		"[root] module.package_dir_without_pip_install.data.aws_iam_policy.vpc (expand)" -> "[root] module.package_dir_without_pip_install.local.create_role (expand)"
		"[root] module.package_dir_without_pip_install.data.aws_iam_policy.vpc (expand)" -> "[root] module.package_dir_without_pip_install.var.attach_network_policy (expand)"
		"[root] module.package_dir_without_pip_install.data.aws_iam_policy_document.additional_inline (expand)" -> "[root] module.package_dir_without_pip_install.local.create_role (expand)"
		"[root] module.package_dir_without_pip_install.data.aws_iam_policy_document.additional_inline (expand)" -> "[root] module.package_dir_without_pip_install.var.attach_policy_statements (expand)"
		"[root] module.package_dir_without_pip_install.data.aws_iam_policy_document.additional_inline (expand)" -> "[root] module.package_dir_without_pip_install.var.policy_statements (expand)"
		"[root] module.package_dir_without_pip_install.data.aws_iam_policy_document.additional_inline (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_dir_without_pip_install.data.aws_iam_policy_document.assume_role (expand)" -> "[root] module.package_dir_without_pip_install.local.create_role (expand)"
		"[root] module.package_dir_without_pip_install.data.aws_iam_policy_document.assume_role (expand)" -> "[root] module.package_dir_without_pip_install.local.trusted_entities_principals (expand)"
		"[root] module.package_dir_without_pip_install.data.aws_iam_policy_document.assume_role (expand)" -> "[root] module.package_dir_without_pip_install.local.trusted_entities_services (expand)"
		"[root] module.package_dir_without_pip_install.data.aws_iam_policy_document.assume_role (expand)" -> "[root] module.package_dir_without_pip_install.var.assume_role_policy_statements (expand)"
		"[root] module.package_dir_without_pip_install.data.aws_iam_policy_document.assume_role (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_dir_without_pip_install.data.aws_iam_policy_document.async (expand)" -> "[root] module.package_dir_without_pip_install.local.create_role (expand)"
		"[root] module.package_dir_without_pip_install.data.aws_iam_policy_document.async (expand)" -> "[root] module.package_dir_without_pip_install.var.attach_async_event_policy (expand)"
		"[root] module.package_dir_without_pip_install.data.aws_iam_policy_document.async (expand)" -> "[root] module.package_dir_without_pip_install.var.destination_on_failure (expand)"
		"[root] module.package_dir_without_pip_install.data.aws_iam_policy_document.async (expand)" -> "[root] module.package_dir_without_pip_install.var.destination_on_success (expand)"
		"[root] module.package_dir_without_pip_install.data.aws_iam_policy_document.async (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_dir_without_pip_install.data.aws_iam_policy_document.dead_letter (expand)" -> "[root] module.package_dir_without_pip_install.local.create_role (expand)"
		"[root] module.package_dir_without_pip_install.data.aws_iam_policy_document.dead_letter (expand)" -> "[root] module.package_dir_without_pip_install.var.attach_dead_letter_policy (expand)"
		"[root] module.package_dir_without_pip_install.data.aws_iam_policy_document.dead_letter (expand)" -> "[root] module.package_dir_without_pip_install.var.dead_letter_target_arn (expand)"
		"[root] module.package_dir_without_pip_install.data.aws_iam_policy_document.dead_letter (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_dir_without_pip_install.data.aws_iam_policy_document.logs (expand)" -> "[root] module.package_dir_without_pip_install.local.log_group_arn (expand)"
		"[root] module.package_dir_without_pip_install.data.aws_iam_policy_document.logs (expand)" -> "[root] module.package_dir_without_pip_install.var.attach_cloudwatch_logs_policy (expand)"
		"[root] module.package_dir_without_pip_install.data.aws_partition.current (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.data.aws_partition.current (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_dir_without_pip_install.data.external.archive_prepare (expand)" -> "[root] module.package_dir_without_pip_install.local.python (expand)"
		"[root] module.package_dir_without_pip_install.data.external.archive_prepare (expand)" -> "[root] module.package_dir_without_pip_install.var.artifacts_dir (expand)"
		"[root] module.package_dir_without_pip_install.data.external.archive_prepare (expand)" -> "[root] module.package_dir_without_pip_install.var.build_in_docker (expand)"
		"[root] module.package_dir_without_pip_install.data.external.archive_prepare (expand)" -> "[root] module.package_dir_without_pip_install.var.create (expand)"
		"[root] module.package_dir_without_pip_install.data.external.archive_prepare (expand)" -> "[root] module.package_dir_without_pip_install.var.create_package (expand)"
		"[root] module.package_dir_without_pip_install.data.external.archive_prepare (expand)" -> "[root] module.package_dir_without_pip_install.var.docker_build_root (expand)"
		"[root] module.package_dir_without_pip_install.data.external.archive_prepare (expand)" -> "[root] module.package_dir_without_pip_install.var.docker_file (expand)"
		"[root] module.package_dir_without_pip_install.data.external.archive_prepare (expand)" -> "[root] module.package_dir_without_pip_install.var.docker_image (expand)"
		"[root] module.package_dir_without_pip_install.data.external.archive_prepare (expand)" -> "[root] module.package_dir_without_pip_install.var.docker_pip_cache (expand)"
		"[root] module.package_dir_without_pip_install.data.external.archive_prepare (expand)" -> "[root] module.package_dir_without_pip_install.var.docker_with_ssh_agent (expand)"
		"[root] module.package_dir_without_pip_install.data.external.archive_prepare (expand)" -> "[root] module.package_dir_without_pip_install.var.hash_extra (expand)"
		"[root] module.package_dir_without_pip_install.data.external.archive_prepare (expand)" -> "[root] module.package_dir_without_pip_install.var.recreate_missing_package (expand)"
		"[root] module.package_dir_without_pip_install.data.external.archive_prepare (expand)" -> "[root] module.package_dir_without_pip_install.var.runtime (expand)"
		"[root] module.package_dir_without_pip_install.data.external.archive_prepare (expand)" -> "[root] module.package_dir_without_pip_install.var.source_path (expand)"
		"[root] module.package_dir_without_pip_install.data.external.archive_prepare (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/external\"]"
		"[root] module.package_dir_without_pip_install.local.archive_filename (expand)" -> "[root] module.package_dir_without_pip_install.data.external.archive_prepare (expand)"
		"[root] module.package_dir_without_pip_install.local.archive_was_missing (expand)" -> "[root] module.package_dir_without_pip_install.data.external.archive_prepare (expand)"
		"[root] module.package_dir_without_pip_install.local.create_role (expand)" -> "[root] module.package_dir_without_pip_install.var.create (expand)"
		"[root] module.package_dir_without_pip_install.local.create_role (expand)" -> "[root] module.package_dir_without_pip_install.var.create_function (expand)"
		"[root] module.package_dir_without_pip_install.local.create_role (expand)" -> "[root] module.package_dir_without_pip_install.var.create_layer (expand)"
		"[root] module.package_dir_without_pip_install.local.create_role (expand)" -> "[root] module.package_dir_without_pip_install.var.create_role (expand)"
		"[root] module.package_dir_without_pip_install.local.filename (expand)" -> "[root] module.package_dir_without_pip_install.local.archive_filename (expand)"
		"[root] module.package_dir_without_pip_install.local.filename (expand)" -> "[root] module.package_dir_without_pip_install.var.local_existing_package (expand)"
		"[root] module.package_dir_without_pip_install.local.filename (expand)" -> "[root] module.package_dir_without_pip_install.var.store_on_s3 (expand)"
		"[root] module.package_dir_without_pip_install.local.log_group_arn (expand)" -> "[root] module.package_dir_without_pip_install.data.aws_arn.log_group_arn (expand)"
		"[root] module.package_dir_without_pip_install.local.log_group_arn_regional (expand)" -> "[root] module.package_dir_without_pip_install.aws_cloudwatch_log_group.lambda (expand)"
		"[root] module.package_dir_without_pip_install.local.log_group_arn_regional (expand)" -> "[root] module.package_dir_without_pip_install.data.aws_cloudwatch_log_group.lambda (expand)"
		"[root] module.package_dir_without_pip_install.local.log_group_name (expand)" -> "[root] module.package_dir_without_pip_install.aws_cloudwatch_log_group.lambda (expand)"
		"[root] module.package_dir_without_pip_install.local.log_group_name (expand)" -> "[root] module.package_dir_without_pip_install.data.aws_cloudwatch_log_group.lambda (expand)"
		"[root] module.package_dir_without_pip_install.local.python (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.local.qualifiers (expand)" -> "[root] module.package_dir_without_pip_install.var.create_current_version_async_event_config (expand)"
		"[root] module.package_dir_without_pip_install.local.qualifiers (expand)" -> "[root] module.package_dir_without_pip_install.var.create_unqualified_alias_async_event_config (expand)"
		"[root] module.package_dir_without_pip_install.local.role_name (expand)" -> "[root] module.package_dir_without_pip_install.local.create_role (expand)"
		"[root] module.package_dir_without_pip_install.local.role_name (expand)" -> "[root] module.package_dir_without_pip_install.var.function_name (expand)"
		"[root] module.package_dir_without_pip_install.local.role_name (expand)" -> "[root] module.package_dir_without_pip_install.var.role_name (expand)"
		"[root] module.package_dir_without_pip_install.local.s3_bucket (expand)" -> "[root] module.package_dir_without_pip_install.var.s3_bucket (expand)"
		"[root] module.package_dir_without_pip_install.local.s3_bucket (expand)" -> "[root] module.package_dir_without_pip_install.var.s3_existing_package (expand)"
		"[root] module.package_dir_without_pip_install.local.s3_bucket (expand)" -> "[root] module.package_dir_without_pip_install.var.store_on_s3 (expand)"
		"[root] module.package_dir_without_pip_install.local.s3_key (expand)" -> "[root] module.package_dir_without_pip_install.local.archive_filename (expand)"
		"[root] module.package_dir_without_pip_install.local.s3_key (expand)" -> "[root] module.package_dir_without_pip_install.var.s3_existing_package (expand)"
		"[root] module.package_dir_without_pip_install.local.s3_key (expand)" -> "[root] module.package_dir_without_pip_install.var.s3_prefix (expand)"
		"[root] module.package_dir_without_pip_install.local.s3_key (expand)" -> "[root] module.package_dir_without_pip_install.var.store_on_s3 (expand)"
		"[root] module.package_dir_without_pip_install.local.s3_object_version (expand)" -> "[root] module.package_dir_without_pip_install.aws_s3_bucket_object.lambda_package (expand)"
		"[root] module.package_dir_without_pip_install.local.trusted_entities_principals (expand)" -> "[root] module.package_dir_without_pip_install.var.trusted_entities (expand)"
		"[root] module.package_dir_without_pip_install.local.trusted_entities_services (expand)" -> "[root] module.package_dir_without_pip_install.var.lambda_at_edge (expand)"
		"[root] module.package_dir_without_pip_install.local.trusted_entities_services (expand)" -> "[root] module.package_dir_without_pip_install.var.trusted_entities (expand)"
		"[root] module.package_dir_without_pip_install.local.was_missing (expand)" -> "[root] module.package_dir_without_pip_install.local.archive_was_missing (expand)"
		"[root] module.package_dir_without_pip_install.local.was_missing (expand)" -> "[root] module.package_dir_without_pip_install.var.local_existing_package (expand)"
		"[root] module.package_dir_without_pip_install.local_file.archive_plan (expand)" -> "[root] module.package_dir_without_pip_install.data.external.archive_prepare (expand)"
		"[root] module.package_dir_without_pip_install.local_file.archive_plan (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/local\"]"
		"[root] module.package_dir_without_pip_install.null_resource.archive (expand)" -> "[root] module.package_dir_without_pip_install.local_file.archive_plan (expand)"
		"[root] module.package_dir_without_pip_install.null_resource.archive (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/null\"]"
		"[root] module.package_dir_without_pip_install.null_resource.archive (expand)" -> "[root] provisioner.local-exec"
		"[root] module.package_dir_without_pip_install.output.lambda_cloudwatch_log_group_arn (expand)" -> "[root] module.package_dir_without_pip_install.local.log_group_arn (expand)"
		"[root] module.package_dir_without_pip_install.output.lambda_cloudwatch_log_group_name (expand)" -> "[root] module.package_dir_without_pip_install.local.log_group_name (expand)"
		"[root] module.package_dir_without_pip_install.output.lambda_event_source_mapping_function_arn (expand)" -> "[root] module.package_dir_without_pip_install.aws_lambda_event_source_mapping.this (expand)"
		"[root] module.package_dir_without_pip_install.output.lambda_event_source_mapping_state (expand)" -> "[root] module.package_dir_without_pip_install.aws_lambda_event_source_mapping.this (expand)"
		"[root] module.package_dir_without_pip_install.output.lambda_event_source_mapping_state_transition_reason (expand)" -> "[root] module.package_dir_without_pip_install.aws_lambda_event_source_mapping.this (expand)"
		"[root] module.package_dir_without_pip_install.output.lambda_event_source_mapping_uuid (expand)" -> "[root] module.package_dir_without_pip_install.aws_lambda_event_source_mapping.this (expand)"
		"[root] module.package_dir_without_pip_install.output.lambda_function_arn (expand)" -> "[root] module.package_dir_without_pip_install.aws_lambda_function.this (expand)"
		"[root] module.package_dir_without_pip_install.output.lambda_function_invoke_arn (expand)" -> "[root] module.package_dir_without_pip_install.aws_lambda_function.this (expand)"
		"[root] module.package_dir_without_pip_install.output.lambda_function_kms_key_arn (expand)" -> "[root] module.package_dir_without_pip_install.aws_lambda_function.this (expand)"
		"[root] module.package_dir_without_pip_install.output.lambda_function_last_modified (expand)" -> "[root] module.package_dir_without_pip_install.aws_lambda_function.this (expand)"
		"[root] module.package_dir_without_pip_install.output.lambda_function_name (expand)" -> "[root] module.package_dir_without_pip_install.aws_lambda_function.this (expand)"
		"[root] module.package_dir_without_pip_install.output.lambda_function_qualified_arn (expand)" -> "[root] module.package_dir_without_pip_install.aws_lambda_function.this (expand)"
		"[root] module.package_dir_without_pip_install.output.lambda_function_source_code_hash (expand)" -> "[root] module.package_dir_without_pip_install.aws_lambda_function.this (expand)"
		"[root] module.package_dir_without_pip_install.output.lambda_function_source_code_size (expand)" -> "[root] module.package_dir_without_pip_install.aws_lambda_function.this (expand)"
		"[root] module.package_dir_without_pip_install.output.lambda_function_version (expand)" -> "[root] module.package_dir_without_pip_install.aws_lambda_function.this (expand)"
		"[root] module.package_dir_without_pip_install.output.lambda_layer_arn (expand)" -> "[root] module.package_dir_without_pip_install.aws_lambda_layer_version.this (expand)"
		"[root] module.package_dir_without_pip_install.output.lambda_layer_created_date (expand)" -> "[root] module.package_dir_without_pip_install.aws_lambda_layer_version.this (expand)"
		"[root] module.package_dir_without_pip_install.output.lambda_layer_layer_arn (expand)" -> "[root] module.package_dir_without_pip_install.aws_lambda_layer_version.this (expand)"
		"[root] module.package_dir_without_pip_install.output.lambda_layer_source_code_size (expand)" -> "[root] module.package_dir_without_pip_install.aws_lambda_layer_version.this (expand)"
		"[root] module.package_dir_without_pip_install.output.lambda_layer_version (expand)" -> "[root] module.package_dir_without_pip_install.aws_lambda_layer_version.this (expand)"
		"[root] module.package_dir_without_pip_install.output.lambda_role_arn (expand)" -> "[root] module.package_dir_without_pip_install.aws_iam_role.lambda (expand)"
		"[root] module.package_dir_without_pip_install.output.lambda_role_name (expand)" -> "[root] module.package_dir_without_pip_install.aws_iam_role.lambda (expand)"
		"[root] module.package_dir_without_pip_install.output.lambda_role_unique_id (expand)" -> "[root] module.package_dir_without_pip_install.aws_iam_role.lambda (expand)"
		"[root] module.package_dir_without_pip_install.output.local_filename (expand)" -> "[root] module.package_dir_without_pip_install.local.filename (expand)"
		"[root] module.package_dir_without_pip_install.output.s3_object (expand)" -> "[root] module.package_dir_without_pip_install.local.s3_bucket (expand)"
		"[root] module.package_dir_without_pip_install.output.s3_object (expand)" -> "[root] module.package_dir_without_pip_install.local.s3_object_version (expand)"
		"[root] module.package_dir_without_pip_install.var.allowed_triggers (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.architectures (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.artifacts_dir (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.assume_role_policy_statements (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.attach_async_event_policy (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.attach_cloudwatch_logs_policy (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.attach_dead_letter_policy (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.attach_network_policy (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.attach_policies (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.attach_policy (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.attach_policy_json (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.attach_policy_jsons (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.attach_policy_statements (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.attach_tracing_policy (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.build_in_docker (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.cloudwatch_logs_kms_key_id (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.cloudwatch_logs_retention_in_days (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.cloudwatch_logs_tags (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.compatible_architectures (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.compatible_runtimes (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.create (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.create_async_event_config (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.create_current_version_allowed_triggers (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.create_current_version_async_event_config (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.create_function (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.create_layer (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.create_package (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.create_role (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.create_unqualified_alias_allowed_triggers (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.create_unqualified_alias_async_event_config (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.dead_letter_target_arn (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.description (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.destination_on_failure (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.destination_on_success (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.docker_build_root (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.docker_file (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.docker_image (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.docker_pip_cache (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.docker_with_ssh_agent (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.environment_variables (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.event_source_mapping (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.file_system_arn (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.file_system_local_mount_path (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.function_name (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.handler (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.hash_extra (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.ignore_source_code_hash (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.image_config_command (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.image_config_entry_point (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.image_config_working_directory (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.image_uri (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.kms_key_arn (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.lambda_at_edge (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.lambda_role (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.layer_name (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.layers (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.license_info (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.local_existing_package (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.maximum_event_age_in_seconds (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.maximum_retry_attempts (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.memory_size (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.number_of_policies (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.number_of_policy_jsons (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.package_type (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.policies (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.policy (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.policy_json (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.policy_jsons (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.policy_path (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.policy_statements (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.provisioned_concurrent_executions (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.publish (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.recreate_missing_package (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.reserved_concurrent_executions (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.role_description (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.role_force_detach_policies (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.role_name (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.role_path (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.role_permissions_boundary (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.role_tags (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.runtime (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.s3_acl (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.s3_bucket (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.s3_existing_package (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.s3_object_storage_class (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.s3_object_tags (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.s3_prefix (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.s3_server_side_encryption (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.source_path (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.store_on_s3 (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.tags (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.timeout (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.tracing_mode (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.trusted_entities (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.use_existing_cloudwatch_log_group (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.vpc_security_group_ids (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_dir_without_pip_install.var.vpc_subnet_ids (expand)" -> "[root] module.package_dir_without_pip_install (expand)"
		"[root] module.package_file (close)" -> "[root] module.package_file.aws_iam_role_policy_attachment.additional_inline (expand)"
		"[root] module.package_file (close)" -> "[root] module.package_file.aws_iam_role_policy_attachment.additional_json (expand)"
		"[root] module.package_file (close)" -> "[root] module.package_file.aws_iam_role_policy_attachment.additional_jsons (expand)"
		"[root] module.package_file (close)" -> "[root] module.package_file.aws_iam_role_policy_attachment.additional_many (expand)"
		"[root] module.package_file (close)" -> "[root] module.package_file.aws_iam_role_policy_attachment.additional_one (expand)"
		"[root] module.package_file (close)" -> "[root] module.package_file.aws_iam_role_policy_attachment.async (expand)"
		"[root] module.package_file (close)" -> "[root] module.package_file.aws_iam_role_policy_attachment.dead_letter (expand)"
		"[root] module.package_file (close)" -> "[root] module.package_file.aws_iam_role_policy_attachment.logs (expand)"
		"[root] module.package_file (close)" -> "[root] module.package_file.aws_iam_role_policy_attachment.tracing (expand)"
		"[root] module.package_file (close)" -> "[root] module.package_file.aws_iam_role_policy_attachment.vpc (expand)"
		"[root] module.package_file (close)" -> "[root] module.package_file.aws_lambda_function_event_invoke_config.this (expand)"
		"[root] module.package_file (close)" -> "[root] module.package_file.aws_lambda_permission.current_version_triggers (expand)"
		"[root] module.package_file (close)" -> "[root] module.package_file.aws_lambda_permission.unqualified_alias_triggers (expand)"
		"[root] module.package_file (close)" -> "[root] module.package_file.aws_lambda_provisioned_concurrency_config.current_version (expand)"
		"[root] module.package_file (close)" -> "[root] module.package_file.output.lambda_cloudwatch_log_group_arn (expand)"
		"[root] module.package_file (close)" -> "[root] module.package_file.output.lambda_cloudwatch_log_group_name (expand)"
		"[root] module.package_file (close)" -> "[root] module.package_file.output.lambda_event_source_mapping_function_arn (expand)"
		"[root] module.package_file (close)" -> "[root] module.package_file.output.lambda_event_source_mapping_state (expand)"
		"[root] module.package_file (close)" -> "[root] module.package_file.output.lambda_event_source_mapping_state_transition_reason (expand)"
		"[root] module.package_file (close)" -> "[root] module.package_file.output.lambda_event_source_mapping_uuid (expand)"
		"[root] module.package_file (close)" -> "[root] module.package_file.output.lambda_function_arn (expand)"
		"[root] module.package_file (close)" -> "[root] module.package_file.output.lambda_function_invoke_arn (expand)"
		"[root] module.package_file (close)" -> "[root] module.package_file.output.lambda_function_kms_key_arn (expand)"
		"[root] module.package_file (close)" -> "[root] module.package_file.output.lambda_function_last_modified (expand)"
		"[root] module.package_file (close)" -> "[root] module.package_file.output.lambda_function_name (expand)"
		"[root] module.package_file (close)" -> "[root] module.package_file.output.lambda_function_qualified_arn (expand)"
		"[root] module.package_file (close)" -> "[root] module.package_file.output.lambda_function_source_code_hash (expand)"
		"[root] module.package_file (close)" -> "[root] module.package_file.output.lambda_function_source_code_size (expand)"
		"[root] module.package_file (close)" -> "[root] module.package_file.output.lambda_function_version (expand)"
		"[root] module.package_file (close)" -> "[root] module.package_file.output.lambda_layer_arn (expand)"
		"[root] module.package_file (close)" -> "[root] module.package_file.output.lambda_layer_created_date (expand)"
		"[root] module.package_file (close)" -> "[root] module.package_file.output.lambda_layer_layer_arn (expand)"
		"[root] module.package_file (close)" -> "[root] module.package_file.output.lambda_layer_source_code_size (expand)"
		"[root] module.package_file (close)" -> "[root] module.package_file.output.lambda_layer_version (expand)"
		"[root] module.package_file (close)" -> "[root] module.package_file.output.lambda_role_arn (expand)"
		"[root] module.package_file (close)" -> "[root] module.package_file.output.lambda_role_name (expand)"
		"[root] module.package_file (close)" -> "[root] module.package_file.output.lambda_role_unique_id (expand)"
		"[root] module.package_file (close)" -> "[root] module.package_file.output.local_filename (expand)"
		"[root] module.package_file (close)" -> "[root] module.package_file.output.s3_object (expand)"
		"[root] module.package_file.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_file.var.cloudwatch_logs_kms_key_id (expand)"
		"[root] module.package_file.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_file.var.cloudwatch_logs_retention_in_days (expand)"
		"[root] module.package_file.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_file.var.cloudwatch_logs_tags (expand)"
		"[root] module.package_file.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_file.var.create (expand)"
		"[root] module.package_file.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_file.var.create_function (expand)"
		"[root] module.package_file.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_file.var.create_layer (expand)"
		"[root] module.package_file.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_file.var.function_name (expand)"
		"[root] module.package_file.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_file.var.lambda_at_edge (expand)"
		"[root] module.package_file.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_file.var.tags (expand)"
		"[root] module.package_file.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_file.var.use_existing_cloudwatch_log_group (expand)"
		"[root] module.package_file.aws_cloudwatch_log_group.lambda (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_file.aws_iam_policy.additional_inline (expand)" -> "[root] module.package_file.data.aws_iam_policy_document.additional_inline (expand)"
		"[root] module.package_file.aws_iam_policy.additional_inline (expand)" -> "[root] module.package_file.local.role_name (expand)"
		"[root] module.package_file.aws_iam_policy.additional_inline (expand)" -> "[root] module.package_file.var.policy_path (expand)"
		"[root] module.package_file.aws_iam_policy.additional_inline (expand)" -> "[root] module.package_file.var.tags (expand)"
		"[root] module.package_file.aws_iam_policy.additional_json (expand)" -> "[root] module.package_file.local.role_name (expand)"
		"[root] module.package_file.aws_iam_policy.additional_json (expand)" -> "[root] module.package_file.var.attach_policy_json (expand)"
		"[root] module.package_file.aws_iam_policy.additional_json (expand)" -> "[root] module.package_file.var.policy_json (expand)"
		"[root] module.package_file.aws_iam_policy.additional_json (expand)" -> "[root] module.package_file.var.policy_path (expand)"
		"[root] module.package_file.aws_iam_policy.additional_json (expand)" -> "[root] module.package_file.var.tags (expand)"
		"[root] module.package_file.aws_iam_policy.additional_json (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_file.aws_iam_policy.additional_jsons (expand)" -> "[root] module.package_file.local.role_name (expand)"
		"[root] module.package_file.aws_iam_policy.additional_jsons (expand)" -> "[root] module.package_file.var.attach_policy_jsons (expand)"
		"[root] module.package_file.aws_iam_policy.additional_jsons (expand)" -> "[root] module.package_file.var.number_of_policy_jsons (expand)"
		"[root] module.package_file.aws_iam_policy.additional_jsons (expand)" -> "[root] module.package_file.var.policy_jsons (expand)"
		"[root] module.package_file.aws_iam_policy.additional_jsons (expand)" -> "[root] module.package_file.var.policy_path (expand)"
		"[root] module.package_file.aws_iam_policy.additional_jsons (expand)" -> "[root] module.package_file.var.tags (expand)"
		"[root] module.package_file.aws_iam_policy.additional_jsons (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_file.aws_iam_policy.async (expand)" -> "[root] module.package_file.data.aws_iam_policy_document.async (expand)"
		"[root] module.package_file.aws_iam_policy.async (expand)" -> "[root] module.package_file.local.role_name (expand)"
		"[root] module.package_file.aws_iam_policy.async (expand)" -> "[root] module.package_file.var.policy_path (expand)"
		"[root] module.package_file.aws_iam_policy.async (expand)" -> "[root] module.package_file.var.tags (expand)"
		"[root] module.package_file.aws_iam_policy.dead_letter (expand)" -> "[root] module.package_file.data.aws_iam_policy_document.dead_letter (expand)"
		"[root] module.package_file.aws_iam_policy.dead_letter (expand)" -> "[root] module.package_file.local.role_name (expand)"
		"[root] module.package_file.aws_iam_policy.dead_letter (expand)" -> "[root] module.package_file.var.policy_path (expand)"
		"[root] module.package_file.aws_iam_policy.dead_letter (expand)" -> "[root] module.package_file.var.tags (expand)"
		"[root] module.package_file.aws_iam_policy.logs (expand)" -> "[root] module.package_file.data.aws_iam_policy_document.logs (expand)"
		"[root] module.package_file.aws_iam_policy.logs (expand)" -> "[root] module.package_file.local.role_name (expand)"
		"[root] module.package_file.aws_iam_policy.logs (expand)" -> "[root] module.package_file.var.policy_path (expand)"
		"[root] module.package_file.aws_iam_policy.tracing (expand)" -> "[root] module.package_file.data.aws_iam_policy.tracing (expand)"
		"[root] module.package_file.aws_iam_policy.tracing (expand)" -> "[root] module.package_file.local.role_name (expand)"
		"[root] module.package_file.aws_iam_policy.tracing (expand)" -> "[root] module.package_file.var.policy_path (expand)"
		"[root] module.package_file.aws_iam_policy.tracing (expand)" -> "[root] module.package_file.var.tags (expand)"
		"[root] module.package_file.aws_iam_policy.vpc (expand)" -> "[root] module.package_file.data.aws_iam_policy.vpc (expand)"
		"[root] module.package_file.aws_iam_policy.vpc (expand)" -> "[root] module.package_file.local.role_name (expand)"
		"[root] module.package_file.aws_iam_policy.vpc (expand)" -> "[root] module.package_file.var.policy_path (expand)"
		"[root] module.package_file.aws_iam_policy.vpc (expand)" -> "[root] module.package_file.var.tags (expand)"
		"[root] module.package_file.aws_iam_role.lambda (expand)" -> "[root] module.package_file.data.aws_iam_policy_document.assume_role (expand)"
		"[root] module.package_file.aws_iam_role.lambda (expand)" -> "[root] module.package_file.local.role_name (expand)"
		"[root] module.package_file.aws_iam_role.lambda (expand)" -> "[root] module.package_file.var.role_description (expand)"
		"[root] module.package_file.aws_iam_role.lambda (expand)" -> "[root] module.package_file.var.role_force_detach_policies (expand)"
		"[root] module.package_file.aws_iam_role.lambda (expand)" -> "[root] module.package_file.var.role_path (expand)"
		"[root] module.package_file.aws_iam_role.lambda (expand)" -> "[root] module.package_file.var.role_permissions_boundary (expand)"
		"[root] module.package_file.aws_iam_role.lambda (expand)" -> "[root] module.package_file.var.role_tags (expand)"
		"[root] module.package_file.aws_iam_role.lambda (expand)" -> "[root] module.package_file.var.tags (expand)"
		"[root] module.package_file.aws_iam_role_policy_attachment.additional_inline (expand)" -> "[root] module.package_file.aws_iam_policy.additional_inline (expand)"
		"[root] module.package_file.aws_iam_role_policy_attachment.additional_inline (expand)" -> "[root] module.package_file.aws_iam_role.lambda (expand)"
		"[root] module.package_file.aws_iam_role_policy_attachment.additional_json (expand)" -> "[root] module.package_file.aws_iam_policy.additional_json (expand)"
		"[root] module.package_file.aws_iam_role_policy_attachment.additional_json (expand)" -> "[root] module.package_file.aws_iam_role.lambda (expand)"
		"[root] module.package_file.aws_iam_role_policy_attachment.additional_jsons (expand)" -> "[root] module.package_file.aws_iam_policy.additional_jsons (expand)"
		"[root] module.package_file.aws_iam_role_policy_attachment.additional_jsons (expand)" -> "[root] module.package_file.aws_iam_role.lambda (expand)"
		"[root] module.package_file.aws_iam_role_policy_attachment.additional_many (expand)" -> "[root] module.package_file.aws_iam_role.lambda (expand)"
		"[root] module.package_file.aws_iam_role_policy_attachment.additional_many (expand)" -> "[root] module.package_file.var.attach_policies (expand)"
		"[root] module.package_file.aws_iam_role_policy_attachment.additional_many (expand)" -> "[root] module.package_file.var.number_of_policies (expand)"
		"[root] module.package_file.aws_iam_role_policy_attachment.additional_many (expand)" -> "[root] module.package_file.var.policies (expand)"
		"[root] module.package_file.aws_iam_role_policy_attachment.additional_one (expand)" -> "[root] module.package_file.aws_iam_role.lambda (expand)"
		"[root] module.package_file.aws_iam_role_policy_attachment.additional_one (expand)" -> "[root] module.package_file.var.attach_policy (expand)"
		"[root] module.package_file.aws_iam_role_policy_attachment.additional_one (expand)" -> "[root] module.package_file.var.policy (expand)"
		"[root] module.package_file.aws_iam_role_policy_attachment.async (expand)" -> "[root] module.package_file.aws_iam_policy.async (expand)"
		"[root] module.package_file.aws_iam_role_policy_attachment.async (expand)" -> "[root] module.package_file.aws_iam_role.lambda (expand)"
		"[root] module.package_file.aws_iam_role_policy_attachment.dead_letter (expand)" -> "[root] module.package_file.aws_iam_policy.dead_letter (expand)"
		"[root] module.package_file.aws_iam_role_policy_attachment.dead_letter (expand)" -> "[root] module.package_file.aws_iam_role.lambda (expand)"
		"[root] module.package_file.aws_iam_role_policy_attachment.logs (expand)" -> "[root] module.package_file.aws_iam_policy.logs (expand)"
		"[root] module.package_file.aws_iam_role_policy_attachment.logs (expand)" -> "[root] module.package_file.aws_iam_role.lambda (expand)"
		"[root] module.package_file.aws_iam_role_policy_attachment.tracing (expand)" -> "[root] module.package_file.aws_iam_policy.tracing (expand)"
		"[root] module.package_file.aws_iam_role_policy_attachment.tracing (expand)" -> "[root] module.package_file.aws_iam_role.lambda (expand)"
		"[root] module.package_file.aws_iam_role_policy_attachment.vpc (expand)" -> "[root] module.package_file.aws_iam_policy.vpc (expand)"
		"[root] module.package_file.aws_iam_role_policy_attachment.vpc (expand)" -> "[root] module.package_file.aws_iam_role.lambda (expand)"
		"[root] module.package_file.aws_lambda_event_source_mapping.this (expand)" -> "[root] module.package_file.aws_lambda_function.this (expand)"
		"[root] module.package_file.aws_lambda_event_source_mapping.this (expand)" -> "[root] module.package_file.var.create_unqualified_alias_allowed_triggers (expand)"
		"[root] module.package_file.aws_lambda_event_source_mapping.this (expand)" -> "[root] module.package_file.var.event_source_mapping (expand)"
		"[root] module.package_file.aws_lambda_function.this (expand)" -> "[root] module.package_file.aws_cloudwatch_log_group.lambda (expand)"
		"[root] module.package_file.aws_lambda_function.this (expand)" -> "[root] module.package_file.aws_iam_role.lambda (expand)"
		"[root] module.package_file.aws_lambda_function.this (expand)" -> "[root] module.package_file.local.filename (expand)"
		"[root] module.package_file.aws_lambda_function.this (expand)" -> "[root] module.package_file.local.s3_bucket (expand)"
		"[root] module.package_file.aws_lambda_function.this (expand)" -> "[root] module.package_file.local.s3_object_version (expand)"
		"[root] module.package_file.aws_lambda_function.this (expand)" -> "[root] module.package_file.local.was_missing (expand)"
		"[root] module.package_file.aws_lambda_function.this (expand)" -> "[root] module.package_file.var.architectures (expand)"
		"[root] module.package_file.aws_lambda_function.this (expand)" -> "[root] module.package_file.var.dead_letter_target_arn (expand)"
		"[root] module.package_file.aws_lambda_function.this (expand)" -> "[root] module.package_file.var.description (expand)"
		"[root] module.package_file.aws_lambda_function.this (expand)" -> "[root] module.package_file.var.environment_variables (expand)"
		"[root] module.package_file.aws_lambda_function.this (expand)" -> "[root] module.package_file.var.file_system_arn (expand)"
		"[root] module.package_file.aws_lambda_function.this (expand)" -> "[root] module.package_file.var.file_system_local_mount_path (expand)"
		"[root] module.package_file.aws_lambda_function.this (expand)" -> "[root] module.package_file.var.handler (expand)"
		"[root] module.package_file.aws_lambda_function.this (expand)" -> "[root] module.package_file.var.ignore_source_code_hash (expand)"
		"[root] module.package_file.aws_lambda_function.this (expand)" -> "[root] module.package_file.var.image_config_command (expand)"
		"[root] module.package_file.aws_lambda_function.this (expand)" -> "[root] module.package_file.var.image_config_entry_point (expand)"
		"[root] module.package_file.aws_lambda_function.this (expand)" -> "[root] module.package_file.var.image_config_working_directory (expand)"
		"[root] module.package_file.aws_lambda_function.this (expand)" -> "[root] module.package_file.var.image_uri (expand)"
		"[root] module.package_file.aws_lambda_function.this (expand)" -> "[root] module.package_file.var.kms_key_arn (expand)"
		"[root] module.package_file.aws_lambda_function.this (expand)" -> "[root] module.package_file.var.lambda_role (expand)"
		"[root] module.package_file.aws_lambda_function.this (expand)" -> "[root] module.package_file.var.layers (expand)"
		"[root] module.package_file.aws_lambda_function.this (expand)" -> "[root] module.package_file.var.memory_size (expand)"
		"[root] module.package_file.aws_lambda_function.this (expand)" -> "[root] module.package_file.var.package_type (expand)"
		"[root] module.package_file.aws_lambda_function.this (expand)" -> "[root] module.package_file.var.publish (expand)"
		"[root] module.package_file.aws_lambda_function.this (expand)" -> "[root] module.package_file.var.reserved_concurrent_executions (expand)"
		"[root] module.package_file.aws_lambda_function.this (expand)" -> "[root] module.package_file.var.timeout (expand)"
		"[root] module.package_file.aws_lambda_function.this (expand)" -> "[root] module.package_file.var.tracing_mode (expand)"
		"[root] module.package_file.aws_lambda_function.this (expand)" -> "[root] module.package_file.var.vpc_security_group_ids (expand)"
		"[root] module.package_file.aws_lambda_function.this (expand)" -> "[root] module.package_file.var.vpc_subnet_ids (expand)"
		"[root] module.package_file.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.package_file.aws_lambda_function.this (expand)"
		"[root] module.package_file.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.package_file.local.qualifiers (expand)"
		"[root] module.package_file.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.package_file.var.create_async_event_config (expand)"
		"[root] module.package_file.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.package_file.var.destination_on_failure (expand)"
		"[root] module.package_file.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.package_file.var.destination_on_success (expand)"
		"[root] module.package_file.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.package_file.var.maximum_event_age_in_seconds (expand)"
		"[root] module.package_file.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.package_file.var.maximum_retry_attempts (expand)"
		"[root] module.package_file.aws_lambda_layer_version.this (expand)" -> "[root] module.package_file.local.filename (expand)"
		"[root] module.package_file.aws_lambda_layer_version.this (expand)" -> "[root] module.package_file.local.s3_bucket (expand)"
		"[root] module.package_file.aws_lambda_layer_version.this (expand)" -> "[root] module.package_file.local.s3_object_version (expand)"
		"[root] module.package_file.aws_lambda_layer_version.this (expand)" -> "[root] module.package_file.local.was_missing (expand)"
		"[root] module.package_file.aws_lambda_layer_version.this (expand)" -> "[root] module.package_file.var.compatible_architectures (expand)"
		"[root] module.package_file.aws_lambda_layer_version.this (expand)" -> "[root] module.package_file.var.compatible_runtimes (expand)"
		"[root] module.package_file.aws_lambda_layer_version.this (expand)" -> "[root] module.package_file.var.create_layer (expand)"
		"[root] module.package_file.aws_lambda_layer_version.this (expand)" -> "[root] module.package_file.var.description (expand)"
		"[root] module.package_file.aws_lambda_layer_version.this (expand)" -> "[root] module.package_file.var.ignore_source_code_hash (expand)"
		"[root] module.package_file.aws_lambda_layer_version.this (expand)" -> "[root] module.package_file.var.layer_name (expand)"
		"[root] module.package_file.aws_lambda_layer_version.this (expand)" -> "[root] module.package_file.var.license_info (expand)"
		"[root] module.package_file.aws_lambda_permission.current_version_triggers (expand)" -> "[root] module.package_file.aws_lambda_function.this (expand)"
		"[root] module.package_file.aws_lambda_permission.current_version_triggers (expand)" -> "[root] module.package_file.var.allowed_triggers (expand)"
		"[root] module.package_file.aws_lambda_permission.current_version_triggers (expand)" -> "[root] module.package_file.var.create_current_version_allowed_triggers (expand)"
		"[root] module.package_file.aws_lambda_permission.unqualified_alias_triggers (expand)" -> "[root] module.package_file.aws_lambda_function.this (expand)"
		"[root] module.package_file.aws_lambda_permission.unqualified_alias_triggers (expand)" -> "[root] module.package_file.var.allowed_triggers (expand)"
		"[root] module.package_file.aws_lambda_permission.unqualified_alias_triggers (expand)" -> "[root] module.package_file.var.create_unqualified_alias_allowed_triggers (expand)"
		"[root] module.package_file.aws_lambda_provisioned_concurrency_config.current_version (expand)" -> "[root] module.package_file.aws_lambda_function.this (expand)"
		"[root] module.package_file.aws_lambda_provisioned_concurrency_config.current_version (expand)" -> "[root] module.package_file.var.provisioned_concurrent_executions (expand)"
		"[root] module.package_file.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.package_file.local.s3_key (expand)"
		"[root] module.package_file.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.package_file.null_resource.archive (expand)"
		"[root] module.package_file.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.package_file.var.s3_acl (expand)"
		"[root] module.package_file.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.package_file.var.s3_bucket (expand)"
		"[root] module.package_file.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.package_file.var.s3_object_storage_class (expand)"
		"[root] module.package_file.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.package_file.var.s3_object_tags (expand)"
		"[root] module.package_file.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.package_file.var.s3_server_side_encryption (expand)"
		"[root] module.package_file.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.package_file.var.tags (expand)"
		"[root] module.package_file.aws_s3_bucket_object.lambda_package (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_file.data.aws_arn.log_group_arn (expand)" -> "[root] module.package_file.local.create_role (expand)"
		"[root] module.package_file.data.aws_arn.log_group_arn (expand)" -> "[root] module.package_file.local.log_group_arn_regional (expand)"
		"[root] module.package_file.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_file.var.create (expand)"
		"[root] module.package_file.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_file.var.create_function (expand)"
		"[root] module.package_file.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_file.var.create_layer (expand)"
		"[root] module.package_file.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_file.var.function_name (expand)"
		"[root] module.package_file.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_file.var.lambda_at_edge (expand)"
		"[root] module.package_file.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_file.var.use_existing_cloudwatch_log_group (expand)"
		"[root] module.package_file.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_file.data.aws_iam_policy.tracing (expand)" -> "[root] module.package_file.data.aws_partition.current (expand)"
		"[root] module.package_file.data.aws_iam_policy.tracing (expand)" -> "[root] module.package_file.local.create_role (expand)"
		"[root] module.package_file.data.aws_iam_policy.tracing (expand)" -> "[root] module.package_file.var.attach_tracing_policy (expand)"
		"[root] module.package_file.data.aws_iam_policy.vpc (expand)" -> "[root] module.package_file.data.aws_partition.current (expand)"
		"[root] module.package_file.data.aws_iam_policy.vpc (expand)" -> "[root] module.package_file.local.create_role (expand)"
		"[root] module.package_file.data.aws_iam_policy.vpc (expand)" -> "[root] module.package_file.var.attach_network_policy (expand)"
		"[root] module.package_file.data.aws_iam_policy_document.additional_inline (expand)" -> "[root] module.package_file.local.create_role (expand)"
		"[root] module.package_file.data.aws_iam_policy_document.additional_inline (expand)" -> "[root] module.package_file.var.attach_policy_statements (expand)"
		"[root] module.package_file.data.aws_iam_policy_document.additional_inline (expand)" -> "[root] module.package_file.var.policy_statements (expand)"
		"[root] module.package_file.data.aws_iam_policy_document.additional_inline (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_file.data.aws_iam_policy_document.assume_role (expand)" -> "[root] module.package_file.local.create_role (expand)"
		"[root] module.package_file.data.aws_iam_policy_document.assume_role (expand)" -> "[root] module.package_file.local.trusted_entities_principals (expand)"
		"[root] module.package_file.data.aws_iam_policy_document.assume_role (expand)" -> "[root] module.package_file.local.trusted_entities_services (expand)"
		"[root] module.package_file.data.aws_iam_policy_document.assume_role (expand)" -> "[root] module.package_file.var.assume_role_policy_statements (expand)"
		"[root] module.package_file.data.aws_iam_policy_document.assume_role (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_file.data.aws_iam_policy_document.async (expand)" -> "[root] module.package_file.local.create_role (expand)"
		"[root] module.package_file.data.aws_iam_policy_document.async (expand)" -> "[root] module.package_file.var.attach_async_event_policy (expand)"
		"[root] module.package_file.data.aws_iam_policy_document.async (expand)" -> "[root] module.package_file.var.destination_on_failure (expand)"
		"[root] module.package_file.data.aws_iam_policy_document.async (expand)" -> "[root] module.package_file.var.destination_on_success (expand)"
		"[root] module.package_file.data.aws_iam_policy_document.async (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_file.data.aws_iam_policy_document.dead_letter (expand)" -> "[root] module.package_file.local.create_role (expand)"
		"[root] module.package_file.data.aws_iam_policy_document.dead_letter (expand)" -> "[root] module.package_file.var.attach_dead_letter_policy (expand)"
		"[root] module.package_file.data.aws_iam_policy_document.dead_letter (expand)" -> "[root] module.package_file.var.dead_letter_target_arn (expand)"
		"[root] module.package_file.data.aws_iam_policy_document.dead_letter (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_file.data.aws_iam_policy_document.logs (expand)" -> "[root] module.package_file.local.log_group_arn (expand)"
		"[root] module.package_file.data.aws_iam_policy_document.logs (expand)" -> "[root] module.package_file.var.attach_cloudwatch_logs_policy (expand)"
		"[root] module.package_file.data.aws_partition.current (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.data.aws_partition.current (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_file.data.external.archive_prepare (expand)" -> "[root] module.package_file.local.python (expand)"
		"[root] module.package_file.data.external.archive_prepare (expand)" -> "[root] module.package_file.var.artifacts_dir (expand)"
		"[root] module.package_file.data.external.archive_prepare (expand)" -> "[root] module.package_file.var.build_in_docker (expand)"
		"[root] module.package_file.data.external.archive_prepare (expand)" -> "[root] module.package_file.var.create (expand)"
		"[root] module.package_file.data.external.archive_prepare (expand)" -> "[root] module.package_file.var.create_package (expand)"
		"[root] module.package_file.data.external.archive_prepare (expand)" -> "[root] module.package_file.var.docker_build_root (expand)"
		"[root] module.package_file.data.external.archive_prepare (expand)" -> "[root] module.package_file.var.docker_file (expand)"
		"[root] module.package_file.data.external.archive_prepare (expand)" -> "[root] module.package_file.var.docker_image (expand)"
		"[root] module.package_file.data.external.archive_prepare (expand)" -> "[root] module.package_file.var.docker_pip_cache (expand)"
		"[root] module.package_file.data.external.archive_prepare (expand)" -> "[root] module.package_file.var.docker_with_ssh_agent (expand)"
		"[root] module.package_file.data.external.archive_prepare (expand)" -> "[root] module.package_file.var.hash_extra (expand)"
		"[root] module.package_file.data.external.archive_prepare (expand)" -> "[root] module.package_file.var.recreate_missing_package (expand)"
		"[root] module.package_file.data.external.archive_prepare (expand)" -> "[root] module.package_file.var.runtime (expand)"
		"[root] module.package_file.data.external.archive_prepare (expand)" -> "[root] module.package_file.var.source_path (expand)"
		"[root] module.package_file.data.external.archive_prepare (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/external\"]"
		"[root] module.package_file.local.archive_filename (expand)" -> "[root] module.package_file.data.external.archive_prepare (expand)"
		"[root] module.package_file.local.archive_was_missing (expand)" -> "[root] module.package_file.data.external.archive_prepare (expand)"
		"[root] module.package_file.local.create_role (expand)" -> "[root] module.package_file.var.create (expand)"
		"[root] module.package_file.local.create_role (expand)" -> "[root] module.package_file.var.create_function (expand)"
		"[root] module.package_file.local.create_role (expand)" -> "[root] module.package_file.var.create_layer (expand)"
		"[root] module.package_file.local.create_role (expand)" -> "[root] module.package_file.var.create_role (expand)"
		"[root] module.package_file.local.filename (expand)" -> "[root] module.package_file.local.archive_filename (expand)"
		"[root] module.package_file.local.filename (expand)" -> "[root] module.package_file.var.local_existing_package (expand)"
		"[root] module.package_file.local.filename (expand)" -> "[root] module.package_file.var.store_on_s3 (expand)"
		"[root] module.package_file.local.log_group_arn (expand)" -> "[root] module.package_file.data.aws_arn.log_group_arn (expand)"
		"[root] module.package_file.local.log_group_arn_regional (expand)" -> "[root] module.package_file.aws_cloudwatch_log_group.lambda (expand)"
		"[root] module.package_file.local.log_group_arn_regional (expand)" -> "[root] module.package_file.data.aws_cloudwatch_log_group.lambda (expand)"
		"[root] module.package_file.local.log_group_name (expand)" -> "[root] module.package_file.aws_cloudwatch_log_group.lambda (expand)"
		"[root] module.package_file.local.log_group_name (expand)" -> "[root] module.package_file.data.aws_cloudwatch_log_group.lambda (expand)"
		"[root] module.package_file.local.python (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.local.qualifiers (expand)" -> "[root] module.package_file.var.create_current_version_async_event_config (expand)"
		"[root] module.package_file.local.qualifiers (expand)" -> "[root] module.package_file.var.create_unqualified_alias_async_event_config (expand)"
		"[root] module.package_file.local.role_name (expand)" -> "[root] module.package_file.local.create_role (expand)"
		"[root] module.package_file.local.role_name (expand)" -> "[root] module.package_file.var.function_name (expand)"
		"[root] module.package_file.local.role_name (expand)" -> "[root] module.package_file.var.role_name (expand)"
		"[root] module.package_file.local.s3_bucket (expand)" -> "[root] module.package_file.var.s3_bucket (expand)"
		"[root] module.package_file.local.s3_bucket (expand)" -> "[root] module.package_file.var.s3_existing_package (expand)"
		"[root] module.package_file.local.s3_bucket (expand)" -> "[root] module.package_file.var.store_on_s3 (expand)"
		"[root] module.package_file.local.s3_key (expand)" -> "[root] module.package_file.local.archive_filename (expand)"
		"[root] module.package_file.local.s3_key (expand)" -> "[root] module.package_file.var.s3_existing_package (expand)"
		"[root] module.package_file.local.s3_key (expand)" -> "[root] module.package_file.var.s3_prefix (expand)"
		"[root] module.package_file.local.s3_key (expand)" -> "[root] module.package_file.var.store_on_s3 (expand)"
		"[root] module.package_file.local.s3_object_version (expand)" -> "[root] module.package_file.aws_s3_bucket_object.lambda_package (expand)"
		"[root] module.package_file.local.trusted_entities_principals (expand)" -> "[root] module.package_file.var.trusted_entities (expand)"
		"[root] module.package_file.local.trusted_entities_services (expand)" -> "[root] module.package_file.var.lambda_at_edge (expand)"
		"[root] module.package_file.local.trusted_entities_services (expand)" -> "[root] module.package_file.var.trusted_entities (expand)"
		"[root] module.package_file.local.was_missing (expand)" -> "[root] module.package_file.local.archive_was_missing (expand)"
		"[root] module.package_file.local.was_missing (expand)" -> "[root] module.package_file.var.local_existing_package (expand)"
		"[root] module.package_file.local_file.archive_plan (expand)" -> "[root] module.package_file.data.external.archive_prepare (expand)"
		"[root] module.package_file.local_file.archive_plan (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/local\"]"
		"[root] module.package_file.null_resource.archive (expand)" -> "[root] module.package_file.local_file.archive_plan (expand)"
		"[root] module.package_file.null_resource.archive (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/null\"]"
		"[root] module.package_file.null_resource.archive (expand)" -> "[root] provisioner.local-exec"
		"[root] module.package_file.output.lambda_cloudwatch_log_group_arn (expand)" -> "[root] module.package_file.local.log_group_arn (expand)"
		"[root] module.package_file.output.lambda_cloudwatch_log_group_name (expand)" -> "[root] module.package_file.local.log_group_name (expand)"
		"[root] module.package_file.output.lambda_event_source_mapping_function_arn (expand)" -> "[root] module.package_file.aws_lambda_event_source_mapping.this (expand)"
		"[root] module.package_file.output.lambda_event_source_mapping_state (expand)" -> "[root] module.package_file.aws_lambda_event_source_mapping.this (expand)"
		"[root] module.package_file.output.lambda_event_source_mapping_state_transition_reason (expand)" -> "[root] module.package_file.aws_lambda_event_source_mapping.this (expand)"
		"[root] module.package_file.output.lambda_event_source_mapping_uuid (expand)" -> "[root] module.package_file.aws_lambda_event_source_mapping.this (expand)"
		"[root] module.package_file.output.lambda_function_arn (expand)" -> "[root] module.package_file.aws_lambda_function.this (expand)"
		"[root] module.package_file.output.lambda_function_invoke_arn (expand)" -> "[root] module.package_file.aws_lambda_function.this (expand)"
		"[root] module.package_file.output.lambda_function_kms_key_arn (expand)" -> "[root] module.package_file.aws_lambda_function.this (expand)"
		"[root] module.package_file.output.lambda_function_last_modified (expand)" -> "[root] module.package_file.aws_lambda_function.this (expand)"
		"[root] module.package_file.output.lambda_function_name (expand)" -> "[root] module.package_file.aws_lambda_function.this (expand)"
		"[root] module.package_file.output.lambda_function_qualified_arn (expand)" -> "[root] module.package_file.aws_lambda_function.this (expand)"
		"[root] module.package_file.output.lambda_function_source_code_hash (expand)" -> "[root] module.package_file.aws_lambda_function.this (expand)"
		"[root] module.package_file.output.lambda_function_source_code_size (expand)" -> "[root] module.package_file.aws_lambda_function.this (expand)"
		"[root] module.package_file.output.lambda_function_version (expand)" -> "[root] module.package_file.aws_lambda_function.this (expand)"
		"[root] module.package_file.output.lambda_layer_arn (expand)" -> "[root] module.package_file.aws_lambda_layer_version.this (expand)"
		"[root] module.package_file.output.lambda_layer_created_date (expand)" -> "[root] module.package_file.aws_lambda_layer_version.this (expand)"
		"[root] module.package_file.output.lambda_layer_layer_arn (expand)" -> "[root] module.package_file.aws_lambda_layer_version.this (expand)"
		"[root] module.package_file.output.lambda_layer_source_code_size (expand)" -> "[root] module.package_file.aws_lambda_layer_version.this (expand)"
		"[root] module.package_file.output.lambda_layer_version (expand)" -> "[root] module.package_file.aws_lambda_layer_version.this (expand)"
		"[root] module.package_file.output.lambda_role_arn (expand)" -> "[root] module.package_file.aws_iam_role.lambda (expand)"
		"[root] module.package_file.output.lambda_role_name (expand)" -> "[root] module.package_file.aws_iam_role.lambda (expand)"
		"[root] module.package_file.output.lambda_role_unique_id (expand)" -> "[root] module.package_file.aws_iam_role.lambda (expand)"
		"[root] module.package_file.output.local_filename (expand)" -> "[root] module.package_file.local.filename (expand)"
		"[root] module.package_file.output.s3_object (expand)" -> "[root] module.package_file.local.s3_bucket (expand)"
		"[root] module.package_file.output.s3_object (expand)" -> "[root] module.package_file.local.s3_object_version (expand)"
		"[root] module.package_file.var.allowed_triggers (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.architectures (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.artifacts_dir (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.assume_role_policy_statements (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.attach_async_event_policy (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.attach_cloudwatch_logs_policy (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.attach_dead_letter_policy (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.attach_network_policy (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.attach_policies (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.attach_policy (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.attach_policy_json (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.attach_policy_jsons (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.attach_policy_statements (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.attach_tracing_policy (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.build_in_docker (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.cloudwatch_logs_kms_key_id (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.cloudwatch_logs_retention_in_days (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.cloudwatch_logs_tags (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.compatible_architectures (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.compatible_runtimes (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.create (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.create_async_event_config (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.create_current_version_allowed_triggers (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.create_current_version_async_event_config (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.create_function (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.create_layer (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.create_package (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.create_role (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.create_unqualified_alias_allowed_triggers (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.create_unqualified_alias_async_event_config (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.dead_letter_target_arn (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.description (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.destination_on_failure (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.destination_on_success (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.docker_build_root (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.docker_file (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.docker_image (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.docker_pip_cache (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.docker_with_ssh_agent (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.environment_variables (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.event_source_mapping (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.file_system_arn (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.file_system_local_mount_path (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.function_name (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.handler (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.hash_extra (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.ignore_source_code_hash (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.image_config_command (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.image_config_entry_point (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.image_config_working_directory (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.image_uri (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.kms_key_arn (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.lambda_at_edge (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.lambda_role (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.layer_name (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.layers (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.license_info (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.local_existing_package (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.maximum_event_age_in_seconds (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.maximum_retry_attempts (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.memory_size (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.number_of_policies (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.number_of_policy_jsons (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.package_type (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.policies (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.policy (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.policy_json (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.policy_jsons (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.policy_path (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.policy_statements (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.provisioned_concurrent_executions (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.publish (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.recreate_missing_package (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.reserved_concurrent_executions (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.role_description (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.role_force_detach_policies (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.role_name (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.role_path (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.role_permissions_boundary (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.role_tags (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.runtime (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.s3_acl (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.s3_bucket (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.s3_existing_package (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.s3_object_storage_class (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.s3_object_tags (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.s3_prefix (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.s3_server_side_encryption (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.source_path (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.store_on_s3 (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.tags (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.timeout (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.tracing_mode (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.trusted_entities (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.use_existing_cloudwatch_log_group (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.vpc_security_group_ids (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file.var.vpc_subnet_ids (expand)" -> "[root] module.package_file (expand)"
		"[root] module.package_file_with_pip_requirements (close)" -> "[root] module.package_file_with_pip_requirements.aws_iam_role_policy_attachment.additional_inline (expand)"
		"[root] module.package_file_with_pip_requirements (close)" -> "[root] module.package_file_with_pip_requirements.aws_iam_role_policy_attachment.additional_json (expand)"
		"[root] module.package_file_with_pip_requirements (close)" -> "[root] module.package_file_with_pip_requirements.aws_iam_role_policy_attachment.additional_jsons (expand)"
		"[root] module.package_file_with_pip_requirements (close)" -> "[root] module.package_file_with_pip_requirements.aws_iam_role_policy_attachment.additional_many (expand)"
		"[root] module.package_file_with_pip_requirements (close)" -> "[root] module.package_file_with_pip_requirements.aws_iam_role_policy_attachment.additional_one (expand)"
		"[root] module.package_file_with_pip_requirements (close)" -> "[root] module.package_file_with_pip_requirements.aws_iam_role_policy_attachment.async (expand)"
		"[root] module.package_file_with_pip_requirements (close)" -> "[root] module.package_file_with_pip_requirements.aws_iam_role_policy_attachment.dead_letter (expand)"
		"[root] module.package_file_with_pip_requirements (close)" -> "[root] module.package_file_with_pip_requirements.aws_iam_role_policy_attachment.logs (expand)"
		"[root] module.package_file_with_pip_requirements (close)" -> "[root] module.package_file_with_pip_requirements.aws_iam_role_policy_attachment.tracing (expand)"
		"[root] module.package_file_with_pip_requirements (close)" -> "[root] module.package_file_with_pip_requirements.aws_iam_role_policy_attachment.vpc (expand)"
		"[root] module.package_file_with_pip_requirements (close)" -> "[root] module.package_file_with_pip_requirements.aws_lambda_function_event_invoke_config.this (expand)"
		"[root] module.package_file_with_pip_requirements (close)" -> "[root] module.package_file_with_pip_requirements.aws_lambda_permission.current_version_triggers (expand)"
		"[root] module.package_file_with_pip_requirements (close)" -> "[root] module.package_file_with_pip_requirements.aws_lambda_permission.unqualified_alias_triggers (expand)"
		"[root] module.package_file_with_pip_requirements (close)" -> "[root] module.package_file_with_pip_requirements.aws_lambda_provisioned_concurrency_config.current_version (expand)"
		"[root] module.package_file_with_pip_requirements (close)" -> "[root] module.package_file_with_pip_requirements.output.lambda_cloudwatch_log_group_arn (expand)"
		"[root] module.package_file_with_pip_requirements (close)" -> "[root] module.package_file_with_pip_requirements.output.lambda_cloudwatch_log_group_name (expand)"
		"[root] module.package_file_with_pip_requirements (close)" -> "[root] module.package_file_with_pip_requirements.output.lambda_event_source_mapping_function_arn (expand)"
		"[root] module.package_file_with_pip_requirements (close)" -> "[root] module.package_file_with_pip_requirements.output.lambda_event_source_mapping_state (expand)"
		"[root] module.package_file_with_pip_requirements (close)" -> "[root] module.package_file_with_pip_requirements.output.lambda_event_source_mapping_state_transition_reason (expand)"
		"[root] module.package_file_with_pip_requirements (close)" -> "[root] module.package_file_with_pip_requirements.output.lambda_event_source_mapping_uuid (expand)"
		"[root] module.package_file_with_pip_requirements (close)" -> "[root] module.package_file_with_pip_requirements.output.lambda_function_arn (expand)"
		"[root] module.package_file_with_pip_requirements (close)" -> "[root] module.package_file_with_pip_requirements.output.lambda_function_invoke_arn (expand)"
		"[root] module.package_file_with_pip_requirements (close)" -> "[root] module.package_file_with_pip_requirements.output.lambda_function_kms_key_arn (expand)"
		"[root] module.package_file_with_pip_requirements (close)" -> "[root] module.package_file_with_pip_requirements.output.lambda_function_last_modified (expand)"
		"[root] module.package_file_with_pip_requirements (close)" -> "[root] module.package_file_with_pip_requirements.output.lambda_function_name (expand)"
		"[root] module.package_file_with_pip_requirements (close)" -> "[root] module.package_file_with_pip_requirements.output.lambda_function_qualified_arn (expand)"
		"[root] module.package_file_with_pip_requirements (close)" -> "[root] module.package_file_with_pip_requirements.output.lambda_function_source_code_hash (expand)"
		"[root] module.package_file_with_pip_requirements (close)" -> "[root] module.package_file_with_pip_requirements.output.lambda_function_source_code_size (expand)"
		"[root] module.package_file_with_pip_requirements (close)" -> "[root] module.package_file_with_pip_requirements.output.lambda_function_version (expand)"
		"[root] module.package_file_with_pip_requirements (close)" -> "[root] module.package_file_with_pip_requirements.output.lambda_layer_arn (expand)"
		"[root] module.package_file_with_pip_requirements (close)" -> "[root] module.package_file_with_pip_requirements.output.lambda_layer_created_date (expand)"
		"[root] module.package_file_with_pip_requirements (close)" -> "[root] module.package_file_with_pip_requirements.output.lambda_layer_layer_arn (expand)"
		"[root] module.package_file_with_pip_requirements (close)" -> "[root] module.package_file_with_pip_requirements.output.lambda_layer_source_code_size (expand)"
		"[root] module.package_file_with_pip_requirements (close)" -> "[root] module.package_file_with_pip_requirements.output.lambda_layer_version (expand)"
		"[root] module.package_file_with_pip_requirements (close)" -> "[root] module.package_file_with_pip_requirements.output.lambda_role_arn (expand)"
		"[root] module.package_file_with_pip_requirements (close)" -> "[root] module.package_file_with_pip_requirements.output.lambda_role_name (expand)"
		"[root] module.package_file_with_pip_requirements (close)" -> "[root] module.package_file_with_pip_requirements.output.lambda_role_unique_id (expand)"
		"[root] module.package_file_with_pip_requirements (close)" -> "[root] module.package_file_with_pip_requirements.output.local_filename (expand)"
		"[root] module.package_file_with_pip_requirements (close)" -> "[root] module.package_file_with_pip_requirements.output.s3_object (expand)"
		"[root] module.package_file_with_pip_requirements.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_file_with_pip_requirements.var.cloudwatch_logs_kms_key_id (expand)"
		"[root] module.package_file_with_pip_requirements.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_file_with_pip_requirements.var.cloudwatch_logs_retention_in_days (expand)"
		"[root] module.package_file_with_pip_requirements.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_file_with_pip_requirements.var.cloudwatch_logs_tags (expand)"
		"[root] module.package_file_with_pip_requirements.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_file_with_pip_requirements.var.create (expand)"
		"[root] module.package_file_with_pip_requirements.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_file_with_pip_requirements.var.create_function (expand)"
		"[root] module.package_file_with_pip_requirements.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_file_with_pip_requirements.var.create_layer (expand)"
		"[root] module.package_file_with_pip_requirements.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_file_with_pip_requirements.var.function_name (expand)"
		"[root] module.package_file_with_pip_requirements.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_file_with_pip_requirements.var.lambda_at_edge (expand)"
		"[root] module.package_file_with_pip_requirements.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_file_with_pip_requirements.var.tags (expand)"
		"[root] module.package_file_with_pip_requirements.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_file_with_pip_requirements.var.use_existing_cloudwatch_log_group (expand)"
		"[root] module.package_file_with_pip_requirements.aws_cloudwatch_log_group.lambda (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_file_with_pip_requirements.aws_iam_policy.additional_inline (expand)" -> "[root] module.package_file_with_pip_requirements.data.aws_iam_policy_document.additional_inline (expand)"
		"[root] module.package_file_with_pip_requirements.aws_iam_policy.additional_inline (expand)" -> "[root] module.package_file_with_pip_requirements.local.role_name (expand)"
		"[root] module.package_file_with_pip_requirements.aws_iam_policy.additional_inline (expand)" -> "[root] module.package_file_with_pip_requirements.var.policy_path (expand)"
		"[root] module.package_file_with_pip_requirements.aws_iam_policy.additional_inline (expand)" -> "[root] module.package_file_with_pip_requirements.var.tags (expand)"
		"[root] module.package_file_with_pip_requirements.aws_iam_policy.additional_json (expand)" -> "[root] module.package_file_with_pip_requirements.local.role_name (expand)"
		"[root] module.package_file_with_pip_requirements.aws_iam_policy.additional_json (expand)" -> "[root] module.package_file_with_pip_requirements.var.attach_policy_json (expand)"
		"[root] module.package_file_with_pip_requirements.aws_iam_policy.additional_json (expand)" -> "[root] module.package_file_with_pip_requirements.var.policy_json (expand)"
		"[root] module.package_file_with_pip_requirements.aws_iam_policy.additional_json (expand)" -> "[root] module.package_file_with_pip_requirements.var.policy_path (expand)"
		"[root] module.package_file_with_pip_requirements.aws_iam_policy.additional_json (expand)" -> "[root] module.package_file_with_pip_requirements.var.tags (expand)"
		"[root] module.package_file_with_pip_requirements.aws_iam_policy.additional_json (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_file_with_pip_requirements.aws_iam_policy.additional_jsons (expand)" -> "[root] module.package_file_with_pip_requirements.local.role_name (expand)"
		"[root] module.package_file_with_pip_requirements.aws_iam_policy.additional_jsons (expand)" -> "[root] module.package_file_with_pip_requirements.var.attach_policy_jsons (expand)"
		"[root] module.package_file_with_pip_requirements.aws_iam_policy.additional_jsons (expand)" -> "[root] module.package_file_with_pip_requirements.var.number_of_policy_jsons (expand)"
		"[root] module.package_file_with_pip_requirements.aws_iam_policy.additional_jsons (expand)" -> "[root] module.package_file_with_pip_requirements.var.policy_jsons (expand)"
		"[root] module.package_file_with_pip_requirements.aws_iam_policy.additional_jsons (expand)" -> "[root] module.package_file_with_pip_requirements.var.policy_path (expand)"
		"[root] module.package_file_with_pip_requirements.aws_iam_policy.additional_jsons (expand)" -> "[root] module.package_file_with_pip_requirements.var.tags (expand)"
		"[root] module.package_file_with_pip_requirements.aws_iam_policy.additional_jsons (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_file_with_pip_requirements.aws_iam_policy.async (expand)" -> "[root] module.package_file_with_pip_requirements.data.aws_iam_policy_document.async (expand)"
		"[root] module.package_file_with_pip_requirements.aws_iam_policy.async (expand)" -> "[root] module.package_file_with_pip_requirements.local.role_name (expand)"
		"[root] module.package_file_with_pip_requirements.aws_iam_policy.async (expand)" -> "[root] module.package_file_with_pip_requirements.var.policy_path (expand)"
		"[root] module.package_file_with_pip_requirements.aws_iam_policy.async (expand)" -> "[root] module.package_file_with_pip_requirements.var.tags (expand)"
		"[root] module.package_file_with_pip_requirements.aws_iam_policy.dead_letter (expand)" -> "[root] module.package_file_with_pip_requirements.data.aws_iam_policy_document.dead_letter (expand)"
		"[root] module.package_file_with_pip_requirements.aws_iam_policy.dead_letter (expand)" -> "[root] module.package_file_with_pip_requirements.local.role_name (expand)"
		"[root] module.package_file_with_pip_requirements.aws_iam_policy.dead_letter (expand)" -> "[root] module.package_file_with_pip_requirements.var.policy_path (expand)"
		"[root] module.package_file_with_pip_requirements.aws_iam_policy.dead_letter (expand)" -> "[root] module.package_file_with_pip_requirements.var.tags (expand)"
		"[root] module.package_file_with_pip_requirements.aws_iam_policy.logs (expand)" -> "[root] module.package_file_with_pip_requirements.data.aws_iam_policy_document.logs (expand)"
		"[root] module.package_file_with_pip_requirements.aws_iam_policy.logs (expand)" -> "[root] module.package_file_with_pip_requirements.local.role_name (expand)"
		"[root] module.package_file_with_pip_requirements.aws_iam_policy.logs (expand)" -> "[root] module.package_file_with_pip_requirements.var.policy_path (expand)"
		"[root] module.package_file_with_pip_requirements.aws_iam_policy.tracing (expand)" -> "[root] module.package_file_with_pip_requirements.data.aws_iam_policy.tracing (expand)"
		"[root] module.package_file_with_pip_requirements.aws_iam_policy.tracing (expand)" -> "[root] module.package_file_with_pip_requirements.local.role_name (expand)"
		"[root] module.package_file_with_pip_requirements.aws_iam_policy.tracing (expand)" -> "[root] module.package_file_with_pip_requirements.var.policy_path (expand)"
		"[root] module.package_file_with_pip_requirements.aws_iam_policy.tracing (expand)" -> "[root] module.package_file_with_pip_requirements.var.tags (expand)"
		"[root] module.package_file_with_pip_requirements.aws_iam_policy.vpc (expand)" -> "[root] module.package_file_with_pip_requirements.data.aws_iam_policy.vpc (expand)"
		"[root] module.package_file_with_pip_requirements.aws_iam_policy.vpc (expand)" -> "[root] module.package_file_with_pip_requirements.local.role_name (expand)"
		"[root] module.package_file_with_pip_requirements.aws_iam_policy.vpc (expand)" -> "[root] module.package_file_with_pip_requirements.var.policy_path (expand)"
		"[root] module.package_file_with_pip_requirements.aws_iam_policy.vpc (expand)" -> "[root] module.package_file_with_pip_requirements.var.tags (expand)"
		"[root] module.package_file_with_pip_requirements.aws_iam_role.lambda (expand)" -> "[root] module.package_file_with_pip_requirements.data.aws_iam_policy_document.assume_role (expand)"
		"[root] module.package_file_with_pip_requirements.aws_iam_role.lambda (expand)" -> "[root] module.package_file_with_pip_requirements.local.role_name (expand)"
		"[root] module.package_file_with_pip_requirements.aws_iam_role.lambda (expand)" -> "[root] module.package_file_with_pip_requirements.var.role_description (expand)"
		"[root] module.package_file_with_pip_requirements.aws_iam_role.lambda (expand)" -> "[root] module.package_file_with_pip_requirements.var.role_force_detach_policies (expand)"
		"[root] module.package_file_with_pip_requirements.aws_iam_role.lambda (expand)" -> "[root] module.package_file_with_pip_requirements.var.role_path (expand)"
		"[root] module.package_file_with_pip_requirements.aws_iam_role.lambda (expand)" -> "[root] module.package_file_with_pip_requirements.var.role_permissions_boundary (expand)"
		"[root] module.package_file_with_pip_requirements.aws_iam_role.lambda (expand)" -> "[root] module.package_file_with_pip_requirements.var.role_tags (expand)"
		"[root] module.package_file_with_pip_requirements.aws_iam_role.lambda (expand)" -> "[root] module.package_file_with_pip_requirements.var.tags (expand)"
		"[root] module.package_file_with_pip_requirements.aws_iam_role_policy_attachment.additional_inline (expand)" -> "[root] module.package_file_with_pip_requirements.aws_iam_policy.additional_inline (expand)"
		"[root] module.package_file_with_pip_requirements.aws_iam_role_policy_attachment.additional_inline (expand)" -> "[root] module.package_file_with_pip_requirements.aws_iam_role.lambda (expand)"
		"[root] module.package_file_with_pip_requirements.aws_iam_role_policy_attachment.additional_json (expand)" -> "[root] module.package_file_with_pip_requirements.aws_iam_policy.additional_json (expand)"
		"[root] module.package_file_with_pip_requirements.aws_iam_role_policy_attachment.additional_json (expand)" -> "[root] module.package_file_with_pip_requirements.aws_iam_role.lambda (expand)"
		"[root] module.package_file_with_pip_requirements.aws_iam_role_policy_attachment.additional_jsons (expand)" -> "[root] module.package_file_with_pip_requirements.aws_iam_policy.additional_jsons (expand)"
		"[root] module.package_file_with_pip_requirements.aws_iam_role_policy_attachment.additional_jsons (expand)" -> "[root] module.package_file_with_pip_requirements.aws_iam_role.lambda (expand)"
		"[root] module.package_file_with_pip_requirements.aws_iam_role_policy_attachment.additional_many (expand)" -> "[root] module.package_file_with_pip_requirements.aws_iam_role.lambda (expand)"
		"[root] module.package_file_with_pip_requirements.aws_iam_role_policy_attachment.additional_many (expand)" -> "[root] module.package_file_with_pip_requirements.var.attach_policies (expand)"
		"[root] module.package_file_with_pip_requirements.aws_iam_role_policy_attachment.additional_many (expand)" -> "[root] module.package_file_with_pip_requirements.var.number_of_policies (expand)"
		"[root] module.package_file_with_pip_requirements.aws_iam_role_policy_attachment.additional_many (expand)" -> "[root] module.package_file_with_pip_requirements.var.policies (expand)"
		"[root] module.package_file_with_pip_requirements.aws_iam_role_policy_attachment.additional_one (expand)" -> "[root] module.package_file_with_pip_requirements.aws_iam_role.lambda (expand)"
		"[root] module.package_file_with_pip_requirements.aws_iam_role_policy_attachment.additional_one (expand)" -> "[root] module.package_file_with_pip_requirements.var.attach_policy (expand)"
		"[root] module.package_file_with_pip_requirements.aws_iam_role_policy_attachment.additional_one (expand)" -> "[root] module.package_file_with_pip_requirements.var.policy (expand)"
		"[root] module.package_file_with_pip_requirements.aws_iam_role_policy_attachment.async (expand)" -> "[root] module.package_file_with_pip_requirements.aws_iam_policy.async (expand)"
		"[root] module.package_file_with_pip_requirements.aws_iam_role_policy_attachment.async (expand)" -> "[root] module.package_file_with_pip_requirements.aws_iam_role.lambda (expand)"
		"[root] module.package_file_with_pip_requirements.aws_iam_role_policy_attachment.dead_letter (expand)" -> "[root] module.package_file_with_pip_requirements.aws_iam_policy.dead_letter (expand)"
		"[root] module.package_file_with_pip_requirements.aws_iam_role_policy_attachment.dead_letter (expand)" -> "[root] module.package_file_with_pip_requirements.aws_iam_role.lambda (expand)"
		"[root] module.package_file_with_pip_requirements.aws_iam_role_policy_attachment.logs (expand)" -> "[root] module.package_file_with_pip_requirements.aws_iam_policy.logs (expand)"
		"[root] module.package_file_with_pip_requirements.aws_iam_role_policy_attachment.logs (expand)" -> "[root] module.package_file_with_pip_requirements.aws_iam_role.lambda (expand)"
		"[root] module.package_file_with_pip_requirements.aws_iam_role_policy_attachment.tracing (expand)" -> "[root] module.package_file_with_pip_requirements.aws_iam_policy.tracing (expand)"
		"[root] module.package_file_with_pip_requirements.aws_iam_role_policy_attachment.tracing (expand)" -> "[root] module.package_file_with_pip_requirements.aws_iam_role.lambda (expand)"
		"[root] module.package_file_with_pip_requirements.aws_iam_role_policy_attachment.vpc (expand)" -> "[root] module.package_file_with_pip_requirements.aws_iam_policy.vpc (expand)"
		"[root] module.package_file_with_pip_requirements.aws_iam_role_policy_attachment.vpc (expand)" -> "[root] module.package_file_with_pip_requirements.aws_iam_role.lambda (expand)"
		"[root] module.package_file_with_pip_requirements.aws_lambda_event_source_mapping.this (expand)" -> "[root] module.package_file_with_pip_requirements.aws_lambda_function.this (expand)"
		"[root] module.package_file_with_pip_requirements.aws_lambda_event_source_mapping.this (expand)" -> "[root] module.package_file_with_pip_requirements.var.create_unqualified_alias_allowed_triggers (expand)"
		"[root] module.package_file_with_pip_requirements.aws_lambda_event_source_mapping.this (expand)" -> "[root] module.package_file_with_pip_requirements.var.event_source_mapping (expand)"
		"[root] module.package_file_with_pip_requirements.aws_lambda_function.this (expand)" -> "[root] module.package_file_with_pip_requirements.aws_cloudwatch_log_group.lambda (expand)"
		"[root] module.package_file_with_pip_requirements.aws_lambda_function.this (expand)" -> "[root] module.package_file_with_pip_requirements.aws_iam_role.lambda (expand)"
		"[root] module.package_file_with_pip_requirements.aws_lambda_function.this (expand)" -> "[root] module.package_file_with_pip_requirements.local.filename (expand)"
		"[root] module.package_file_with_pip_requirements.aws_lambda_function.this (expand)" -> "[root] module.package_file_with_pip_requirements.local.s3_bucket (expand)"
		"[root] module.package_file_with_pip_requirements.aws_lambda_function.this (expand)" -> "[root] module.package_file_with_pip_requirements.local.s3_object_version (expand)"
		"[root] module.package_file_with_pip_requirements.aws_lambda_function.this (expand)" -> "[root] module.package_file_with_pip_requirements.local.was_missing (expand)"
		"[root] module.package_file_with_pip_requirements.aws_lambda_function.this (expand)" -> "[root] module.package_file_with_pip_requirements.var.architectures (expand)"
		"[root] module.package_file_with_pip_requirements.aws_lambda_function.this (expand)" -> "[root] module.package_file_with_pip_requirements.var.dead_letter_target_arn (expand)"
		"[root] module.package_file_with_pip_requirements.aws_lambda_function.this (expand)" -> "[root] module.package_file_with_pip_requirements.var.description (expand)"
		"[root] module.package_file_with_pip_requirements.aws_lambda_function.this (expand)" -> "[root] module.package_file_with_pip_requirements.var.environment_variables (expand)"
		"[root] module.package_file_with_pip_requirements.aws_lambda_function.this (expand)" -> "[root] module.package_file_with_pip_requirements.var.file_system_arn (expand)"
		"[root] module.package_file_with_pip_requirements.aws_lambda_function.this (expand)" -> "[root] module.package_file_with_pip_requirements.var.file_system_local_mount_path (expand)"
		"[root] module.package_file_with_pip_requirements.aws_lambda_function.this (expand)" -> "[root] module.package_file_with_pip_requirements.var.handler (expand)"
		"[root] module.package_file_with_pip_requirements.aws_lambda_function.this (expand)" -> "[root] module.package_file_with_pip_requirements.var.ignore_source_code_hash (expand)"
		"[root] module.package_file_with_pip_requirements.aws_lambda_function.this (expand)" -> "[root] module.package_file_with_pip_requirements.var.image_config_command (expand)"
		"[root] module.package_file_with_pip_requirements.aws_lambda_function.this (expand)" -> "[root] module.package_file_with_pip_requirements.var.image_config_entry_point (expand)"
		"[root] module.package_file_with_pip_requirements.aws_lambda_function.this (expand)" -> "[root] module.package_file_with_pip_requirements.var.image_config_working_directory (expand)"
		"[root] module.package_file_with_pip_requirements.aws_lambda_function.this (expand)" -> "[root] module.package_file_with_pip_requirements.var.image_uri (expand)"
		"[root] module.package_file_with_pip_requirements.aws_lambda_function.this (expand)" -> "[root] module.package_file_with_pip_requirements.var.kms_key_arn (expand)"
		"[root] module.package_file_with_pip_requirements.aws_lambda_function.this (expand)" -> "[root] module.package_file_with_pip_requirements.var.lambda_role (expand)"
		"[root] module.package_file_with_pip_requirements.aws_lambda_function.this (expand)" -> "[root] module.package_file_with_pip_requirements.var.layers (expand)"
		"[root] module.package_file_with_pip_requirements.aws_lambda_function.this (expand)" -> "[root] module.package_file_with_pip_requirements.var.memory_size (expand)"
		"[root] module.package_file_with_pip_requirements.aws_lambda_function.this (expand)" -> "[root] module.package_file_with_pip_requirements.var.package_type (expand)"
		"[root] module.package_file_with_pip_requirements.aws_lambda_function.this (expand)" -> "[root] module.package_file_with_pip_requirements.var.publish (expand)"
		"[root] module.package_file_with_pip_requirements.aws_lambda_function.this (expand)" -> "[root] module.package_file_with_pip_requirements.var.reserved_concurrent_executions (expand)"
		"[root] module.package_file_with_pip_requirements.aws_lambda_function.this (expand)" -> "[root] module.package_file_with_pip_requirements.var.timeout (expand)"
		"[root] module.package_file_with_pip_requirements.aws_lambda_function.this (expand)" -> "[root] module.package_file_with_pip_requirements.var.tracing_mode (expand)"
		"[root] module.package_file_with_pip_requirements.aws_lambda_function.this (expand)" -> "[root] module.package_file_with_pip_requirements.var.vpc_security_group_ids (expand)"
		"[root] module.package_file_with_pip_requirements.aws_lambda_function.this (expand)" -> "[root] module.package_file_with_pip_requirements.var.vpc_subnet_ids (expand)"
		"[root] module.package_file_with_pip_requirements.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.package_file_with_pip_requirements.aws_lambda_function.this (expand)"
		"[root] module.package_file_with_pip_requirements.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.package_file_with_pip_requirements.local.qualifiers (expand)"
		"[root] module.package_file_with_pip_requirements.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.package_file_with_pip_requirements.var.create_async_event_config (expand)"
		"[root] module.package_file_with_pip_requirements.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.package_file_with_pip_requirements.var.destination_on_failure (expand)"
		"[root] module.package_file_with_pip_requirements.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.package_file_with_pip_requirements.var.destination_on_success (expand)"
		"[root] module.package_file_with_pip_requirements.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.package_file_with_pip_requirements.var.maximum_event_age_in_seconds (expand)"
		"[root] module.package_file_with_pip_requirements.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.package_file_with_pip_requirements.var.maximum_retry_attempts (expand)"
		"[root] module.package_file_with_pip_requirements.aws_lambda_layer_version.this (expand)" -> "[root] module.package_file_with_pip_requirements.local.filename (expand)"
		"[root] module.package_file_with_pip_requirements.aws_lambda_layer_version.this (expand)" -> "[root] module.package_file_with_pip_requirements.local.s3_bucket (expand)"
		"[root] module.package_file_with_pip_requirements.aws_lambda_layer_version.this (expand)" -> "[root] module.package_file_with_pip_requirements.local.s3_object_version (expand)"
		"[root] module.package_file_with_pip_requirements.aws_lambda_layer_version.this (expand)" -> "[root] module.package_file_with_pip_requirements.local.was_missing (expand)"
		"[root] module.package_file_with_pip_requirements.aws_lambda_layer_version.this (expand)" -> "[root] module.package_file_with_pip_requirements.var.compatible_architectures (expand)"
		"[root] module.package_file_with_pip_requirements.aws_lambda_layer_version.this (expand)" -> "[root] module.package_file_with_pip_requirements.var.compatible_runtimes (expand)"
		"[root] module.package_file_with_pip_requirements.aws_lambda_layer_version.this (expand)" -> "[root] module.package_file_with_pip_requirements.var.create_layer (expand)"
		"[root] module.package_file_with_pip_requirements.aws_lambda_layer_version.this (expand)" -> "[root] module.package_file_with_pip_requirements.var.description (expand)"
		"[root] module.package_file_with_pip_requirements.aws_lambda_layer_version.this (expand)" -> "[root] module.package_file_with_pip_requirements.var.ignore_source_code_hash (expand)"
		"[root] module.package_file_with_pip_requirements.aws_lambda_layer_version.this (expand)" -> "[root] module.package_file_with_pip_requirements.var.layer_name (expand)"
		"[root] module.package_file_with_pip_requirements.aws_lambda_layer_version.this (expand)" -> "[root] module.package_file_with_pip_requirements.var.license_info (expand)"
		"[root] module.package_file_with_pip_requirements.aws_lambda_permission.current_version_triggers (expand)" -> "[root] module.package_file_with_pip_requirements.aws_lambda_function.this (expand)"
		"[root] module.package_file_with_pip_requirements.aws_lambda_permission.current_version_triggers (expand)" -> "[root] module.package_file_with_pip_requirements.var.allowed_triggers (expand)"
		"[root] module.package_file_with_pip_requirements.aws_lambda_permission.current_version_triggers (expand)" -> "[root] module.package_file_with_pip_requirements.var.create_current_version_allowed_triggers (expand)"
		"[root] module.package_file_with_pip_requirements.aws_lambda_permission.unqualified_alias_triggers (expand)" -> "[root] module.package_file_with_pip_requirements.aws_lambda_function.this (expand)"
		"[root] module.package_file_with_pip_requirements.aws_lambda_permission.unqualified_alias_triggers (expand)" -> "[root] module.package_file_with_pip_requirements.var.allowed_triggers (expand)"
		"[root] module.package_file_with_pip_requirements.aws_lambda_permission.unqualified_alias_triggers (expand)" -> "[root] module.package_file_with_pip_requirements.var.create_unqualified_alias_allowed_triggers (expand)"
		"[root] module.package_file_with_pip_requirements.aws_lambda_provisioned_concurrency_config.current_version (expand)" -> "[root] module.package_file_with_pip_requirements.aws_lambda_function.this (expand)"
		"[root] module.package_file_with_pip_requirements.aws_lambda_provisioned_concurrency_config.current_version (expand)" -> "[root] module.package_file_with_pip_requirements.var.provisioned_concurrent_executions (expand)"
		"[root] module.package_file_with_pip_requirements.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.package_file_with_pip_requirements.local.s3_key (expand)"
		"[root] module.package_file_with_pip_requirements.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.package_file_with_pip_requirements.null_resource.archive (expand)"
		"[root] module.package_file_with_pip_requirements.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.package_file_with_pip_requirements.var.s3_acl (expand)"
		"[root] module.package_file_with_pip_requirements.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.package_file_with_pip_requirements.var.s3_bucket (expand)"
		"[root] module.package_file_with_pip_requirements.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.package_file_with_pip_requirements.var.s3_object_storage_class (expand)"
		"[root] module.package_file_with_pip_requirements.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.package_file_with_pip_requirements.var.s3_object_tags (expand)"
		"[root] module.package_file_with_pip_requirements.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.package_file_with_pip_requirements.var.s3_server_side_encryption (expand)"
		"[root] module.package_file_with_pip_requirements.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.package_file_with_pip_requirements.var.tags (expand)"
		"[root] module.package_file_with_pip_requirements.aws_s3_bucket_object.lambda_package (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_file_with_pip_requirements.data.aws_arn.log_group_arn (expand)" -> "[root] module.package_file_with_pip_requirements.local.create_role (expand)"
		"[root] module.package_file_with_pip_requirements.data.aws_arn.log_group_arn (expand)" -> "[root] module.package_file_with_pip_requirements.local.log_group_arn_regional (expand)"
		"[root] module.package_file_with_pip_requirements.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_file_with_pip_requirements.var.create (expand)"
		"[root] module.package_file_with_pip_requirements.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_file_with_pip_requirements.var.create_function (expand)"
		"[root] module.package_file_with_pip_requirements.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_file_with_pip_requirements.var.create_layer (expand)"
		"[root] module.package_file_with_pip_requirements.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_file_with_pip_requirements.var.function_name (expand)"
		"[root] module.package_file_with_pip_requirements.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_file_with_pip_requirements.var.lambda_at_edge (expand)"
		"[root] module.package_file_with_pip_requirements.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_file_with_pip_requirements.var.use_existing_cloudwatch_log_group (expand)"
		"[root] module.package_file_with_pip_requirements.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_file_with_pip_requirements.data.aws_iam_policy.tracing (expand)" -> "[root] module.package_file_with_pip_requirements.data.aws_partition.current (expand)"
		"[root] module.package_file_with_pip_requirements.data.aws_iam_policy.tracing (expand)" -> "[root] module.package_file_with_pip_requirements.local.create_role (expand)"
		"[root] module.package_file_with_pip_requirements.data.aws_iam_policy.tracing (expand)" -> "[root] module.package_file_with_pip_requirements.var.attach_tracing_policy (expand)"
		"[root] module.package_file_with_pip_requirements.data.aws_iam_policy.vpc (expand)" -> "[root] module.package_file_with_pip_requirements.data.aws_partition.current (expand)"
		"[root] module.package_file_with_pip_requirements.data.aws_iam_policy.vpc (expand)" -> "[root] module.package_file_with_pip_requirements.local.create_role (expand)"
		"[root] module.package_file_with_pip_requirements.data.aws_iam_policy.vpc (expand)" -> "[root] module.package_file_with_pip_requirements.var.attach_network_policy (expand)"
		"[root] module.package_file_with_pip_requirements.data.aws_iam_policy_document.additional_inline (expand)" -> "[root] module.package_file_with_pip_requirements.local.create_role (expand)"
		"[root] module.package_file_with_pip_requirements.data.aws_iam_policy_document.additional_inline (expand)" -> "[root] module.package_file_with_pip_requirements.var.attach_policy_statements (expand)"
		"[root] module.package_file_with_pip_requirements.data.aws_iam_policy_document.additional_inline (expand)" -> "[root] module.package_file_with_pip_requirements.var.policy_statements (expand)"
		"[root] module.package_file_with_pip_requirements.data.aws_iam_policy_document.additional_inline (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_file_with_pip_requirements.data.aws_iam_policy_document.assume_role (expand)" -> "[root] module.package_file_with_pip_requirements.local.create_role (expand)"
		"[root] module.package_file_with_pip_requirements.data.aws_iam_policy_document.assume_role (expand)" -> "[root] module.package_file_with_pip_requirements.local.trusted_entities_principals (expand)"
		"[root] module.package_file_with_pip_requirements.data.aws_iam_policy_document.assume_role (expand)" -> "[root] module.package_file_with_pip_requirements.local.trusted_entities_services (expand)"
		"[root] module.package_file_with_pip_requirements.data.aws_iam_policy_document.assume_role (expand)" -> "[root] module.package_file_with_pip_requirements.var.assume_role_policy_statements (expand)"
		"[root] module.package_file_with_pip_requirements.data.aws_iam_policy_document.assume_role (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_file_with_pip_requirements.data.aws_iam_policy_document.async (expand)" -> "[root] module.package_file_with_pip_requirements.local.create_role (expand)"
		"[root] module.package_file_with_pip_requirements.data.aws_iam_policy_document.async (expand)" -> "[root] module.package_file_with_pip_requirements.var.attach_async_event_policy (expand)"
		"[root] module.package_file_with_pip_requirements.data.aws_iam_policy_document.async (expand)" -> "[root] module.package_file_with_pip_requirements.var.destination_on_failure (expand)"
		"[root] module.package_file_with_pip_requirements.data.aws_iam_policy_document.async (expand)" -> "[root] module.package_file_with_pip_requirements.var.destination_on_success (expand)"
		"[root] module.package_file_with_pip_requirements.data.aws_iam_policy_document.async (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_file_with_pip_requirements.data.aws_iam_policy_document.dead_letter (expand)" -> "[root] module.package_file_with_pip_requirements.local.create_role (expand)"
		"[root] module.package_file_with_pip_requirements.data.aws_iam_policy_document.dead_letter (expand)" -> "[root] module.package_file_with_pip_requirements.var.attach_dead_letter_policy (expand)"
		"[root] module.package_file_with_pip_requirements.data.aws_iam_policy_document.dead_letter (expand)" -> "[root] module.package_file_with_pip_requirements.var.dead_letter_target_arn (expand)"
		"[root] module.package_file_with_pip_requirements.data.aws_iam_policy_document.dead_letter (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_file_with_pip_requirements.data.aws_iam_policy_document.logs (expand)" -> "[root] module.package_file_with_pip_requirements.local.log_group_arn (expand)"
		"[root] module.package_file_with_pip_requirements.data.aws_iam_policy_document.logs (expand)" -> "[root] module.package_file_with_pip_requirements.var.attach_cloudwatch_logs_policy (expand)"
		"[root] module.package_file_with_pip_requirements.data.aws_partition.current (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.data.aws_partition.current (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_file_with_pip_requirements.data.external.archive_prepare (expand)" -> "[root] module.package_file_with_pip_requirements.local.python (expand)"
		"[root] module.package_file_with_pip_requirements.data.external.archive_prepare (expand)" -> "[root] module.package_file_with_pip_requirements.var.artifacts_dir (expand)"
		"[root] module.package_file_with_pip_requirements.data.external.archive_prepare (expand)" -> "[root] module.package_file_with_pip_requirements.var.build_in_docker (expand)"
		"[root] module.package_file_with_pip_requirements.data.external.archive_prepare (expand)" -> "[root] module.package_file_with_pip_requirements.var.create (expand)"
		"[root] module.package_file_with_pip_requirements.data.external.archive_prepare (expand)" -> "[root] module.package_file_with_pip_requirements.var.create_package (expand)"
		"[root] module.package_file_with_pip_requirements.data.external.archive_prepare (expand)" -> "[root] module.package_file_with_pip_requirements.var.docker_build_root (expand)"
		"[root] module.package_file_with_pip_requirements.data.external.archive_prepare (expand)" -> "[root] module.package_file_with_pip_requirements.var.docker_file (expand)"
		"[root] module.package_file_with_pip_requirements.data.external.archive_prepare (expand)" -> "[root] module.package_file_with_pip_requirements.var.docker_image (expand)"
		"[root] module.package_file_with_pip_requirements.data.external.archive_prepare (expand)" -> "[root] module.package_file_with_pip_requirements.var.docker_pip_cache (expand)"
		"[root] module.package_file_with_pip_requirements.data.external.archive_prepare (expand)" -> "[root] module.package_file_with_pip_requirements.var.docker_with_ssh_agent (expand)"
		"[root] module.package_file_with_pip_requirements.data.external.archive_prepare (expand)" -> "[root] module.package_file_with_pip_requirements.var.hash_extra (expand)"
		"[root] module.package_file_with_pip_requirements.data.external.archive_prepare (expand)" -> "[root] module.package_file_with_pip_requirements.var.recreate_missing_package (expand)"
		"[root] module.package_file_with_pip_requirements.data.external.archive_prepare (expand)" -> "[root] module.package_file_with_pip_requirements.var.runtime (expand)"
		"[root] module.package_file_with_pip_requirements.data.external.archive_prepare (expand)" -> "[root] module.package_file_with_pip_requirements.var.source_path (expand)"
		"[root] module.package_file_with_pip_requirements.data.external.archive_prepare (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/external\"]"
		"[root] module.package_file_with_pip_requirements.local.archive_filename (expand)" -> "[root] module.package_file_with_pip_requirements.data.external.archive_prepare (expand)"
		"[root] module.package_file_with_pip_requirements.local.archive_was_missing (expand)" -> "[root] module.package_file_with_pip_requirements.data.external.archive_prepare (expand)"
		"[root] module.package_file_with_pip_requirements.local.create_role (expand)" -> "[root] module.package_file_with_pip_requirements.var.create (expand)"
		"[root] module.package_file_with_pip_requirements.local.create_role (expand)" -> "[root] module.package_file_with_pip_requirements.var.create_function (expand)"
		"[root] module.package_file_with_pip_requirements.local.create_role (expand)" -> "[root] module.package_file_with_pip_requirements.var.create_layer (expand)"
		"[root] module.package_file_with_pip_requirements.local.create_role (expand)" -> "[root] module.package_file_with_pip_requirements.var.create_role (expand)"
		"[root] module.package_file_with_pip_requirements.local.filename (expand)" -> "[root] module.package_file_with_pip_requirements.local.archive_filename (expand)"
		"[root] module.package_file_with_pip_requirements.local.filename (expand)" -> "[root] module.package_file_with_pip_requirements.var.local_existing_package (expand)"
		"[root] module.package_file_with_pip_requirements.local.filename (expand)" -> "[root] module.package_file_with_pip_requirements.var.store_on_s3 (expand)"
		"[root] module.package_file_with_pip_requirements.local.log_group_arn (expand)" -> "[root] module.package_file_with_pip_requirements.data.aws_arn.log_group_arn (expand)"
		"[root] module.package_file_with_pip_requirements.local.log_group_arn_regional (expand)" -> "[root] module.package_file_with_pip_requirements.aws_cloudwatch_log_group.lambda (expand)"
		"[root] module.package_file_with_pip_requirements.local.log_group_arn_regional (expand)" -> "[root] module.package_file_with_pip_requirements.data.aws_cloudwatch_log_group.lambda (expand)"
		"[root] module.package_file_with_pip_requirements.local.log_group_name (expand)" -> "[root] module.package_file_with_pip_requirements.aws_cloudwatch_log_group.lambda (expand)"
		"[root] module.package_file_with_pip_requirements.local.log_group_name (expand)" -> "[root] module.package_file_with_pip_requirements.data.aws_cloudwatch_log_group.lambda (expand)"
		"[root] module.package_file_with_pip_requirements.local.python (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.local.qualifiers (expand)" -> "[root] module.package_file_with_pip_requirements.var.create_current_version_async_event_config (expand)"
		"[root] module.package_file_with_pip_requirements.local.qualifiers (expand)" -> "[root] module.package_file_with_pip_requirements.var.create_unqualified_alias_async_event_config (expand)"
		"[root] module.package_file_with_pip_requirements.local.role_name (expand)" -> "[root] module.package_file_with_pip_requirements.local.create_role (expand)"
		"[root] module.package_file_with_pip_requirements.local.role_name (expand)" -> "[root] module.package_file_with_pip_requirements.var.function_name (expand)"
		"[root] module.package_file_with_pip_requirements.local.role_name (expand)" -> "[root] module.package_file_with_pip_requirements.var.role_name (expand)"
		"[root] module.package_file_with_pip_requirements.local.s3_bucket (expand)" -> "[root] module.package_file_with_pip_requirements.var.s3_bucket (expand)"
		"[root] module.package_file_with_pip_requirements.local.s3_bucket (expand)" -> "[root] module.package_file_with_pip_requirements.var.s3_existing_package (expand)"
		"[root] module.package_file_with_pip_requirements.local.s3_bucket (expand)" -> "[root] module.package_file_with_pip_requirements.var.store_on_s3 (expand)"
		"[root] module.package_file_with_pip_requirements.local.s3_key (expand)" -> "[root] module.package_file_with_pip_requirements.local.archive_filename (expand)"
		"[root] module.package_file_with_pip_requirements.local.s3_key (expand)" -> "[root] module.package_file_with_pip_requirements.var.s3_existing_package (expand)"
		"[root] module.package_file_with_pip_requirements.local.s3_key (expand)" -> "[root] module.package_file_with_pip_requirements.var.s3_prefix (expand)"
		"[root] module.package_file_with_pip_requirements.local.s3_key (expand)" -> "[root] module.package_file_with_pip_requirements.var.store_on_s3 (expand)"
		"[root] module.package_file_with_pip_requirements.local.s3_object_version (expand)" -> "[root] module.package_file_with_pip_requirements.aws_s3_bucket_object.lambda_package (expand)"
		"[root] module.package_file_with_pip_requirements.local.trusted_entities_principals (expand)" -> "[root] module.package_file_with_pip_requirements.var.trusted_entities (expand)"
		"[root] module.package_file_with_pip_requirements.local.trusted_entities_services (expand)" -> "[root] module.package_file_with_pip_requirements.var.lambda_at_edge (expand)"
		"[root] module.package_file_with_pip_requirements.local.trusted_entities_services (expand)" -> "[root] module.package_file_with_pip_requirements.var.trusted_entities (expand)"
		"[root] module.package_file_with_pip_requirements.local.was_missing (expand)" -> "[root] module.package_file_with_pip_requirements.local.archive_was_missing (expand)"
		"[root] module.package_file_with_pip_requirements.local.was_missing (expand)" -> "[root] module.package_file_with_pip_requirements.var.local_existing_package (expand)"
		"[root] module.package_file_with_pip_requirements.local_file.archive_plan (expand)" -> "[root] module.package_file_with_pip_requirements.data.external.archive_prepare (expand)"
		"[root] module.package_file_with_pip_requirements.local_file.archive_plan (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/local\"]"
		"[root] module.package_file_with_pip_requirements.null_resource.archive (expand)" -> "[root] module.package_file_with_pip_requirements.local_file.archive_plan (expand)"
		"[root] module.package_file_with_pip_requirements.null_resource.archive (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/null\"]"
		"[root] module.package_file_with_pip_requirements.null_resource.archive (expand)" -> "[root] provisioner.local-exec"
		"[root] module.package_file_with_pip_requirements.output.lambda_cloudwatch_log_group_arn (expand)" -> "[root] module.package_file_with_pip_requirements.local.log_group_arn (expand)"
		"[root] module.package_file_with_pip_requirements.output.lambda_cloudwatch_log_group_name (expand)" -> "[root] module.package_file_with_pip_requirements.local.log_group_name (expand)"
		"[root] module.package_file_with_pip_requirements.output.lambda_event_source_mapping_function_arn (expand)" -> "[root] module.package_file_with_pip_requirements.aws_lambda_event_source_mapping.this (expand)"
		"[root] module.package_file_with_pip_requirements.output.lambda_event_source_mapping_state (expand)" -> "[root] module.package_file_with_pip_requirements.aws_lambda_event_source_mapping.this (expand)"
		"[root] module.package_file_with_pip_requirements.output.lambda_event_source_mapping_state_transition_reason (expand)" -> "[root] module.package_file_with_pip_requirements.aws_lambda_event_source_mapping.this (expand)"
		"[root] module.package_file_with_pip_requirements.output.lambda_event_source_mapping_uuid (expand)" -> "[root] module.package_file_with_pip_requirements.aws_lambda_event_source_mapping.this (expand)"
		"[root] module.package_file_with_pip_requirements.output.lambda_function_arn (expand)" -> "[root] module.package_file_with_pip_requirements.aws_lambda_function.this (expand)"
		"[root] module.package_file_with_pip_requirements.output.lambda_function_invoke_arn (expand)" -> "[root] module.package_file_with_pip_requirements.aws_lambda_function.this (expand)"
		"[root] module.package_file_with_pip_requirements.output.lambda_function_kms_key_arn (expand)" -> "[root] module.package_file_with_pip_requirements.aws_lambda_function.this (expand)"
		"[root] module.package_file_with_pip_requirements.output.lambda_function_last_modified (expand)" -> "[root] module.package_file_with_pip_requirements.aws_lambda_function.this (expand)"
		"[root] module.package_file_with_pip_requirements.output.lambda_function_name (expand)" -> "[root] module.package_file_with_pip_requirements.aws_lambda_function.this (expand)"
		"[root] module.package_file_with_pip_requirements.output.lambda_function_qualified_arn (expand)" -> "[root] module.package_file_with_pip_requirements.aws_lambda_function.this (expand)"
		"[root] module.package_file_with_pip_requirements.output.lambda_function_source_code_hash (expand)" -> "[root] module.package_file_with_pip_requirements.aws_lambda_function.this (expand)"
		"[root] module.package_file_with_pip_requirements.output.lambda_function_source_code_size (expand)" -> "[root] module.package_file_with_pip_requirements.aws_lambda_function.this (expand)"
		"[root] module.package_file_with_pip_requirements.output.lambda_function_version (expand)" -> "[root] module.package_file_with_pip_requirements.aws_lambda_function.this (expand)"
		"[root] module.package_file_with_pip_requirements.output.lambda_layer_arn (expand)" -> "[root] module.package_file_with_pip_requirements.aws_lambda_layer_version.this (expand)"
		"[root] module.package_file_with_pip_requirements.output.lambda_layer_created_date (expand)" -> "[root] module.package_file_with_pip_requirements.aws_lambda_layer_version.this (expand)"
		"[root] module.package_file_with_pip_requirements.output.lambda_layer_layer_arn (expand)" -> "[root] module.package_file_with_pip_requirements.aws_lambda_layer_version.this (expand)"
		"[root] module.package_file_with_pip_requirements.output.lambda_layer_source_code_size (expand)" -> "[root] module.package_file_with_pip_requirements.aws_lambda_layer_version.this (expand)"
		"[root] module.package_file_with_pip_requirements.output.lambda_layer_version (expand)" -> "[root] module.package_file_with_pip_requirements.aws_lambda_layer_version.this (expand)"
		"[root] module.package_file_with_pip_requirements.output.lambda_role_arn (expand)" -> "[root] module.package_file_with_pip_requirements.aws_iam_role.lambda (expand)"
		"[root] module.package_file_with_pip_requirements.output.lambda_role_name (expand)" -> "[root] module.package_file_with_pip_requirements.aws_iam_role.lambda (expand)"
		"[root] module.package_file_with_pip_requirements.output.lambda_role_unique_id (expand)" -> "[root] module.package_file_with_pip_requirements.aws_iam_role.lambda (expand)"
		"[root] module.package_file_with_pip_requirements.output.local_filename (expand)" -> "[root] module.package_file_with_pip_requirements.local.filename (expand)"
		"[root] module.package_file_with_pip_requirements.output.s3_object (expand)" -> "[root] module.package_file_with_pip_requirements.local.s3_bucket (expand)"
		"[root] module.package_file_with_pip_requirements.output.s3_object (expand)" -> "[root] module.package_file_with_pip_requirements.local.s3_object_version (expand)"
		"[root] module.package_file_with_pip_requirements.var.allowed_triggers (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.architectures (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.artifacts_dir (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.assume_role_policy_statements (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.attach_async_event_policy (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.attach_cloudwatch_logs_policy (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.attach_dead_letter_policy (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.attach_network_policy (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.attach_policies (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.attach_policy (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.attach_policy_json (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.attach_policy_jsons (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.attach_policy_statements (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.attach_tracing_policy (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.build_in_docker (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.cloudwatch_logs_kms_key_id (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.cloudwatch_logs_retention_in_days (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.cloudwatch_logs_tags (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.compatible_architectures (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.compatible_runtimes (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.create (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.create_async_event_config (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.create_current_version_allowed_triggers (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.create_current_version_async_event_config (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.create_function (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.create_layer (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.create_package (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.create_role (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.create_unqualified_alias_allowed_triggers (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.create_unqualified_alias_async_event_config (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.dead_letter_target_arn (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.description (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.destination_on_failure (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.destination_on_success (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.docker_build_root (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.docker_file (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.docker_image (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.docker_pip_cache (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.docker_with_ssh_agent (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.environment_variables (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.event_source_mapping (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.file_system_arn (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.file_system_local_mount_path (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.function_name (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.handler (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.hash_extra (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.ignore_source_code_hash (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.image_config_command (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.image_config_entry_point (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.image_config_working_directory (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.image_uri (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.kms_key_arn (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.lambda_at_edge (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.lambda_role (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.layer_name (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.layers (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.license_info (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.local_existing_package (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.maximum_event_age_in_seconds (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.maximum_retry_attempts (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.memory_size (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.number_of_policies (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.number_of_policy_jsons (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.package_type (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.policies (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.policy (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.policy_json (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.policy_jsons (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.policy_path (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.policy_statements (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.provisioned_concurrent_executions (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.publish (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.recreate_missing_package (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.reserved_concurrent_executions (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.role_description (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.role_force_detach_policies (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.role_name (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.role_path (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.role_permissions_boundary (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.role_tags (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.runtime (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.s3_acl (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.s3_bucket (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.s3_existing_package (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.s3_object_storage_class (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.s3_object_tags (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.s3_prefix (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.s3_server_side_encryption (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.source_path (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.store_on_s3 (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.tags (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.timeout (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.tracing_mode (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.trusted_entities (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.use_existing_cloudwatch_log_group (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.vpc_security_group_ids (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_file_with_pip_requirements.var.vpc_subnet_ids (expand)" -> "[root] module.package_file_with_pip_requirements (expand)"
		"[root] module.package_with_commands_and_patterns (close)" -> "[root] module.package_with_commands_and_patterns.aws_iam_role_policy_attachment.additional_inline (expand)"
		"[root] module.package_with_commands_and_patterns (close)" -> "[root] module.package_with_commands_and_patterns.aws_iam_role_policy_attachment.additional_json (expand)"
		"[root] module.package_with_commands_and_patterns (close)" -> "[root] module.package_with_commands_and_patterns.aws_iam_role_policy_attachment.additional_jsons (expand)"
		"[root] module.package_with_commands_and_patterns (close)" -> "[root] module.package_with_commands_and_patterns.aws_iam_role_policy_attachment.additional_many (expand)"
		"[root] module.package_with_commands_and_patterns (close)" -> "[root] module.package_with_commands_and_patterns.aws_iam_role_policy_attachment.additional_one (expand)"
		"[root] module.package_with_commands_and_patterns (close)" -> "[root] module.package_with_commands_and_patterns.aws_iam_role_policy_attachment.async (expand)"
		"[root] module.package_with_commands_and_patterns (close)" -> "[root] module.package_with_commands_and_patterns.aws_iam_role_policy_attachment.dead_letter (expand)"
		"[root] module.package_with_commands_and_patterns (close)" -> "[root] module.package_with_commands_and_patterns.aws_iam_role_policy_attachment.logs (expand)"
		"[root] module.package_with_commands_and_patterns (close)" -> "[root] module.package_with_commands_and_patterns.aws_iam_role_policy_attachment.tracing (expand)"
		"[root] module.package_with_commands_and_patterns (close)" -> "[root] module.package_with_commands_and_patterns.aws_iam_role_policy_attachment.vpc (expand)"
		"[root] module.package_with_commands_and_patterns (close)" -> "[root] module.package_with_commands_and_patterns.aws_lambda_function_event_invoke_config.this (expand)"
		"[root] module.package_with_commands_and_patterns (close)" -> "[root] module.package_with_commands_and_patterns.aws_lambda_permission.current_version_triggers (expand)"
		"[root] module.package_with_commands_and_patterns (close)" -> "[root] module.package_with_commands_and_patterns.aws_lambda_permission.unqualified_alias_triggers (expand)"
		"[root] module.package_with_commands_and_patterns (close)" -> "[root] module.package_with_commands_and_patterns.aws_lambda_provisioned_concurrency_config.current_version (expand)"
		"[root] module.package_with_commands_and_patterns (close)" -> "[root] module.package_with_commands_and_patterns.output.lambda_cloudwatch_log_group_arn (expand)"
		"[root] module.package_with_commands_and_patterns (close)" -> "[root] module.package_with_commands_and_patterns.output.lambda_cloudwatch_log_group_name (expand)"
		"[root] module.package_with_commands_and_patterns (close)" -> "[root] module.package_with_commands_and_patterns.output.lambda_event_source_mapping_function_arn (expand)"
		"[root] module.package_with_commands_and_patterns (close)" -> "[root] module.package_with_commands_and_patterns.output.lambda_event_source_mapping_state (expand)"
		"[root] module.package_with_commands_and_patterns (close)" -> "[root] module.package_with_commands_and_patterns.output.lambda_event_source_mapping_state_transition_reason (expand)"
		"[root] module.package_with_commands_and_patterns (close)" -> "[root] module.package_with_commands_and_patterns.output.lambda_event_source_mapping_uuid (expand)"
		"[root] module.package_with_commands_and_patterns (close)" -> "[root] module.package_with_commands_and_patterns.output.lambda_function_arn (expand)"
		"[root] module.package_with_commands_and_patterns (close)" -> "[root] module.package_with_commands_and_patterns.output.lambda_function_invoke_arn (expand)"
		"[root] module.package_with_commands_and_patterns (close)" -> "[root] module.package_with_commands_and_patterns.output.lambda_function_kms_key_arn (expand)"
		"[root] module.package_with_commands_and_patterns (close)" -> "[root] module.package_with_commands_and_patterns.output.lambda_function_last_modified (expand)"
		"[root] module.package_with_commands_and_patterns (close)" -> "[root] module.package_with_commands_and_patterns.output.lambda_function_name (expand)"
		"[root] module.package_with_commands_and_patterns (close)" -> "[root] module.package_with_commands_and_patterns.output.lambda_function_qualified_arn (expand)"
		"[root] module.package_with_commands_and_patterns (close)" -> "[root] module.package_with_commands_and_patterns.output.lambda_function_source_code_hash (expand)"
		"[root] module.package_with_commands_and_patterns (close)" -> "[root] module.package_with_commands_and_patterns.output.lambda_function_source_code_size (expand)"
		"[root] module.package_with_commands_and_patterns (close)" -> "[root] module.package_with_commands_and_patterns.output.lambda_function_version (expand)"
		"[root] module.package_with_commands_and_patterns (close)" -> "[root] module.package_with_commands_and_patterns.output.lambda_layer_arn (expand)"
		"[root] module.package_with_commands_and_patterns (close)" -> "[root] module.package_with_commands_and_patterns.output.lambda_layer_created_date (expand)"
		"[root] module.package_with_commands_and_patterns (close)" -> "[root] module.package_with_commands_and_patterns.output.lambda_layer_layer_arn (expand)"
		"[root] module.package_with_commands_and_patterns (close)" -> "[root] module.package_with_commands_and_patterns.output.lambda_layer_source_code_size (expand)"
		"[root] module.package_with_commands_and_patterns (close)" -> "[root] module.package_with_commands_and_patterns.output.lambda_layer_version (expand)"
		"[root] module.package_with_commands_and_patterns (close)" -> "[root] module.package_with_commands_and_patterns.output.lambda_role_arn (expand)"
		"[root] module.package_with_commands_and_patterns (close)" -> "[root] module.package_with_commands_and_patterns.output.lambda_role_name (expand)"
		"[root] module.package_with_commands_and_patterns (close)" -> "[root] module.package_with_commands_and_patterns.output.lambda_role_unique_id (expand)"
		"[root] module.package_with_commands_and_patterns (close)" -> "[root] module.package_with_commands_and_patterns.output.local_filename (expand)"
		"[root] module.package_with_commands_and_patterns (close)" -> "[root] module.package_with_commands_and_patterns.output.s3_object (expand)"
		"[root] module.package_with_commands_and_patterns.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_with_commands_and_patterns.var.cloudwatch_logs_kms_key_id (expand)"
		"[root] module.package_with_commands_and_patterns.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_with_commands_and_patterns.var.cloudwatch_logs_retention_in_days (expand)"
		"[root] module.package_with_commands_and_patterns.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_with_commands_and_patterns.var.cloudwatch_logs_tags (expand)"
		"[root] module.package_with_commands_and_patterns.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_with_commands_and_patterns.var.create (expand)"
		"[root] module.package_with_commands_and_patterns.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_with_commands_and_patterns.var.create_function (expand)"
		"[root] module.package_with_commands_and_patterns.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_with_commands_and_patterns.var.create_layer (expand)"
		"[root] module.package_with_commands_and_patterns.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_with_commands_and_patterns.var.function_name (expand)"
		"[root] module.package_with_commands_and_patterns.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_with_commands_and_patterns.var.lambda_at_edge (expand)"
		"[root] module.package_with_commands_and_patterns.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_with_commands_and_patterns.var.tags (expand)"
		"[root] module.package_with_commands_and_patterns.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_with_commands_and_patterns.var.use_existing_cloudwatch_log_group (expand)"
		"[root] module.package_with_commands_and_patterns.aws_cloudwatch_log_group.lambda (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_with_commands_and_patterns.aws_iam_policy.additional_inline (expand)" -> "[root] module.package_with_commands_and_patterns.data.aws_iam_policy_document.additional_inline (expand)"
		"[root] module.package_with_commands_and_patterns.aws_iam_policy.additional_inline (expand)" -> "[root] module.package_with_commands_and_patterns.local.role_name (expand)"
		"[root] module.package_with_commands_and_patterns.aws_iam_policy.additional_inline (expand)" -> "[root] module.package_with_commands_and_patterns.var.policy_path (expand)"
		"[root] module.package_with_commands_and_patterns.aws_iam_policy.additional_inline (expand)" -> "[root] module.package_with_commands_and_patterns.var.tags (expand)"
		"[root] module.package_with_commands_and_patterns.aws_iam_policy.additional_json (expand)" -> "[root] module.package_with_commands_and_patterns.local.role_name (expand)"
		"[root] module.package_with_commands_and_patterns.aws_iam_policy.additional_json (expand)" -> "[root] module.package_with_commands_and_patterns.var.attach_policy_json (expand)"
		"[root] module.package_with_commands_and_patterns.aws_iam_policy.additional_json (expand)" -> "[root] module.package_with_commands_and_patterns.var.policy_json (expand)"
		"[root] module.package_with_commands_and_patterns.aws_iam_policy.additional_json (expand)" -> "[root] module.package_with_commands_and_patterns.var.policy_path (expand)"
		"[root] module.package_with_commands_and_patterns.aws_iam_policy.additional_json (expand)" -> "[root] module.package_with_commands_and_patterns.var.tags (expand)"
		"[root] module.package_with_commands_and_patterns.aws_iam_policy.additional_json (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_with_commands_and_patterns.aws_iam_policy.additional_jsons (expand)" -> "[root] module.package_with_commands_and_patterns.local.role_name (expand)"
		"[root] module.package_with_commands_and_patterns.aws_iam_policy.additional_jsons (expand)" -> "[root] module.package_with_commands_and_patterns.var.attach_policy_jsons (expand)"
		"[root] module.package_with_commands_and_patterns.aws_iam_policy.additional_jsons (expand)" -> "[root] module.package_with_commands_and_patterns.var.number_of_policy_jsons (expand)"
		"[root] module.package_with_commands_and_patterns.aws_iam_policy.additional_jsons (expand)" -> "[root] module.package_with_commands_and_patterns.var.policy_jsons (expand)"
		"[root] module.package_with_commands_and_patterns.aws_iam_policy.additional_jsons (expand)" -> "[root] module.package_with_commands_and_patterns.var.policy_path (expand)"
		"[root] module.package_with_commands_and_patterns.aws_iam_policy.additional_jsons (expand)" -> "[root] module.package_with_commands_and_patterns.var.tags (expand)"
		"[root] module.package_with_commands_and_patterns.aws_iam_policy.additional_jsons (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_with_commands_and_patterns.aws_iam_policy.async (expand)" -> "[root] module.package_with_commands_and_patterns.data.aws_iam_policy_document.async (expand)"
		"[root] module.package_with_commands_and_patterns.aws_iam_policy.async (expand)" -> "[root] module.package_with_commands_and_patterns.local.role_name (expand)"
		"[root] module.package_with_commands_and_patterns.aws_iam_policy.async (expand)" -> "[root] module.package_with_commands_and_patterns.var.policy_path (expand)"
		"[root] module.package_with_commands_and_patterns.aws_iam_policy.async (expand)" -> "[root] module.package_with_commands_and_patterns.var.tags (expand)"
		"[root] module.package_with_commands_and_patterns.aws_iam_policy.dead_letter (expand)" -> "[root] module.package_with_commands_and_patterns.data.aws_iam_policy_document.dead_letter (expand)"
		"[root] module.package_with_commands_and_patterns.aws_iam_policy.dead_letter (expand)" -> "[root] module.package_with_commands_and_patterns.local.role_name (expand)"
		"[root] module.package_with_commands_and_patterns.aws_iam_policy.dead_letter (expand)" -> "[root] module.package_with_commands_and_patterns.var.policy_path (expand)"
		"[root] module.package_with_commands_and_patterns.aws_iam_policy.dead_letter (expand)" -> "[root] module.package_with_commands_and_patterns.var.tags (expand)"
		"[root] module.package_with_commands_and_patterns.aws_iam_policy.logs (expand)" -> "[root] module.package_with_commands_and_patterns.data.aws_iam_policy_document.logs (expand)"
		"[root] module.package_with_commands_and_patterns.aws_iam_policy.logs (expand)" -> "[root] module.package_with_commands_and_patterns.local.role_name (expand)"
		"[root] module.package_with_commands_and_patterns.aws_iam_policy.logs (expand)" -> "[root] module.package_with_commands_and_patterns.var.policy_path (expand)"
		"[root] module.package_with_commands_and_patterns.aws_iam_policy.tracing (expand)" -> "[root] module.package_with_commands_and_patterns.data.aws_iam_policy.tracing (expand)"
		"[root] module.package_with_commands_and_patterns.aws_iam_policy.tracing (expand)" -> "[root] module.package_with_commands_and_patterns.local.role_name (expand)"
		"[root] module.package_with_commands_and_patterns.aws_iam_policy.tracing (expand)" -> "[root] module.package_with_commands_and_patterns.var.policy_path (expand)"
		"[root] module.package_with_commands_and_patterns.aws_iam_policy.tracing (expand)" -> "[root] module.package_with_commands_and_patterns.var.tags (expand)"
		"[root] module.package_with_commands_and_patterns.aws_iam_policy.vpc (expand)" -> "[root] module.package_with_commands_and_patterns.data.aws_iam_policy.vpc (expand)"
		"[root] module.package_with_commands_and_patterns.aws_iam_policy.vpc (expand)" -> "[root] module.package_with_commands_and_patterns.local.role_name (expand)"
		"[root] module.package_with_commands_and_patterns.aws_iam_policy.vpc (expand)" -> "[root] module.package_with_commands_and_patterns.var.policy_path (expand)"
		"[root] module.package_with_commands_and_patterns.aws_iam_policy.vpc (expand)" -> "[root] module.package_with_commands_and_patterns.var.tags (expand)"
		"[root] module.package_with_commands_and_patterns.aws_iam_role.lambda (expand)" -> "[root] module.package_with_commands_and_patterns.data.aws_iam_policy_document.assume_role (expand)"
		"[root] module.package_with_commands_and_patterns.aws_iam_role.lambda (expand)" -> "[root] module.package_with_commands_and_patterns.local.role_name (expand)"
		"[root] module.package_with_commands_and_patterns.aws_iam_role.lambda (expand)" -> "[root] module.package_with_commands_and_patterns.var.role_description (expand)"
		"[root] module.package_with_commands_and_patterns.aws_iam_role.lambda (expand)" -> "[root] module.package_with_commands_and_patterns.var.role_force_detach_policies (expand)"
		"[root] module.package_with_commands_and_patterns.aws_iam_role.lambda (expand)" -> "[root] module.package_with_commands_and_patterns.var.role_path (expand)"
		"[root] module.package_with_commands_and_patterns.aws_iam_role.lambda (expand)" -> "[root] module.package_with_commands_and_patterns.var.role_permissions_boundary (expand)"
		"[root] module.package_with_commands_and_patterns.aws_iam_role.lambda (expand)" -> "[root] module.package_with_commands_and_patterns.var.role_tags (expand)"
		"[root] module.package_with_commands_and_patterns.aws_iam_role.lambda (expand)" -> "[root] module.package_with_commands_and_patterns.var.tags (expand)"
		"[root] module.package_with_commands_and_patterns.aws_iam_role_policy_attachment.additional_inline (expand)" -> "[root] module.package_with_commands_and_patterns.aws_iam_policy.additional_inline (expand)"
		"[root] module.package_with_commands_and_patterns.aws_iam_role_policy_attachment.additional_inline (expand)" -> "[root] module.package_with_commands_and_patterns.aws_iam_role.lambda (expand)"
		"[root] module.package_with_commands_and_patterns.aws_iam_role_policy_attachment.additional_json (expand)" -> "[root] module.package_with_commands_and_patterns.aws_iam_policy.additional_json (expand)"
		"[root] module.package_with_commands_and_patterns.aws_iam_role_policy_attachment.additional_json (expand)" -> "[root] module.package_with_commands_and_patterns.aws_iam_role.lambda (expand)"
		"[root] module.package_with_commands_and_patterns.aws_iam_role_policy_attachment.additional_jsons (expand)" -> "[root] module.package_with_commands_and_patterns.aws_iam_policy.additional_jsons (expand)"
		"[root] module.package_with_commands_and_patterns.aws_iam_role_policy_attachment.additional_jsons (expand)" -> "[root] module.package_with_commands_and_patterns.aws_iam_role.lambda (expand)"
		"[root] module.package_with_commands_and_patterns.aws_iam_role_policy_attachment.additional_many (expand)" -> "[root] module.package_with_commands_and_patterns.aws_iam_role.lambda (expand)"
		"[root] module.package_with_commands_and_patterns.aws_iam_role_policy_attachment.additional_many (expand)" -> "[root] module.package_with_commands_and_patterns.var.attach_policies (expand)"
		"[root] module.package_with_commands_and_patterns.aws_iam_role_policy_attachment.additional_many (expand)" -> "[root] module.package_with_commands_and_patterns.var.number_of_policies (expand)"
		"[root] module.package_with_commands_and_patterns.aws_iam_role_policy_attachment.additional_many (expand)" -> "[root] module.package_with_commands_and_patterns.var.policies (expand)"
		"[root] module.package_with_commands_and_patterns.aws_iam_role_policy_attachment.additional_one (expand)" -> "[root] module.package_with_commands_and_patterns.aws_iam_role.lambda (expand)"
		"[root] module.package_with_commands_and_patterns.aws_iam_role_policy_attachment.additional_one (expand)" -> "[root] module.package_with_commands_and_patterns.var.attach_policy (expand)"
		"[root] module.package_with_commands_and_patterns.aws_iam_role_policy_attachment.additional_one (expand)" -> "[root] module.package_with_commands_and_patterns.var.policy (expand)"
		"[root] module.package_with_commands_and_patterns.aws_iam_role_policy_attachment.async (expand)" -> "[root] module.package_with_commands_and_patterns.aws_iam_policy.async (expand)"
		"[root] module.package_with_commands_and_patterns.aws_iam_role_policy_attachment.async (expand)" -> "[root] module.package_with_commands_and_patterns.aws_iam_role.lambda (expand)"
		"[root] module.package_with_commands_and_patterns.aws_iam_role_policy_attachment.dead_letter (expand)" -> "[root] module.package_with_commands_and_patterns.aws_iam_policy.dead_letter (expand)"
		"[root] module.package_with_commands_and_patterns.aws_iam_role_policy_attachment.dead_letter (expand)" -> "[root] module.package_with_commands_and_patterns.aws_iam_role.lambda (expand)"
		"[root] module.package_with_commands_and_patterns.aws_iam_role_policy_attachment.logs (expand)" -> "[root] module.package_with_commands_and_patterns.aws_iam_policy.logs (expand)"
		"[root] module.package_with_commands_and_patterns.aws_iam_role_policy_attachment.logs (expand)" -> "[root] module.package_with_commands_and_patterns.aws_iam_role.lambda (expand)"
		"[root] module.package_with_commands_and_patterns.aws_iam_role_policy_attachment.tracing (expand)" -> "[root] module.package_with_commands_and_patterns.aws_iam_policy.tracing (expand)"
		"[root] module.package_with_commands_and_patterns.aws_iam_role_policy_attachment.tracing (expand)" -> "[root] module.package_with_commands_and_patterns.aws_iam_role.lambda (expand)"
		"[root] module.package_with_commands_and_patterns.aws_iam_role_policy_attachment.vpc (expand)" -> "[root] module.package_with_commands_and_patterns.aws_iam_policy.vpc (expand)"
		"[root] module.package_with_commands_and_patterns.aws_iam_role_policy_attachment.vpc (expand)" -> "[root] module.package_with_commands_and_patterns.aws_iam_role.lambda (expand)"
		"[root] module.package_with_commands_and_patterns.aws_lambda_event_source_mapping.this (expand)" -> "[root] module.package_with_commands_and_patterns.aws_lambda_function.this (expand)"
		"[root] module.package_with_commands_and_patterns.aws_lambda_event_source_mapping.this (expand)" -> "[root] module.package_with_commands_and_patterns.var.create_unqualified_alias_allowed_triggers (expand)"
		"[root] module.package_with_commands_and_patterns.aws_lambda_event_source_mapping.this (expand)" -> "[root] module.package_with_commands_and_patterns.var.event_source_mapping (expand)"
		"[root] module.package_with_commands_and_patterns.aws_lambda_function.this (expand)" -> "[root] module.package_with_commands_and_patterns.aws_cloudwatch_log_group.lambda (expand)"
		"[root] module.package_with_commands_and_patterns.aws_lambda_function.this (expand)" -> "[root] module.package_with_commands_and_patterns.aws_iam_role.lambda (expand)"
		"[root] module.package_with_commands_and_patterns.aws_lambda_function.this (expand)" -> "[root] module.package_with_commands_and_patterns.local.filename (expand)"
		"[root] module.package_with_commands_and_patterns.aws_lambda_function.this (expand)" -> "[root] module.package_with_commands_and_patterns.local.s3_bucket (expand)"
		"[root] module.package_with_commands_and_patterns.aws_lambda_function.this (expand)" -> "[root] module.package_with_commands_and_patterns.local.s3_object_version (expand)"
		"[root] module.package_with_commands_and_patterns.aws_lambda_function.this (expand)" -> "[root] module.package_with_commands_and_patterns.local.was_missing (expand)"
		"[root] module.package_with_commands_and_patterns.aws_lambda_function.this (expand)" -> "[root] module.package_with_commands_and_patterns.var.architectures (expand)"
		"[root] module.package_with_commands_and_patterns.aws_lambda_function.this (expand)" -> "[root] module.package_with_commands_and_patterns.var.dead_letter_target_arn (expand)"
		"[root] module.package_with_commands_and_patterns.aws_lambda_function.this (expand)" -> "[root] module.package_with_commands_and_patterns.var.description (expand)"
		"[root] module.package_with_commands_and_patterns.aws_lambda_function.this (expand)" -> "[root] module.package_with_commands_and_patterns.var.environment_variables (expand)"
		"[root] module.package_with_commands_and_patterns.aws_lambda_function.this (expand)" -> "[root] module.package_with_commands_and_patterns.var.file_system_arn (expand)"
		"[root] module.package_with_commands_and_patterns.aws_lambda_function.this (expand)" -> "[root] module.package_with_commands_and_patterns.var.file_system_local_mount_path (expand)"
		"[root] module.package_with_commands_and_patterns.aws_lambda_function.this (expand)" -> "[root] module.package_with_commands_and_patterns.var.handler (expand)"
		"[root] module.package_with_commands_and_patterns.aws_lambda_function.this (expand)" -> "[root] module.package_with_commands_and_patterns.var.ignore_source_code_hash (expand)"
		"[root] module.package_with_commands_and_patterns.aws_lambda_function.this (expand)" -> "[root] module.package_with_commands_and_patterns.var.image_config_command (expand)"
		"[root] module.package_with_commands_and_patterns.aws_lambda_function.this (expand)" -> "[root] module.package_with_commands_and_patterns.var.image_config_entry_point (expand)"
		"[root] module.package_with_commands_and_patterns.aws_lambda_function.this (expand)" -> "[root] module.package_with_commands_and_patterns.var.image_config_working_directory (expand)"
		"[root] module.package_with_commands_and_patterns.aws_lambda_function.this (expand)" -> "[root] module.package_with_commands_and_patterns.var.image_uri (expand)"
		"[root] module.package_with_commands_and_patterns.aws_lambda_function.this (expand)" -> "[root] module.package_with_commands_and_patterns.var.kms_key_arn (expand)"
		"[root] module.package_with_commands_and_patterns.aws_lambda_function.this (expand)" -> "[root] module.package_with_commands_and_patterns.var.lambda_role (expand)"
		"[root] module.package_with_commands_and_patterns.aws_lambda_function.this (expand)" -> "[root] module.package_with_commands_and_patterns.var.layers (expand)"
		"[root] module.package_with_commands_and_patterns.aws_lambda_function.this (expand)" -> "[root] module.package_with_commands_and_patterns.var.memory_size (expand)"
		"[root] module.package_with_commands_and_patterns.aws_lambda_function.this (expand)" -> "[root] module.package_with_commands_and_patterns.var.package_type (expand)"
		"[root] module.package_with_commands_and_patterns.aws_lambda_function.this (expand)" -> "[root] module.package_with_commands_and_patterns.var.publish (expand)"
		"[root] module.package_with_commands_and_patterns.aws_lambda_function.this (expand)" -> "[root] module.package_with_commands_and_patterns.var.reserved_concurrent_executions (expand)"
		"[root] module.package_with_commands_and_patterns.aws_lambda_function.this (expand)" -> "[root] module.package_with_commands_and_patterns.var.timeout (expand)"
		"[root] module.package_with_commands_and_patterns.aws_lambda_function.this (expand)" -> "[root] module.package_with_commands_and_patterns.var.tracing_mode (expand)"
		"[root] module.package_with_commands_and_patterns.aws_lambda_function.this (expand)" -> "[root] module.package_with_commands_and_patterns.var.vpc_security_group_ids (expand)"
		"[root] module.package_with_commands_and_patterns.aws_lambda_function.this (expand)" -> "[root] module.package_with_commands_and_patterns.var.vpc_subnet_ids (expand)"
		"[root] module.package_with_commands_and_patterns.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.package_with_commands_and_patterns.aws_lambda_function.this (expand)"
		"[root] module.package_with_commands_and_patterns.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.package_with_commands_and_patterns.local.qualifiers (expand)"
		"[root] module.package_with_commands_and_patterns.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.package_with_commands_and_patterns.var.create_async_event_config (expand)"
		"[root] module.package_with_commands_and_patterns.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.package_with_commands_and_patterns.var.destination_on_failure (expand)"
		"[root] module.package_with_commands_and_patterns.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.package_with_commands_and_patterns.var.destination_on_success (expand)"
		"[root] module.package_with_commands_and_patterns.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.package_with_commands_and_patterns.var.maximum_event_age_in_seconds (expand)"
		"[root] module.package_with_commands_and_patterns.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.package_with_commands_and_patterns.var.maximum_retry_attempts (expand)"
		"[root] module.package_with_commands_and_patterns.aws_lambda_layer_version.this (expand)" -> "[root] module.package_with_commands_and_patterns.local.filename (expand)"
		"[root] module.package_with_commands_and_patterns.aws_lambda_layer_version.this (expand)" -> "[root] module.package_with_commands_and_patterns.local.s3_bucket (expand)"
		"[root] module.package_with_commands_and_patterns.aws_lambda_layer_version.this (expand)" -> "[root] module.package_with_commands_and_patterns.local.s3_object_version (expand)"
		"[root] module.package_with_commands_and_patterns.aws_lambda_layer_version.this (expand)" -> "[root] module.package_with_commands_and_patterns.local.was_missing (expand)"
		"[root] module.package_with_commands_and_patterns.aws_lambda_layer_version.this (expand)" -> "[root] module.package_with_commands_and_patterns.var.compatible_architectures (expand)"
		"[root] module.package_with_commands_and_patterns.aws_lambda_layer_version.this (expand)" -> "[root] module.package_with_commands_and_patterns.var.compatible_runtimes (expand)"
		"[root] module.package_with_commands_and_patterns.aws_lambda_layer_version.this (expand)" -> "[root] module.package_with_commands_and_patterns.var.create_layer (expand)"
		"[root] module.package_with_commands_and_patterns.aws_lambda_layer_version.this (expand)" -> "[root] module.package_with_commands_and_patterns.var.description (expand)"
		"[root] module.package_with_commands_and_patterns.aws_lambda_layer_version.this (expand)" -> "[root] module.package_with_commands_and_patterns.var.ignore_source_code_hash (expand)"
		"[root] module.package_with_commands_and_patterns.aws_lambda_layer_version.this (expand)" -> "[root] module.package_with_commands_and_patterns.var.layer_name (expand)"
		"[root] module.package_with_commands_and_patterns.aws_lambda_layer_version.this (expand)" -> "[root] module.package_with_commands_and_patterns.var.license_info (expand)"
		"[root] module.package_with_commands_and_patterns.aws_lambda_permission.current_version_triggers (expand)" -> "[root] module.package_with_commands_and_patterns.aws_lambda_function.this (expand)"
		"[root] module.package_with_commands_and_patterns.aws_lambda_permission.current_version_triggers (expand)" -> "[root] module.package_with_commands_and_patterns.var.allowed_triggers (expand)"
		"[root] module.package_with_commands_and_patterns.aws_lambda_permission.current_version_triggers (expand)" -> "[root] module.package_with_commands_and_patterns.var.create_current_version_allowed_triggers (expand)"
		"[root] module.package_with_commands_and_patterns.aws_lambda_permission.unqualified_alias_triggers (expand)" -> "[root] module.package_with_commands_and_patterns.aws_lambda_function.this (expand)"
		"[root] module.package_with_commands_and_patterns.aws_lambda_permission.unqualified_alias_triggers (expand)" -> "[root] module.package_with_commands_and_patterns.var.allowed_triggers (expand)"
		"[root] module.package_with_commands_and_patterns.aws_lambda_permission.unqualified_alias_triggers (expand)" -> "[root] module.package_with_commands_and_patterns.var.create_unqualified_alias_allowed_triggers (expand)"
		"[root] module.package_with_commands_and_patterns.aws_lambda_provisioned_concurrency_config.current_version (expand)" -> "[root] module.package_with_commands_and_patterns.aws_lambda_function.this (expand)"
		"[root] module.package_with_commands_and_patterns.aws_lambda_provisioned_concurrency_config.current_version (expand)" -> "[root] module.package_with_commands_and_patterns.var.provisioned_concurrent_executions (expand)"
		"[root] module.package_with_commands_and_patterns.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.package_with_commands_and_patterns.local.s3_key (expand)"
		"[root] module.package_with_commands_and_patterns.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.package_with_commands_and_patterns.null_resource.archive (expand)"
		"[root] module.package_with_commands_and_patterns.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.package_with_commands_and_patterns.var.s3_acl (expand)"
		"[root] module.package_with_commands_and_patterns.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.package_with_commands_and_patterns.var.s3_bucket (expand)"
		"[root] module.package_with_commands_and_patterns.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.package_with_commands_and_patterns.var.s3_object_storage_class (expand)"
		"[root] module.package_with_commands_and_patterns.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.package_with_commands_and_patterns.var.s3_object_tags (expand)"
		"[root] module.package_with_commands_and_patterns.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.package_with_commands_and_patterns.var.s3_server_side_encryption (expand)"
		"[root] module.package_with_commands_and_patterns.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.package_with_commands_and_patterns.var.tags (expand)"
		"[root] module.package_with_commands_and_patterns.aws_s3_bucket_object.lambda_package (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_with_commands_and_patterns.data.aws_arn.log_group_arn (expand)" -> "[root] module.package_with_commands_and_patterns.local.create_role (expand)"
		"[root] module.package_with_commands_and_patterns.data.aws_arn.log_group_arn (expand)" -> "[root] module.package_with_commands_and_patterns.local.log_group_arn_regional (expand)"
		"[root] module.package_with_commands_and_patterns.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_with_commands_and_patterns.var.create (expand)"
		"[root] module.package_with_commands_and_patterns.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_with_commands_and_patterns.var.create_function (expand)"
		"[root] module.package_with_commands_and_patterns.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_with_commands_and_patterns.var.create_layer (expand)"
		"[root] module.package_with_commands_and_patterns.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_with_commands_and_patterns.var.function_name (expand)"
		"[root] module.package_with_commands_and_patterns.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_with_commands_and_patterns.var.lambda_at_edge (expand)"
		"[root] module.package_with_commands_and_patterns.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_with_commands_and_patterns.var.use_existing_cloudwatch_log_group (expand)"
		"[root] module.package_with_commands_and_patterns.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_with_commands_and_patterns.data.aws_iam_policy.tracing (expand)" -> "[root] module.package_with_commands_and_patterns.data.aws_partition.current (expand)"
		"[root] module.package_with_commands_and_patterns.data.aws_iam_policy.tracing (expand)" -> "[root] module.package_with_commands_and_patterns.local.create_role (expand)"
		"[root] module.package_with_commands_and_patterns.data.aws_iam_policy.tracing (expand)" -> "[root] module.package_with_commands_and_patterns.var.attach_tracing_policy (expand)"
		"[root] module.package_with_commands_and_patterns.data.aws_iam_policy.vpc (expand)" -> "[root] module.package_with_commands_and_patterns.data.aws_partition.current (expand)"
		"[root] module.package_with_commands_and_patterns.data.aws_iam_policy.vpc (expand)" -> "[root] module.package_with_commands_and_patterns.local.create_role (expand)"
		"[root] module.package_with_commands_and_patterns.data.aws_iam_policy.vpc (expand)" -> "[root] module.package_with_commands_and_patterns.var.attach_network_policy (expand)"
		"[root] module.package_with_commands_and_patterns.data.aws_iam_policy_document.additional_inline (expand)" -> "[root] module.package_with_commands_and_patterns.local.create_role (expand)"
		"[root] module.package_with_commands_and_patterns.data.aws_iam_policy_document.additional_inline (expand)" -> "[root] module.package_with_commands_and_patterns.var.attach_policy_statements (expand)"
		"[root] module.package_with_commands_and_patterns.data.aws_iam_policy_document.additional_inline (expand)" -> "[root] module.package_with_commands_and_patterns.var.policy_statements (expand)"
		"[root] module.package_with_commands_and_patterns.data.aws_iam_policy_document.additional_inline (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_with_commands_and_patterns.data.aws_iam_policy_document.assume_role (expand)" -> "[root] module.package_with_commands_and_patterns.local.create_role (expand)"
		"[root] module.package_with_commands_and_patterns.data.aws_iam_policy_document.assume_role (expand)" -> "[root] module.package_with_commands_and_patterns.local.trusted_entities_principals (expand)"
		"[root] module.package_with_commands_and_patterns.data.aws_iam_policy_document.assume_role (expand)" -> "[root] module.package_with_commands_and_patterns.local.trusted_entities_services (expand)"
		"[root] module.package_with_commands_and_patterns.data.aws_iam_policy_document.assume_role (expand)" -> "[root] module.package_with_commands_and_patterns.var.assume_role_policy_statements (expand)"
		"[root] module.package_with_commands_and_patterns.data.aws_iam_policy_document.assume_role (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_with_commands_and_patterns.data.aws_iam_policy_document.async (expand)" -> "[root] module.package_with_commands_and_patterns.local.create_role (expand)"
		"[root] module.package_with_commands_and_patterns.data.aws_iam_policy_document.async (expand)" -> "[root] module.package_with_commands_and_patterns.var.attach_async_event_policy (expand)"
		"[root] module.package_with_commands_and_patterns.data.aws_iam_policy_document.async (expand)" -> "[root] module.package_with_commands_and_patterns.var.destination_on_failure (expand)"
		"[root] module.package_with_commands_and_patterns.data.aws_iam_policy_document.async (expand)" -> "[root] module.package_with_commands_and_patterns.var.destination_on_success (expand)"
		"[root] module.package_with_commands_and_patterns.data.aws_iam_policy_document.async (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_with_commands_and_patterns.data.aws_iam_policy_document.dead_letter (expand)" -> "[root] module.package_with_commands_and_patterns.local.create_role (expand)"
		"[root] module.package_with_commands_and_patterns.data.aws_iam_policy_document.dead_letter (expand)" -> "[root] module.package_with_commands_and_patterns.var.attach_dead_letter_policy (expand)"
		"[root] module.package_with_commands_and_patterns.data.aws_iam_policy_document.dead_letter (expand)" -> "[root] module.package_with_commands_and_patterns.var.dead_letter_target_arn (expand)"
		"[root] module.package_with_commands_and_patterns.data.aws_iam_policy_document.dead_letter (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_with_commands_and_patterns.data.aws_iam_policy_document.logs (expand)" -> "[root] module.package_with_commands_and_patterns.local.log_group_arn (expand)"
		"[root] module.package_with_commands_and_patterns.data.aws_iam_policy_document.logs (expand)" -> "[root] module.package_with_commands_and_patterns.var.attach_cloudwatch_logs_policy (expand)"
		"[root] module.package_with_commands_and_patterns.data.aws_partition.current (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.data.aws_partition.current (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_with_commands_and_patterns.data.external.archive_prepare (expand)" -> "[root] module.package_with_commands_and_patterns.local.python (expand)"
		"[root] module.package_with_commands_and_patterns.data.external.archive_prepare (expand)" -> "[root] module.package_with_commands_and_patterns.var.artifacts_dir (expand)"
		"[root] module.package_with_commands_and_patterns.data.external.archive_prepare (expand)" -> "[root] module.package_with_commands_and_patterns.var.build_in_docker (expand)"
		"[root] module.package_with_commands_and_patterns.data.external.archive_prepare (expand)" -> "[root] module.package_with_commands_and_patterns.var.create (expand)"
		"[root] module.package_with_commands_and_patterns.data.external.archive_prepare (expand)" -> "[root] module.package_with_commands_and_patterns.var.create_package (expand)"
		"[root] module.package_with_commands_and_patterns.data.external.archive_prepare (expand)" -> "[root] module.package_with_commands_and_patterns.var.docker_build_root (expand)"
		"[root] module.package_with_commands_and_patterns.data.external.archive_prepare (expand)" -> "[root] module.package_with_commands_and_patterns.var.docker_file (expand)"
		"[root] module.package_with_commands_and_patterns.data.external.archive_prepare (expand)" -> "[root] module.package_with_commands_and_patterns.var.docker_image (expand)"
		"[root] module.package_with_commands_and_patterns.data.external.archive_prepare (expand)" -> "[root] module.package_with_commands_and_patterns.var.docker_pip_cache (expand)"
		"[root] module.package_with_commands_and_patterns.data.external.archive_prepare (expand)" -> "[root] module.package_with_commands_and_patterns.var.docker_with_ssh_agent (expand)"
		"[root] module.package_with_commands_and_patterns.data.external.archive_prepare (expand)" -> "[root] module.package_with_commands_and_patterns.var.hash_extra (expand)"
		"[root] module.package_with_commands_and_patterns.data.external.archive_prepare (expand)" -> "[root] module.package_with_commands_and_patterns.var.recreate_missing_package (expand)"
		"[root] module.package_with_commands_and_patterns.data.external.archive_prepare (expand)" -> "[root] module.package_with_commands_and_patterns.var.runtime (expand)"
		"[root] module.package_with_commands_and_patterns.data.external.archive_prepare (expand)" -> "[root] module.package_with_commands_and_patterns.var.source_path (expand)"
		"[root] module.package_with_commands_and_patterns.data.external.archive_prepare (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/external\"]"
		"[root] module.package_with_commands_and_patterns.local.archive_filename (expand)" -> "[root] module.package_with_commands_and_patterns.data.external.archive_prepare (expand)"
		"[root] module.package_with_commands_and_patterns.local.archive_was_missing (expand)" -> "[root] module.package_with_commands_and_patterns.data.external.archive_prepare (expand)"
		"[root] module.package_with_commands_and_patterns.local.create_role (expand)" -> "[root] module.package_with_commands_and_patterns.var.create (expand)"
		"[root] module.package_with_commands_and_patterns.local.create_role (expand)" -> "[root] module.package_with_commands_and_patterns.var.create_function (expand)"
		"[root] module.package_with_commands_and_patterns.local.create_role (expand)" -> "[root] module.package_with_commands_and_patterns.var.create_layer (expand)"
		"[root] module.package_with_commands_and_patterns.local.create_role (expand)" -> "[root] module.package_with_commands_and_patterns.var.create_role (expand)"
		"[root] module.package_with_commands_and_patterns.local.filename (expand)" -> "[root] module.package_with_commands_and_patterns.local.archive_filename (expand)"
		"[root] module.package_with_commands_and_patterns.local.filename (expand)" -> "[root] module.package_with_commands_and_patterns.var.local_existing_package (expand)"
		"[root] module.package_with_commands_and_patterns.local.filename (expand)" -> "[root] module.package_with_commands_and_patterns.var.store_on_s3 (expand)"
		"[root] module.package_with_commands_and_patterns.local.log_group_arn (expand)" -> "[root] module.package_with_commands_and_patterns.data.aws_arn.log_group_arn (expand)"
		"[root] module.package_with_commands_and_patterns.local.log_group_arn_regional (expand)" -> "[root] module.package_with_commands_and_patterns.aws_cloudwatch_log_group.lambda (expand)"
		"[root] module.package_with_commands_and_patterns.local.log_group_arn_regional (expand)" -> "[root] module.package_with_commands_and_patterns.data.aws_cloudwatch_log_group.lambda (expand)"
		"[root] module.package_with_commands_and_patterns.local.log_group_name (expand)" -> "[root] module.package_with_commands_and_patterns.aws_cloudwatch_log_group.lambda (expand)"
		"[root] module.package_with_commands_and_patterns.local.log_group_name (expand)" -> "[root] module.package_with_commands_and_patterns.data.aws_cloudwatch_log_group.lambda (expand)"
		"[root] module.package_with_commands_and_patterns.local.python (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.local.qualifiers (expand)" -> "[root] module.package_with_commands_and_patterns.var.create_current_version_async_event_config (expand)"
		"[root] module.package_with_commands_and_patterns.local.qualifiers (expand)" -> "[root] module.package_with_commands_and_patterns.var.create_unqualified_alias_async_event_config (expand)"
		"[root] module.package_with_commands_and_patterns.local.role_name (expand)" -> "[root] module.package_with_commands_and_patterns.local.create_role (expand)"
		"[root] module.package_with_commands_and_patterns.local.role_name (expand)" -> "[root] module.package_with_commands_and_patterns.var.function_name (expand)"
		"[root] module.package_with_commands_and_patterns.local.role_name (expand)" -> "[root] module.package_with_commands_and_patterns.var.role_name (expand)"
		"[root] module.package_with_commands_and_patterns.local.s3_bucket (expand)" -> "[root] module.package_with_commands_and_patterns.var.s3_bucket (expand)"
		"[root] module.package_with_commands_and_patterns.local.s3_bucket (expand)" -> "[root] module.package_with_commands_and_patterns.var.s3_existing_package (expand)"
		"[root] module.package_with_commands_and_patterns.local.s3_bucket (expand)" -> "[root] module.package_with_commands_and_patterns.var.store_on_s3 (expand)"
		"[root] module.package_with_commands_and_patterns.local.s3_key (expand)" -> "[root] module.package_with_commands_and_patterns.local.archive_filename (expand)"
		"[root] module.package_with_commands_and_patterns.local.s3_key (expand)" -> "[root] module.package_with_commands_and_patterns.var.s3_existing_package (expand)"
		"[root] module.package_with_commands_and_patterns.local.s3_key (expand)" -> "[root] module.package_with_commands_and_patterns.var.s3_prefix (expand)"
		"[root] module.package_with_commands_and_patterns.local.s3_key (expand)" -> "[root] module.package_with_commands_and_patterns.var.store_on_s3 (expand)"
		"[root] module.package_with_commands_and_patterns.local.s3_object_version (expand)" -> "[root] module.package_with_commands_and_patterns.aws_s3_bucket_object.lambda_package (expand)"
		"[root] module.package_with_commands_and_patterns.local.trusted_entities_principals (expand)" -> "[root] module.package_with_commands_and_patterns.var.trusted_entities (expand)"
		"[root] module.package_with_commands_and_patterns.local.trusted_entities_services (expand)" -> "[root] module.package_with_commands_and_patterns.var.lambda_at_edge (expand)"
		"[root] module.package_with_commands_and_patterns.local.trusted_entities_services (expand)" -> "[root] module.package_with_commands_and_patterns.var.trusted_entities (expand)"
		"[root] module.package_with_commands_and_patterns.local.was_missing (expand)" -> "[root] module.package_with_commands_and_patterns.local.archive_was_missing (expand)"
		"[root] module.package_with_commands_and_patterns.local.was_missing (expand)" -> "[root] module.package_with_commands_and_patterns.var.local_existing_package (expand)"
		"[root] module.package_with_commands_and_patterns.local_file.archive_plan (expand)" -> "[root] module.package_with_commands_and_patterns.data.external.archive_prepare (expand)"
		"[root] module.package_with_commands_and_patterns.local_file.archive_plan (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/local\"]"
		"[root] module.package_with_commands_and_patterns.null_resource.archive (expand)" -> "[root] module.package_with_commands_and_patterns.local_file.archive_plan (expand)"
		"[root] module.package_with_commands_and_patterns.null_resource.archive (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/null\"]"
		"[root] module.package_with_commands_and_patterns.null_resource.archive (expand)" -> "[root] provisioner.local-exec"
		"[root] module.package_with_commands_and_patterns.output.lambda_cloudwatch_log_group_arn (expand)" -> "[root] module.package_with_commands_and_patterns.local.log_group_arn (expand)"
		"[root] module.package_with_commands_and_patterns.output.lambda_cloudwatch_log_group_name (expand)" -> "[root] module.package_with_commands_and_patterns.local.log_group_name (expand)"
		"[root] module.package_with_commands_and_patterns.output.lambda_event_source_mapping_function_arn (expand)" -> "[root] module.package_with_commands_and_patterns.aws_lambda_event_source_mapping.this (expand)"
		"[root] module.package_with_commands_and_patterns.output.lambda_event_source_mapping_state (expand)" -> "[root] module.package_with_commands_and_patterns.aws_lambda_event_source_mapping.this (expand)"
		"[root] module.package_with_commands_and_patterns.output.lambda_event_source_mapping_state_transition_reason (expand)" -> "[root] module.package_with_commands_and_patterns.aws_lambda_event_source_mapping.this (expand)"
		"[root] module.package_with_commands_and_patterns.output.lambda_event_source_mapping_uuid (expand)" -> "[root] module.package_with_commands_and_patterns.aws_lambda_event_source_mapping.this (expand)"
		"[root] module.package_with_commands_and_patterns.output.lambda_function_arn (expand)" -> "[root] module.package_with_commands_and_patterns.aws_lambda_function.this (expand)"
		"[root] module.package_with_commands_and_patterns.output.lambda_function_invoke_arn (expand)" -> "[root] module.package_with_commands_and_patterns.aws_lambda_function.this (expand)"
		"[root] module.package_with_commands_and_patterns.output.lambda_function_kms_key_arn (expand)" -> "[root] module.package_with_commands_and_patterns.aws_lambda_function.this (expand)"
		"[root] module.package_with_commands_and_patterns.output.lambda_function_last_modified (expand)" -> "[root] module.package_with_commands_and_patterns.aws_lambda_function.this (expand)"
		"[root] module.package_with_commands_and_patterns.output.lambda_function_name (expand)" -> "[root] module.package_with_commands_and_patterns.aws_lambda_function.this (expand)"
		"[root] module.package_with_commands_and_patterns.output.lambda_function_qualified_arn (expand)" -> "[root] module.package_with_commands_and_patterns.aws_lambda_function.this (expand)"
		"[root] module.package_with_commands_and_patterns.output.lambda_function_source_code_hash (expand)" -> "[root] module.package_with_commands_and_patterns.aws_lambda_function.this (expand)"
		"[root] module.package_with_commands_and_patterns.output.lambda_function_source_code_size (expand)" -> "[root] module.package_with_commands_and_patterns.aws_lambda_function.this (expand)"
		"[root] module.package_with_commands_and_patterns.output.lambda_function_version (expand)" -> "[root] module.package_with_commands_and_patterns.aws_lambda_function.this (expand)"
		"[root] module.package_with_commands_and_patterns.output.lambda_layer_arn (expand)" -> "[root] module.package_with_commands_and_patterns.aws_lambda_layer_version.this (expand)"
		"[root] module.package_with_commands_and_patterns.output.lambda_layer_created_date (expand)" -> "[root] module.package_with_commands_and_patterns.aws_lambda_layer_version.this (expand)"
		"[root] module.package_with_commands_and_patterns.output.lambda_layer_layer_arn (expand)" -> "[root] module.package_with_commands_and_patterns.aws_lambda_layer_version.this (expand)"
		"[root] module.package_with_commands_and_patterns.output.lambda_layer_source_code_size (expand)" -> "[root] module.package_with_commands_and_patterns.aws_lambda_layer_version.this (expand)"
		"[root] module.package_with_commands_and_patterns.output.lambda_layer_version (expand)" -> "[root] module.package_with_commands_and_patterns.aws_lambda_layer_version.this (expand)"
		"[root] module.package_with_commands_and_patterns.output.lambda_role_arn (expand)" -> "[root] module.package_with_commands_and_patterns.aws_iam_role.lambda (expand)"
		"[root] module.package_with_commands_and_patterns.output.lambda_role_name (expand)" -> "[root] module.package_with_commands_and_patterns.aws_iam_role.lambda (expand)"
		"[root] module.package_with_commands_and_patterns.output.lambda_role_unique_id (expand)" -> "[root] module.package_with_commands_and_patterns.aws_iam_role.lambda (expand)"
		"[root] module.package_with_commands_and_patterns.output.local_filename (expand)" -> "[root] module.package_with_commands_and_patterns.local.filename (expand)"
		"[root] module.package_with_commands_and_patterns.output.s3_object (expand)" -> "[root] module.package_with_commands_and_patterns.local.s3_bucket (expand)"
		"[root] module.package_with_commands_and_patterns.output.s3_object (expand)" -> "[root] module.package_with_commands_and_patterns.local.s3_object_version (expand)"
		"[root] module.package_with_commands_and_patterns.var.allowed_triggers (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.architectures (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.artifacts_dir (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.assume_role_policy_statements (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.attach_async_event_policy (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.attach_cloudwatch_logs_policy (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.attach_dead_letter_policy (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.attach_network_policy (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.attach_policies (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.attach_policy (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.attach_policy_json (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.attach_policy_jsons (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.attach_policy_statements (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.attach_tracing_policy (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.build_in_docker (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.cloudwatch_logs_kms_key_id (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.cloudwatch_logs_retention_in_days (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.cloudwatch_logs_tags (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.compatible_architectures (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.compatible_runtimes (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.create (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.create_async_event_config (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.create_current_version_allowed_triggers (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.create_current_version_async_event_config (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.create_function (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.create_layer (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.create_package (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.create_role (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.create_unqualified_alias_allowed_triggers (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.create_unqualified_alias_async_event_config (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.dead_letter_target_arn (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.description (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.destination_on_failure (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.destination_on_success (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.docker_build_root (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.docker_file (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.docker_image (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.docker_pip_cache (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.docker_with_ssh_agent (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.environment_variables (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.event_source_mapping (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.file_system_arn (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.file_system_local_mount_path (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.function_name (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.handler (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.hash_extra (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.ignore_source_code_hash (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.image_config_command (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.image_config_entry_point (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.image_config_working_directory (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.image_uri (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.kms_key_arn (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.lambda_at_edge (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.lambda_role (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.layer_name (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.layers (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.license_info (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.local_existing_package (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.maximum_event_age_in_seconds (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.maximum_retry_attempts (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.memory_size (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.number_of_policies (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.number_of_policy_jsons (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.package_type (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.policies (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.policy (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.policy_json (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.policy_jsons (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.policy_path (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.policy_statements (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.provisioned_concurrent_executions (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.publish (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.recreate_missing_package (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.reserved_concurrent_executions (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.role_description (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.role_force_detach_policies (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.role_name (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.role_path (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.role_permissions_boundary (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.role_tags (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.runtime (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.s3_acl (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.s3_bucket (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.s3_existing_package (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.s3_object_storage_class (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.s3_object_tags (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.s3_prefix (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.s3_server_side_encryption (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.source_path (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.store_on_s3 (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.tags (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.timeout (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.tracing_mode (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.trusted_entities (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.use_existing_cloudwatch_log_group (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.vpc_security_group_ids (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_commands_and_patterns.var.vpc_subnet_ids (expand)" -> "[root] module.package_with_commands_and_patterns (expand)"
		"[root] module.package_with_docker (close)" -> "[root] module.package_with_docker.aws_iam_role_policy_attachment.additional_inline (expand)"
		"[root] module.package_with_docker (close)" -> "[root] module.package_with_docker.aws_iam_role_policy_attachment.additional_json (expand)"
		"[root] module.package_with_docker (close)" -> "[root] module.package_with_docker.aws_iam_role_policy_attachment.additional_jsons (expand)"
		"[root] module.package_with_docker (close)" -> "[root] module.package_with_docker.aws_iam_role_policy_attachment.additional_many (expand)"
		"[root] module.package_with_docker (close)" -> "[root] module.package_with_docker.aws_iam_role_policy_attachment.additional_one (expand)"
		"[root] module.package_with_docker (close)" -> "[root] module.package_with_docker.aws_iam_role_policy_attachment.async (expand)"
		"[root] module.package_with_docker (close)" -> "[root] module.package_with_docker.aws_iam_role_policy_attachment.dead_letter (expand)"
		"[root] module.package_with_docker (close)" -> "[root] module.package_with_docker.aws_iam_role_policy_attachment.logs (expand)"
		"[root] module.package_with_docker (close)" -> "[root] module.package_with_docker.aws_iam_role_policy_attachment.tracing (expand)"
		"[root] module.package_with_docker (close)" -> "[root] module.package_with_docker.aws_iam_role_policy_attachment.vpc (expand)"
		"[root] module.package_with_docker (close)" -> "[root] module.package_with_docker.aws_lambda_function_event_invoke_config.this (expand)"
		"[root] module.package_with_docker (close)" -> "[root] module.package_with_docker.aws_lambda_permission.current_version_triggers (expand)"
		"[root] module.package_with_docker (close)" -> "[root] module.package_with_docker.aws_lambda_permission.unqualified_alias_triggers (expand)"
		"[root] module.package_with_docker (close)" -> "[root] module.package_with_docker.aws_lambda_provisioned_concurrency_config.current_version (expand)"
		"[root] module.package_with_docker (close)" -> "[root] module.package_with_docker.output.lambda_cloudwatch_log_group_arn (expand)"
		"[root] module.package_with_docker (close)" -> "[root] module.package_with_docker.output.lambda_cloudwatch_log_group_name (expand)"
		"[root] module.package_with_docker (close)" -> "[root] module.package_with_docker.output.lambda_event_source_mapping_function_arn (expand)"
		"[root] module.package_with_docker (close)" -> "[root] module.package_with_docker.output.lambda_event_source_mapping_state (expand)"
		"[root] module.package_with_docker (close)" -> "[root] module.package_with_docker.output.lambda_event_source_mapping_state_transition_reason (expand)"
		"[root] module.package_with_docker (close)" -> "[root] module.package_with_docker.output.lambda_event_source_mapping_uuid (expand)"
		"[root] module.package_with_docker (close)" -> "[root] module.package_with_docker.output.lambda_function_arn (expand)"
		"[root] module.package_with_docker (close)" -> "[root] module.package_with_docker.output.lambda_function_invoke_arn (expand)"
		"[root] module.package_with_docker (close)" -> "[root] module.package_with_docker.output.lambda_function_kms_key_arn (expand)"
		"[root] module.package_with_docker (close)" -> "[root] module.package_with_docker.output.lambda_function_last_modified (expand)"
		"[root] module.package_with_docker (close)" -> "[root] module.package_with_docker.output.lambda_function_name (expand)"
		"[root] module.package_with_docker (close)" -> "[root] module.package_with_docker.output.lambda_function_qualified_arn (expand)"
		"[root] module.package_with_docker (close)" -> "[root] module.package_with_docker.output.lambda_function_source_code_hash (expand)"
		"[root] module.package_with_docker (close)" -> "[root] module.package_with_docker.output.lambda_function_source_code_size (expand)"
		"[root] module.package_with_docker (close)" -> "[root] module.package_with_docker.output.lambda_function_version (expand)"
		"[root] module.package_with_docker (close)" -> "[root] module.package_with_docker.output.lambda_layer_arn (expand)"
		"[root] module.package_with_docker (close)" -> "[root] module.package_with_docker.output.lambda_layer_created_date (expand)"
		"[root] module.package_with_docker (close)" -> "[root] module.package_with_docker.output.lambda_layer_layer_arn (expand)"
		"[root] module.package_with_docker (close)" -> "[root] module.package_with_docker.output.lambda_layer_source_code_size (expand)"
		"[root] module.package_with_docker (close)" -> "[root] module.package_with_docker.output.lambda_layer_version (expand)"
		"[root] module.package_with_docker (close)" -> "[root] module.package_with_docker.output.lambda_role_arn (expand)"
		"[root] module.package_with_docker (close)" -> "[root] module.package_with_docker.output.lambda_role_name (expand)"
		"[root] module.package_with_docker (close)" -> "[root] module.package_with_docker.output.lambda_role_unique_id (expand)"
		"[root] module.package_with_docker (close)" -> "[root] module.package_with_docker.output.local_filename (expand)"
		"[root] module.package_with_docker (close)" -> "[root] module.package_with_docker.output.s3_object (expand)"
		"[root] module.package_with_docker.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_with_docker.var.cloudwatch_logs_kms_key_id (expand)"
		"[root] module.package_with_docker.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_with_docker.var.cloudwatch_logs_retention_in_days (expand)"
		"[root] module.package_with_docker.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_with_docker.var.cloudwatch_logs_tags (expand)"
		"[root] module.package_with_docker.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_with_docker.var.create (expand)"
		"[root] module.package_with_docker.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_with_docker.var.create_function (expand)"
		"[root] module.package_with_docker.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_with_docker.var.create_layer (expand)"
		"[root] module.package_with_docker.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_with_docker.var.function_name (expand)"
		"[root] module.package_with_docker.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_with_docker.var.lambda_at_edge (expand)"
		"[root] module.package_with_docker.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_with_docker.var.tags (expand)"
		"[root] module.package_with_docker.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_with_docker.var.use_existing_cloudwatch_log_group (expand)"
		"[root] module.package_with_docker.aws_cloudwatch_log_group.lambda (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_with_docker.aws_iam_policy.additional_inline (expand)" -> "[root] module.package_with_docker.data.aws_iam_policy_document.additional_inline (expand)"
		"[root] module.package_with_docker.aws_iam_policy.additional_inline (expand)" -> "[root] module.package_with_docker.local.role_name (expand)"
		"[root] module.package_with_docker.aws_iam_policy.additional_inline (expand)" -> "[root] module.package_with_docker.var.policy_path (expand)"
		"[root] module.package_with_docker.aws_iam_policy.additional_inline (expand)" -> "[root] module.package_with_docker.var.tags (expand)"
		"[root] module.package_with_docker.aws_iam_policy.additional_json (expand)" -> "[root] module.package_with_docker.local.role_name (expand)"
		"[root] module.package_with_docker.aws_iam_policy.additional_json (expand)" -> "[root] module.package_with_docker.var.attach_policy_json (expand)"
		"[root] module.package_with_docker.aws_iam_policy.additional_json (expand)" -> "[root] module.package_with_docker.var.policy_json (expand)"
		"[root] module.package_with_docker.aws_iam_policy.additional_json (expand)" -> "[root] module.package_with_docker.var.policy_path (expand)"
		"[root] module.package_with_docker.aws_iam_policy.additional_json (expand)" -> "[root] module.package_with_docker.var.tags (expand)"
		"[root] module.package_with_docker.aws_iam_policy.additional_json (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_with_docker.aws_iam_policy.additional_jsons (expand)" -> "[root] module.package_with_docker.local.role_name (expand)"
		"[root] module.package_with_docker.aws_iam_policy.additional_jsons (expand)" -> "[root] module.package_with_docker.var.attach_policy_jsons (expand)"
		"[root] module.package_with_docker.aws_iam_policy.additional_jsons (expand)" -> "[root] module.package_with_docker.var.number_of_policy_jsons (expand)"
		"[root] module.package_with_docker.aws_iam_policy.additional_jsons (expand)" -> "[root] module.package_with_docker.var.policy_jsons (expand)"
		"[root] module.package_with_docker.aws_iam_policy.additional_jsons (expand)" -> "[root] module.package_with_docker.var.policy_path (expand)"
		"[root] module.package_with_docker.aws_iam_policy.additional_jsons (expand)" -> "[root] module.package_with_docker.var.tags (expand)"
		"[root] module.package_with_docker.aws_iam_policy.additional_jsons (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_with_docker.aws_iam_policy.async (expand)" -> "[root] module.package_with_docker.data.aws_iam_policy_document.async (expand)"
		"[root] module.package_with_docker.aws_iam_policy.async (expand)" -> "[root] module.package_with_docker.local.role_name (expand)"
		"[root] module.package_with_docker.aws_iam_policy.async (expand)" -> "[root] module.package_with_docker.var.policy_path (expand)"
		"[root] module.package_with_docker.aws_iam_policy.async (expand)" -> "[root] module.package_with_docker.var.tags (expand)"
		"[root] module.package_with_docker.aws_iam_policy.dead_letter (expand)" -> "[root] module.package_with_docker.data.aws_iam_policy_document.dead_letter (expand)"
		"[root] module.package_with_docker.aws_iam_policy.dead_letter (expand)" -> "[root] module.package_with_docker.local.role_name (expand)"
		"[root] module.package_with_docker.aws_iam_policy.dead_letter (expand)" -> "[root] module.package_with_docker.var.policy_path (expand)"
		"[root] module.package_with_docker.aws_iam_policy.dead_letter (expand)" -> "[root] module.package_with_docker.var.tags (expand)"
		"[root] module.package_with_docker.aws_iam_policy.logs (expand)" -> "[root] module.package_with_docker.data.aws_iam_policy_document.logs (expand)"
		"[root] module.package_with_docker.aws_iam_policy.logs (expand)" -> "[root] module.package_with_docker.local.role_name (expand)"
		"[root] module.package_with_docker.aws_iam_policy.logs (expand)" -> "[root] module.package_with_docker.var.policy_path (expand)"
		"[root] module.package_with_docker.aws_iam_policy.tracing (expand)" -> "[root] module.package_with_docker.data.aws_iam_policy.tracing (expand)"
		"[root] module.package_with_docker.aws_iam_policy.tracing (expand)" -> "[root] module.package_with_docker.local.role_name (expand)"
		"[root] module.package_with_docker.aws_iam_policy.tracing (expand)" -> "[root] module.package_with_docker.var.policy_path (expand)"
		"[root] module.package_with_docker.aws_iam_policy.tracing (expand)" -> "[root] module.package_with_docker.var.tags (expand)"
		"[root] module.package_with_docker.aws_iam_policy.vpc (expand)" -> "[root] module.package_with_docker.data.aws_iam_policy.vpc (expand)"
		"[root] module.package_with_docker.aws_iam_policy.vpc (expand)" -> "[root] module.package_with_docker.local.role_name (expand)"
		"[root] module.package_with_docker.aws_iam_policy.vpc (expand)" -> "[root] module.package_with_docker.var.policy_path (expand)"
		"[root] module.package_with_docker.aws_iam_policy.vpc (expand)" -> "[root] module.package_with_docker.var.tags (expand)"
		"[root] module.package_with_docker.aws_iam_role.lambda (expand)" -> "[root] module.package_with_docker.data.aws_iam_policy_document.assume_role (expand)"
		"[root] module.package_with_docker.aws_iam_role.lambda (expand)" -> "[root] module.package_with_docker.local.role_name (expand)"
		"[root] module.package_with_docker.aws_iam_role.lambda (expand)" -> "[root] module.package_with_docker.var.role_description (expand)"
		"[root] module.package_with_docker.aws_iam_role.lambda (expand)" -> "[root] module.package_with_docker.var.role_force_detach_policies (expand)"
		"[root] module.package_with_docker.aws_iam_role.lambda (expand)" -> "[root] module.package_with_docker.var.role_path (expand)"
		"[root] module.package_with_docker.aws_iam_role.lambda (expand)" -> "[root] module.package_with_docker.var.role_permissions_boundary (expand)"
		"[root] module.package_with_docker.aws_iam_role.lambda (expand)" -> "[root] module.package_with_docker.var.role_tags (expand)"
		"[root] module.package_with_docker.aws_iam_role.lambda (expand)" -> "[root] module.package_with_docker.var.tags (expand)"
		"[root] module.package_with_docker.aws_iam_role_policy_attachment.additional_inline (expand)" -> "[root] module.package_with_docker.aws_iam_policy.additional_inline (expand)"
		"[root] module.package_with_docker.aws_iam_role_policy_attachment.additional_inline (expand)" -> "[root] module.package_with_docker.aws_iam_role.lambda (expand)"
		"[root] module.package_with_docker.aws_iam_role_policy_attachment.additional_json (expand)" -> "[root] module.package_with_docker.aws_iam_policy.additional_json (expand)"
		"[root] module.package_with_docker.aws_iam_role_policy_attachment.additional_json (expand)" -> "[root] module.package_with_docker.aws_iam_role.lambda (expand)"
		"[root] module.package_with_docker.aws_iam_role_policy_attachment.additional_jsons (expand)" -> "[root] module.package_with_docker.aws_iam_policy.additional_jsons (expand)"
		"[root] module.package_with_docker.aws_iam_role_policy_attachment.additional_jsons (expand)" -> "[root] module.package_with_docker.aws_iam_role.lambda (expand)"
		"[root] module.package_with_docker.aws_iam_role_policy_attachment.additional_many (expand)" -> "[root] module.package_with_docker.aws_iam_role.lambda (expand)"
		"[root] module.package_with_docker.aws_iam_role_policy_attachment.additional_many (expand)" -> "[root] module.package_with_docker.var.attach_policies (expand)"
		"[root] module.package_with_docker.aws_iam_role_policy_attachment.additional_many (expand)" -> "[root] module.package_with_docker.var.number_of_policies (expand)"
		"[root] module.package_with_docker.aws_iam_role_policy_attachment.additional_many (expand)" -> "[root] module.package_with_docker.var.policies (expand)"
		"[root] module.package_with_docker.aws_iam_role_policy_attachment.additional_one (expand)" -> "[root] module.package_with_docker.aws_iam_role.lambda (expand)"
		"[root] module.package_with_docker.aws_iam_role_policy_attachment.additional_one (expand)" -> "[root] module.package_with_docker.var.attach_policy (expand)"
		"[root] module.package_with_docker.aws_iam_role_policy_attachment.additional_one (expand)" -> "[root] module.package_with_docker.var.policy (expand)"
		"[root] module.package_with_docker.aws_iam_role_policy_attachment.async (expand)" -> "[root] module.package_with_docker.aws_iam_policy.async (expand)"
		"[root] module.package_with_docker.aws_iam_role_policy_attachment.async (expand)" -> "[root] module.package_with_docker.aws_iam_role.lambda (expand)"
		"[root] module.package_with_docker.aws_iam_role_policy_attachment.dead_letter (expand)" -> "[root] module.package_with_docker.aws_iam_policy.dead_letter (expand)"
		"[root] module.package_with_docker.aws_iam_role_policy_attachment.dead_letter (expand)" -> "[root] module.package_with_docker.aws_iam_role.lambda (expand)"
		"[root] module.package_with_docker.aws_iam_role_policy_attachment.logs (expand)" -> "[root] module.package_with_docker.aws_iam_policy.logs (expand)"
		"[root] module.package_with_docker.aws_iam_role_policy_attachment.logs (expand)" -> "[root] module.package_with_docker.aws_iam_role.lambda (expand)"
		"[root] module.package_with_docker.aws_iam_role_policy_attachment.tracing (expand)" -> "[root] module.package_with_docker.aws_iam_policy.tracing (expand)"
		"[root] module.package_with_docker.aws_iam_role_policy_attachment.tracing (expand)" -> "[root] module.package_with_docker.aws_iam_role.lambda (expand)"
		"[root] module.package_with_docker.aws_iam_role_policy_attachment.vpc (expand)" -> "[root] module.package_with_docker.aws_iam_policy.vpc (expand)"
		"[root] module.package_with_docker.aws_iam_role_policy_attachment.vpc (expand)" -> "[root] module.package_with_docker.aws_iam_role.lambda (expand)"
		"[root] module.package_with_docker.aws_lambda_event_source_mapping.this (expand)" -> "[root] module.package_with_docker.aws_lambda_function.this (expand)"
		"[root] module.package_with_docker.aws_lambda_event_source_mapping.this (expand)" -> "[root] module.package_with_docker.var.create_unqualified_alias_allowed_triggers (expand)"
		"[root] module.package_with_docker.aws_lambda_event_source_mapping.this (expand)" -> "[root] module.package_with_docker.var.event_source_mapping (expand)"
		"[root] module.package_with_docker.aws_lambda_function.this (expand)" -> "[root] module.package_with_docker.aws_cloudwatch_log_group.lambda (expand)"
		"[root] module.package_with_docker.aws_lambda_function.this (expand)" -> "[root] module.package_with_docker.aws_iam_role.lambda (expand)"
		"[root] module.package_with_docker.aws_lambda_function.this (expand)" -> "[root] module.package_with_docker.local.filename (expand)"
		"[root] module.package_with_docker.aws_lambda_function.this (expand)" -> "[root] module.package_with_docker.local.s3_bucket (expand)"
		"[root] module.package_with_docker.aws_lambda_function.this (expand)" -> "[root] module.package_with_docker.local.s3_object_version (expand)"
		"[root] module.package_with_docker.aws_lambda_function.this (expand)" -> "[root] module.package_with_docker.local.was_missing (expand)"
		"[root] module.package_with_docker.aws_lambda_function.this (expand)" -> "[root] module.package_with_docker.var.architectures (expand)"
		"[root] module.package_with_docker.aws_lambda_function.this (expand)" -> "[root] module.package_with_docker.var.dead_letter_target_arn (expand)"
		"[root] module.package_with_docker.aws_lambda_function.this (expand)" -> "[root] module.package_with_docker.var.description (expand)"
		"[root] module.package_with_docker.aws_lambda_function.this (expand)" -> "[root] module.package_with_docker.var.environment_variables (expand)"
		"[root] module.package_with_docker.aws_lambda_function.this (expand)" -> "[root] module.package_with_docker.var.file_system_arn (expand)"
		"[root] module.package_with_docker.aws_lambda_function.this (expand)" -> "[root] module.package_with_docker.var.file_system_local_mount_path (expand)"
		"[root] module.package_with_docker.aws_lambda_function.this (expand)" -> "[root] module.package_with_docker.var.handler (expand)"
		"[root] module.package_with_docker.aws_lambda_function.this (expand)" -> "[root] module.package_with_docker.var.ignore_source_code_hash (expand)"
		"[root] module.package_with_docker.aws_lambda_function.this (expand)" -> "[root] module.package_with_docker.var.image_config_command (expand)"
		"[root] module.package_with_docker.aws_lambda_function.this (expand)" -> "[root] module.package_with_docker.var.image_config_entry_point (expand)"
		"[root] module.package_with_docker.aws_lambda_function.this (expand)" -> "[root] module.package_with_docker.var.image_config_working_directory (expand)"
		"[root] module.package_with_docker.aws_lambda_function.this (expand)" -> "[root] module.package_with_docker.var.image_uri (expand)"
		"[root] module.package_with_docker.aws_lambda_function.this (expand)" -> "[root] module.package_with_docker.var.kms_key_arn (expand)"
		"[root] module.package_with_docker.aws_lambda_function.this (expand)" -> "[root] module.package_with_docker.var.lambda_role (expand)"
		"[root] module.package_with_docker.aws_lambda_function.this (expand)" -> "[root] module.package_with_docker.var.layers (expand)"
		"[root] module.package_with_docker.aws_lambda_function.this (expand)" -> "[root] module.package_with_docker.var.memory_size (expand)"
		"[root] module.package_with_docker.aws_lambda_function.this (expand)" -> "[root] module.package_with_docker.var.package_type (expand)"
		"[root] module.package_with_docker.aws_lambda_function.this (expand)" -> "[root] module.package_with_docker.var.publish (expand)"
		"[root] module.package_with_docker.aws_lambda_function.this (expand)" -> "[root] module.package_with_docker.var.reserved_concurrent_executions (expand)"
		"[root] module.package_with_docker.aws_lambda_function.this (expand)" -> "[root] module.package_with_docker.var.timeout (expand)"
		"[root] module.package_with_docker.aws_lambda_function.this (expand)" -> "[root] module.package_with_docker.var.tracing_mode (expand)"
		"[root] module.package_with_docker.aws_lambda_function.this (expand)" -> "[root] module.package_with_docker.var.vpc_security_group_ids (expand)"
		"[root] module.package_with_docker.aws_lambda_function.this (expand)" -> "[root] module.package_with_docker.var.vpc_subnet_ids (expand)"
		"[root] module.package_with_docker.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.package_with_docker.aws_lambda_function.this (expand)"
		"[root] module.package_with_docker.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.package_with_docker.local.qualifiers (expand)"
		"[root] module.package_with_docker.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.package_with_docker.var.create_async_event_config (expand)"
		"[root] module.package_with_docker.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.package_with_docker.var.destination_on_failure (expand)"
		"[root] module.package_with_docker.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.package_with_docker.var.destination_on_success (expand)"
		"[root] module.package_with_docker.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.package_with_docker.var.maximum_event_age_in_seconds (expand)"
		"[root] module.package_with_docker.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.package_with_docker.var.maximum_retry_attempts (expand)"
		"[root] module.package_with_docker.aws_lambda_layer_version.this (expand)" -> "[root] module.package_with_docker.local.filename (expand)"
		"[root] module.package_with_docker.aws_lambda_layer_version.this (expand)" -> "[root] module.package_with_docker.local.s3_bucket (expand)"
		"[root] module.package_with_docker.aws_lambda_layer_version.this (expand)" -> "[root] module.package_with_docker.local.s3_object_version (expand)"
		"[root] module.package_with_docker.aws_lambda_layer_version.this (expand)" -> "[root] module.package_with_docker.local.was_missing (expand)"
		"[root] module.package_with_docker.aws_lambda_layer_version.this (expand)" -> "[root] module.package_with_docker.var.compatible_architectures (expand)"
		"[root] module.package_with_docker.aws_lambda_layer_version.this (expand)" -> "[root] module.package_with_docker.var.compatible_runtimes (expand)"
		"[root] module.package_with_docker.aws_lambda_layer_version.this (expand)" -> "[root] module.package_with_docker.var.create_layer (expand)"
		"[root] module.package_with_docker.aws_lambda_layer_version.this (expand)" -> "[root] module.package_with_docker.var.description (expand)"
		"[root] module.package_with_docker.aws_lambda_layer_version.this (expand)" -> "[root] module.package_with_docker.var.ignore_source_code_hash (expand)"
		"[root] module.package_with_docker.aws_lambda_layer_version.this (expand)" -> "[root] module.package_with_docker.var.layer_name (expand)"
		"[root] module.package_with_docker.aws_lambda_layer_version.this (expand)" -> "[root] module.package_with_docker.var.license_info (expand)"
		"[root] module.package_with_docker.aws_lambda_permission.current_version_triggers (expand)" -> "[root] module.package_with_docker.aws_lambda_function.this (expand)"
		"[root] module.package_with_docker.aws_lambda_permission.current_version_triggers (expand)" -> "[root] module.package_with_docker.var.allowed_triggers (expand)"
		"[root] module.package_with_docker.aws_lambda_permission.current_version_triggers (expand)" -> "[root] module.package_with_docker.var.create_current_version_allowed_triggers (expand)"
		"[root] module.package_with_docker.aws_lambda_permission.unqualified_alias_triggers (expand)" -> "[root] module.package_with_docker.aws_lambda_function.this (expand)"
		"[root] module.package_with_docker.aws_lambda_permission.unqualified_alias_triggers (expand)" -> "[root] module.package_with_docker.var.allowed_triggers (expand)"
		"[root] module.package_with_docker.aws_lambda_permission.unqualified_alias_triggers (expand)" -> "[root] module.package_with_docker.var.create_unqualified_alias_allowed_triggers (expand)"
		"[root] module.package_with_docker.aws_lambda_provisioned_concurrency_config.current_version (expand)" -> "[root] module.package_with_docker.aws_lambda_function.this (expand)"
		"[root] module.package_with_docker.aws_lambda_provisioned_concurrency_config.current_version (expand)" -> "[root] module.package_with_docker.var.provisioned_concurrent_executions (expand)"
		"[root] module.package_with_docker.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.package_with_docker.local.s3_key (expand)"
		"[root] module.package_with_docker.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.package_with_docker.null_resource.archive (expand)"
		"[root] module.package_with_docker.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.package_with_docker.var.s3_acl (expand)"
		"[root] module.package_with_docker.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.package_with_docker.var.s3_bucket (expand)"
		"[root] module.package_with_docker.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.package_with_docker.var.s3_object_storage_class (expand)"
		"[root] module.package_with_docker.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.package_with_docker.var.s3_object_tags (expand)"
		"[root] module.package_with_docker.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.package_with_docker.var.s3_server_side_encryption (expand)"
		"[root] module.package_with_docker.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.package_with_docker.var.tags (expand)"
		"[root] module.package_with_docker.aws_s3_bucket_object.lambda_package (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_with_docker.data.aws_arn.log_group_arn (expand)" -> "[root] module.package_with_docker.local.create_role (expand)"
		"[root] module.package_with_docker.data.aws_arn.log_group_arn (expand)" -> "[root] module.package_with_docker.local.log_group_arn_regional (expand)"
		"[root] module.package_with_docker.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_with_docker.var.create (expand)"
		"[root] module.package_with_docker.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_with_docker.var.create_function (expand)"
		"[root] module.package_with_docker.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_with_docker.var.create_layer (expand)"
		"[root] module.package_with_docker.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_with_docker.var.function_name (expand)"
		"[root] module.package_with_docker.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_with_docker.var.lambda_at_edge (expand)"
		"[root] module.package_with_docker.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_with_docker.var.use_existing_cloudwatch_log_group (expand)"
		"[root] module.package_with_docker.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_with_docker.data.aws_iam_policy.tracing (expand)" -> "[root] module.package_with_docker.data.aws_partition.current (expand)"
		"[root] module.package_with_docker.data.aws_iam_policy.tracing (expand)" -> "[root] module.package_with_docker.local.create_role (expand)"
		"[root] module.package_with_docker.data.aws_iam_policy.tracing (expand)" -> "[root] module.package_with_docker.var.attach_tracing_policy (expand)"
		"[root] module.package_with_docker.data.aws_iam_policy.vpc (expand)" -> "[root] module.package_with_docker.data.aws_partition.current (expand)"
		"[root] module.package_with_docker.data.aws_iam_policy.vpc (expand)" -> "[root] module.package_with_docker.local.create_role (expand)"
		"[root] module.package_with_docker.data.aws_iam_policy.vpc (expand)" -> "[root] module.package_with_docker.var.attach_network_policy (expand)"
		"[root] module.package_with_docker.data.aws_iam_policy_document.additional_inline (expand)" -> "[root] module.package_with_docker.local.create_role (expand)"
		"[root] module.package_with_docker.data.aws_iam_policy_document.additional_inline (expand)" -> "[root] module.package_with_docker.var.attach_policy_statements (expand)"
		"[root] module.package_with_docker.data.aws_iam_policy_document.additional_inline (expand)" -> "[root] module.package_with_docker.var.policy_statements (expand)"
		"[root] module.package_with_docker.data.aws_iam_policy_document.additional_inline (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_with_docker.data.aws_iam_policy_document.assume_role (expand)" -> "[root] module.package_with_docker.local.create_role (expand)"
		"[root] module.package_with_docker.data.aws_iam_policy_document.assume_role (expand)" -> "[root] module.package_with_docker.local.trusted_entities_principals (expand)"
		"[root] module.package_with_docker.data.aws_iam_policy_document.assume_role (expand)" -> "[root] module.package_with_docker.local.trusted_entities_services (expand)"
		"[root] module.package_with_docker.data.aws_iam_policy_document.assume_role (expand)" -> "[root] module.package_with_docker.var.assume_role_policy_statements (expand)"
		"[root] module.package_with_docker.data.aws_iam_policy_document.assume_role (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_with_docker.data.aws_iam_policy_document.async (expand)" -> "[root] module.package_with_docker.local.create_role (expand)"
		"[root] module.package_with_docker.data.aws_iam_policy_document.async (expand)" -> "[root] module.package_with_docker.var.attach_async_event_policy (expand)"
		"[root] module.package_with_docker.data.aws_iam_policy_document.async (expand)" -> "[root] module.package_with_docker.var.destination_on_failure (expand)"
		"[root] module.package_with_docker.data.aws_iam_policy_document.async (expand)" -> "[root] module.package_with_docker.var.destination_on_success (expand)"
		"[root] module.package_with_docker.data.aws_iam_policy_document.async (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_with_docker.data.aws_iam_policy_document.dead_letter (expand)" -> "[root] module.package_with_docker.local.create_role (expand)"
		"[root] module.package_with_docker.data.aws_iam_policy_document.dead_letter (expand)" -> "[root] module.package_with_docker.var.attach_dead_letter_policy (expand)"
		"[root] module.package_with_docker.data.aws_iam_policy_document.dead_letter (expand)" -> "[root] module.package_with_docker.var.dead_letter_target_arn (expand)"
		"[root] module.package_with_docker.data.aws_iam_policy_document.dead_letter (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_with_docker.data.aws_iam_policy_document.logs (expand)" -> "[root] module.package_with_docker.local.log_group_arn (expand)"
		"[root] module.package_with_docker.data.aws_iam_policy_document.logs (expand)" -> "[root] module.package_with_docker.var.attach_cloudwatch_logs_policy (expand)"
		"[root] module.package_with_docker.data.aws_partition.current (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.data.aws_partition.current (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_with_docker.data.external.archive_prepare (expand)" -> "[root] module.package_with_docker.local.python (expand)"
		"[root] module.package_with_docker.data.external.archive_prepare (expand)" -> "[root] module.package_with_docker.var.artifacts_dir (expand)"
		"[root] module.package_with_docker.data.external.archive_prepare (expand)" -> "[root] module.package_with_docker.var.build_in_docker (expand)"
		"[root] module.package_with_docker.data.external.archive_prepare (expand)" -> "[root] module.package_with_docker.var.create (expand)"
		"[root] module.package_with_docker.data.external.archive_prepare (expand)" -> "[root] module.package_with_docker.var.create_package (expand)"
		"[root] module.package_with_docker.data.external.archive_prepare (expand)" -> "[root] module.package_with_docker.var.docker_build_root (expand)"
		"[root] module.package_with_docker.data.external.archive_prepare (expand)" -> "[root] module.package_with_docker.var.docker_file (expand)"
		"[root] module.package_with_docker.data.external.archive_prepare (expand)" -> "[root] module.package_with_docker.var.docker_image (expand)"
		"[root] module.package_with_docker.data.external.archive_prepare (expand)" -> "[root] module.package_with_docker.var.docker_pip_cache (expand)"
		"[root] module.package_with_docker.data.external.archive_prepare (expand)" -> "[root] module.package_with_docker.var.docker_with_ssh_agent (expand)"
		"[root] module.package_with_docker.data.external.archive_prepare (expand)" -> "[root] module.package_with_docker.var.hash_extra (expand)"
		"[root] module.package_with_docker.data.external.archive_prepare (expand)" -> "[root] module.package_with_docker.var.recreate_missing_package (expand)"
		"[root] module.package_with_docker.data.external.archive_prepare (expand)" -> "[root] module.package_with_docker.var.runtime (expand)"
		"[root] module.package_with_docker.data.external.archive_prepare (expand)" -> "[root] module.package_with_docker.var.source_path (expand)"
		"[root] module.package_with_docker.data.external.archive_prepare (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/external\"]"
		"[root] module.package_with_docker.local.archive_filename (expand)" -> "[root] module.package_with_docker.data.external.archive_prepare (expand)"
		"[root] module.package_with_docker.local.archive_was_missing (expand)" -> "[root] module.package_with_docker.data.external.archive_prepare (expand)"
		"[root] module.package_with_docker.local.create_role (expand)" -> "[root] module.package_with_docker.var.create (expand)"
		"[root] module.package_with_docker.local.create_role (expand)" -> "[root] module.package_with_docker.var.create_function (expand)"
		"[root] module.package_with_docker.local.create_role (expand)" -> "[root] module.package_with_docker.var.create_layer (expand)"
		"[root] module.package_with_docker.local.create_role (expand)" -> "[root] module.package_with_docker.var.create_role (expand)"
		"[root] module.package_with_docker.local.filename (expand)" -> "[root] module.package_with_docker.local.archive_filename (expand)"
		"[root] module.package_with_docker.local.filename (expand)" -> "[root] module.package_with_docker.var.local_existing_package (expand)"
		"[root] module.package_with_docker.local.filename (expand)" -> "[root] module.package_with_docker.var.store_on_s3 (expand)"
		"[root] module.package_with_docker.local.log_group_arn (expand)" -> "[root] module.package_with_docker.data.aws_arn.log_group_arn (expand)"
		"[root] module.package_with_docker.local.log_group_arn_regional (expand)" -> "[root] module.package_with_docker.aws_cloudwatch_log_group.lambda (expand)"
		"[root] module.package_with_docker.local.log_group_arn_regional (expand)" -> "[root] module.package_with_docker.data.aws_cloudwatch_log_group.lambda (expand)"
		"[root] module.package_with_docker.local.log_group_name (expand)" -> "[root] module.package_with_docker.aws_cloudwatch_log_group.lambda (expand)"
		"[root] module.package_with_docker.local.log_group_name (expand)" -> "[root] module.package_with_docker.data.aws_cloudwatch_log_group.lambda (expand)"
		"[root] module.package_with_docker.local.python (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.local.qualifiers (expand)" -> "[root] module.package_with_docker.var.create_current_version_async_event_config (expand)"
		"[root] module.package_with_docker.local.qualifiers (expand)" -> "[root] module.package_with_docker.var.create_unqualified_alias_async_event_config (expand)"
		"[root] module.package_with_docker.local.role_name (expand)" -> "[root] module.package_with_docker.local.create_role (expand)"
		"[root] module.package_with_docker.local.role_name (expand)" -> "[root] module.package_with_docker.var.function_name (expand)"
		"[root] module.package_with_docker.local.role_name (expand)" -> "[root] module.package_with_docker.var.role_name (expand)"
		"[root] module.package_with_docker.local.s3_bucket (expand)" -> "[root] module.package_with_docker.var.s3_bucket (expand)"
		"[root] module.package_with_docker.local.s3_bucket (expand)" -> "[root] module.package_with_docker.var.s3_existing_package (expand)"
		"[root] module.package_with_docker.local.s3_bucket (expand)" -> "[root] module.package_with_docker.var.store_on_s3 (expand)"
		"[root] module.package_with_docker.local.s3_key (expand)" -> "[root] module.package_with_docker.local.archive_filename (expand)"
		"[root] module.package_with_docker.local.s3_key (expand)" -> "[root] module.package_with_docker.var.s3_existing_package (expand)"
		"[root] module.package_with_docker.local.s3_key (expand)" -> "[root] module.package_with_docker.var.s3_prefix (expand)"
		"[root] module.package_with_docker.local.s3_key (expand)" -> "[root] module.package_with_docker.var.store_on_s3 (expand)"
		"[root] module.package_with_docker.local.s3_object_version (expand)" -> "[root] module.package_with_docker.aws_s3_bucket_object.lambda_package (expand)"
		"[root] module.package_with_docker.local.trusted_entities_principals (expand)" -> "[root] module.package_with_docker.var.trusted_entities (expand)"
		"[root] module.package_with_docker.local.trusted_entities_services (expand)" -> "[root] module.package_with_docker.var.lambda_at_edge (expand)"
		"[root] module.package_with_docker.local.trusted_entities_services (expand)" -> "[root] module.package_with_docker.var.trusted_entities (expand)"
		"[root] module.package_with_docker.local.was_missing (expand)" -> "[root] module.package_with_docker.local.archive_was_missing (expand)"
		"[root] module.package_with_docker.local.was_missing (expand)" -> "[root] module.package_with_docker.var.local_existing_package (expand)"
		"[root] module.package_with_docker.local_file.archive_plan (expand)" -> "[root] module.package_with_docker.data.external.archive_prepare (expand)"
		"[root] module.package_with_docker.local_file.archive_plan (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/local\"]"
		"[root] module.package_with_docker.null_resource.archive (expand)" -> "[root] module.package_with_docker.local_file.archive_plan (expand)"
		"[root] module.package_with_docker.null_resource.archive (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/null\"]"
		"[root] module.package_with_docker.null_resource.archive (expand)" -> "[root] provisioner.local-exec"
		"[root] module.package_with_docker.output.lambda_cloudwatch_log_group_arn (expand)" -> "[root] module.package_with_docker.local.log_group_arn (expand)"
		"[root] module.package_with_docker.output.lambda_cloudwatch_log_group_name (expand)" -> "[root] module.package_with_docker.local.log_group_name (expand)"
		"[root] module.package_with_docker.output.lambda_event_source_mapping_function_arn (expand)" -> "[root] module.package_with_docker.aws_lambda_event_source_mapping.this (expand)"
		"[root] module.package_with_docker.output.lambda_event_source_mapping_state (expand)" -> "[root] module.package_with_docker.aws_lambda_event_source_mapping.this (expand)"
		"[root] module.package_with_docker.output.lambda_event_source_mapping_state_transition_reason (expand)" -> "[root] module.package_with_docker.aws_lambda_event_source_mapping.this (expand)"
		"[root] module.package_with_docker.output.lambda_event_source_mapping_uuid (expand)" -> "[root] module.package_with_docker.aws_lambda_event_source_mapping.this (expand)"
		"[root] module.package_with_docker.output.lambda_function_arn (expand)" -> "[root] module.package_with_docker.aws_lambda_function.this (expand)"
		"[root] module.package_with_docker.output.lambda_function_invoke_arn (expand)" -> "[root] module.package_with_docker.aws_lambda_function.this (expand)"
		"[root] module.package_with_docker.output.lambda_function_kms_key_arn (expand)" -> "[root] module.package_with_docker.aws_lambda_function.this (expand)"
		"[root] module.package_with_docker.output.lambda_function_last_modified (expand)" -> "[root] module.package_with_docker.aws_lambda_function.this (expand)"
		"[root] module.package_with_docker.output.lambda_function_name (expand)" -> "[root] module.package_with_docker.aws_lambda_function.this (expand)"
		"[root] module.package_with_docker.output.lambda_function_qualified_arn (expand)" -> "[root] module.package_with_docker.aws_lambda_function.this (expand)"
		"[root] module.package_with_docker.output.lambda_function_source_code_hash (expand)" -> "[root] module.package_with_docker.aws_lambda_function.this (expand)"
		"[root] module.package_with_docker.output.lambda_function_source_code_size (expand)" -> "[root] module.package_with_docker.aws_lambda_function.this (expand)"
		"[root] module.package_with_docker.output.lambda_function_version (expand)" -> "[root] module.package_with_docker.aws_lambda_function.this (expand)"
		"[root] module.package_with_docker.output.lambda_layer_arn (expand)" -> "[root] module.package_with_docker.aws_lambda_layer_version.this (expand)"
		"[root] module.package_with_docker.output.lambda_layer_created_date (expand)" -> "[root] module.package_with_docker.aws_lambda_layer_version.this (expand)"
		"[root] module.package_with_docker.output.lambda_layer_layer_arn (expand)" -> "[root] module.package_with_docker.aws_lambda_layer_version.this (expand)"
		"[root] module.package_with_docker.output.lambda_layer_source_code_size (expand)" -> "[root] module.package_with_docker.aws_lambda_layer_version.this (expand)"
		"[root] module.package_with_docker.output.lambda_layer_version (expand)" -> "[root] module.package_with_docker.aws_lambda_layer_version.this (expand)"
		"[root] module.package_with_docker.output.lambda_role_arn (expand)" -> "[root] module.package_with_docker.aws_iam_role.lambda (expand)"
		"[root] module.package_with_docker.output.lambda_role_name (expand)" -> "[root] module.package_with_docker.aws_iam_role.lambda (expand)"
		"[root] module.package_with_docker.output.lambda_role_unique_id (expand)" -> "[root] module.package_with_docker.aws_iam_role.lambda (expand)"
		"[root] module.package_with_docker.output.local_filename (expand)" -> "[root] module.package_with_docker.local.filename (expand)"
		"[root] module.package_with_docker.output.s3_object (expand)" -> "[root] module.package_with_docker.local.s3_bucket (expand)"
		"[root] module.package_with_docker.output.s3_object (expand)" -> "[root] module.package_with_docker.local.s3_object_version (expand)"
		"[root] module.package_with_docker.var.allowed_triggers (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.architectures (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.artifacts_dir (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.assume_role_policy_statements (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.attach_async_event_policy (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.attach_cloudwatch_logs_policy (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.attach_dead_letter_policy (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.attach_network_policy (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.attach_policies (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.attach_policy (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.attach_policy_json (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.attach_policy_jsons (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.attach_policy_statements (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.attach_tracing_policy (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.build_in_docker (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.cloudwatch_logs_kms_key_id (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.cloudwatch_logs_retention_in_days (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.cloudwatch_logs_tags (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.compatible_architectures (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.compatible_runtimes (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.create (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.create_async_event_config (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.create_current_version_allowed_triggers (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.create_current_version_async_event_config (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.create_function (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.create_layer (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.create_package (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.create_role (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.create_unqualified_alias_allowed_triggers (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.create_unqualified_alias_async_event_config (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.dead_letter_target_arn (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.description (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.destination_on_failure (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.destination_on_success (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.docker_build_root (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.docker_file (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.docker_image (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.docker_pip_cache (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.docker_with_ssh_agent (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.environment_variables (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.event_source_mapping (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.file_system_arn (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.file_system_local_mount_path (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.function_name (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.handler (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.hash_extra (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.ignore_source_code_hash (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.image_config_command (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.image_config_entry_point (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.image_config_working_directory (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.image_uri (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.kms_key_arn (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.lambda_at_edge (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.lambda_role (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.layer_name (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.layers (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.license_info (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.local_existing_package (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.maximum_event_age_in_seconds (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.maximum_retry_attempts (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.memory_size (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.number_of_policies (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.number_of_policy_jsons (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.package_type (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.policies (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.policy (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.policy_json (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.policy_jsons (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.policy_path (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.policy_statements (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.provisioned_concurrent_executions (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.publish (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.recreate_missing_package (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.reserved_concurrent_executions (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.role_description (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.role_force_detach_policies (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.role_name (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.role_path (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.role_permissions_boundary (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.role_tags (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.runtime (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.s3_acl (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.s3_bucket (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.s3_existing_package (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.s3_object_storage_class (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.s3_object_tags (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.s3_prefix (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.s3_server_side_encryption (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.source_path (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.store_on_s3 (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.tags (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.timeout (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.tracing_mode (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.trusted_entities (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.use_existing_cloudwatch_log_group (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.vpc_security_group_ids (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_docker.var.vpc_subnet_ids (expand)" -> "[root] module.package_with_docker (expand)"
		"[root] module.package_with_patterns (close)" -> "[root] module.package_with_patterns.aws_iam_role_policy_attachment.additional_inline (expand)"
		"[root] module.package_with_patterns (close)" -> "[root] module.package_with_patterns.aws_iam_role_policy_attachment.additional_json (expand)"
		"[root] module.package_with_patterns (close)" -> "[root] module.package_with_patterns.aws_iam_role_policy_attachment.additional_jsons (expand)"
		"[root] module.package_with_patterns (close)" -> "[root] module.package_with_patterns.aws_iam_role_policy_attachment.additional_many (expand)"
		"[root] module.package_with_patterns (close)" -> "[root] module.package_with_patterns.aws_iam_role_policy_attachment.additional_one (expand)"
		"[root] module.package_with_patterns (close)" -> "[root] module.package_with_patterns.aws_iam_role_policy_attachment.async (expand)"
		"[root] module.package_with_patterns (close)" -> "[root] module.package_with_patterns.aws_iam_role_policy_attachment.dead_letter (expand)"
		"[root] module.package_with_patterns (close)" -> "[root] module.package_with_patterns.aws_iam_role_policy_attachment.logs (expand)"
		"[root] module.package_with_patterns (close)" -> "[root] module.package_with_patterns.aws_iam_role_policy_attachment.tracing (expand)"
		"[root] module.package_with_patterns (close)" -> "[root] module.package_with_patterns.aws_iam_role_policy_attachment.vpc (expand)"
		"[root] module.package_with_patterns (close)" -> "[root] module.package_with_patterns.aws_lambda_function_event_invoke_config.this (expand)"
		"[root] module.package_with_patterns (close)" -> "[root] module.package_with_patterns.aws_lambda_permission.current_version_triggers (expand)"
		"[root] module.package_with_patterns (close)" -> "[root] module.package_with_patterns.aws_lambda_permission.unqualified_alias_triggers (expand)"
		"[root] module.package_with_patterns (close)" -> "[root] module.package_with_patterns.aws_lambda_provisioned_concurrency_config.current_version (expand)"
		"[root] module.package_with_patterns (close)" -> "[root] module.package_with_patterns.output.lambda_cloudwatch_log_group_arn (expand)"
		"[root] module.package_with_patterns (close)" -> "[root] module.package_with_patterns.output.lambda_cloudwatch_log_group_name (expand)"
		"[root] module.package_with_patterns (close)" -> "[root] module.package_with_patterns.output.lambda_event_source_mapping_function_arn (expand)"
		"[root] module.package_with_patterns (close)" -> "[root] module.package_with_patterns.output.lambda_event_source_mapping_state (expand)"
		"[root] module.package_with_patterns (close)" -> "[root] module.package_with_patterns.output.lambda_event_source_mapping_state_transition_reason (expand)"
		"[root] module.package_with_patterns (close)" -> "[root] module.package_with_patterns.output.lambda_event_source_mapping_uuid (expand)"
		"[root] module.package_with_patterns (close)" -> "[root] module.package_with_patterns.output.lambda_function_arn (expand)"
		"[root] module.package_with_patterns (close)" -> "[root] module.package_with_patterns.output.lambda_function_invoke_arn (expand)"
		"[root] module.package_with_patterns (close)" -> "[root] module.package_with_patterns.output.lambda_function_kms_key_arn (expand)"
		"[root] module.package_with_patterns (close)" -> "[root] module.package_with_patterns.output.lambda_function_last_modified (expand)"
		"[root] module.package_with_patterns (close)" -> "[root] module.package_with_patterns.output.lambda_function_name (expand)"
		"[root] module.package_with_patterns (close)" -> "[root] module.package_with_patterns.output.lambda_function_qualified_arn (expand)"
		"[root] module.package_with_patterns (close)" -> "[root] module.package_with_patterns.output.lambda_function_source_code_hash (expand)"
		"[root] module.package_with_patterns (close)" -> "[root] module.package_with_patterns.output.lambda_function_source_code_size (expand)"
		"[root] module.package_with_patterns (close)" -> "[root] module.package_with_patterns.output.lambda_function_version (expand)"
		"[root] module.package_with_patterns (close)" -> "[root] module.package_with_patterns.output.lambda_layer_arn (expand)"
		"[root] module.package_with_patterns (close)" -> "[root] module.package_with_patterns.output.lambda_layer_created_date (expand)"
		"[root] module.package_with_patterns (close)" -> "[root] module.package_with_patterns.output.lambda_layer_layer_arn (expand)"
		"[root] module.package_with_patterns (close)" -> "[root] module.package_with_patterns.output.lambda_layer_source_code_size (expand)"
		"[root] module.package_with_patterns (close)" -> "[root] module.package_with_patterns.output.lambda_layer_version (expand)"
		"[root] module.package_with_patterns (close)" -> "[root] module.package_with_patterns.output.lambda_role_arn (expand)"
		"[root] module.package_with_patterns (close)" -> "[root] module.package_with_patterns.output.lambda_role_name (expand)"
		"[root] module.package_with_patterns (close)" -> "[root] module.package_with_patterns.output.lambda_role_unique_id (expand)"
		"[root] module.package_with_patterns (close)" -> "[root] module.package_with_patterns.output.local_filename (expand)"
		"[root] module.package_with_patterns (close)" -> "[root] module.package_with_patterns.output.s3_object (expand)"
		"[root] module.package_with_patterns.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_with_patterns.var.cloudwatch_logs_kms_key_id (expand)"
		"[root] module.package_with_patterns.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_with_patterns.var.cloudwatch_logs_retention_in_days (expand)"
		"[root] module.package_with_patterns.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_with_patterns.var.cloudwatch_logs_tags (expand)"
		"[root] module.package_with_patterns.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_with_patterns.var.create (expand)"
		"[root] module.package_with_patterns.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_with_patterns.var.create_function (expand)"
		"[root] module.package_with_patterns.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_with_patterns.var.create_layer (expand)"
		"[root] module.package_with_patterns.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_with_patterns.var.function_name (expand)"
		"[root] module.package_with_patterns.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_with_patterns.var.lambda_at_edge (expand)"
		"[root] module.package_with_patterns.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_with_patterns.var.tags (expand)"
		"[root] module.package_with_patterns.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_with_patterns.var.use_existing_cloudwatch_log_group (expand)"
		"[root] module.package_with_patterns.aws_cloudwatch_log_group.lambda (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_with_patterns.aws_iam_policy.additional_inline (expand)" -> "[root] module.package_with_patterns.data.aws_iam_policy_document.additional_inline (expand)"
		"[root] module.package_with_patterns.aws_iam_policy.additional_inline (expand)" -> "[root] module.package_with_patterns.local.role_name (expand)"
		"[root] module.package_with_patterns.aws_iam_policy.additional_inline (expand)" -> "[root] module.package_with_patterns.var.policy_path (expand)"
		"[root] module.package_with_patterns.aws_iam_policy.additional_inline (expand)" -> "[root] module.package_with_patterns.var.tags (expand)"
		"[root] module.package_with_patterns.aws_iam_policy.additional_json (expand)" -> "[root] module.package_with_patterns.local.role_name (expand)"
		"[root] module.package_with_patterns.aws_iam_policy.additional_json (expand)" -> "[root] module.package_with_patterns.var.attach_policy_json (expand)"
		"[root] module.package_with_patterns.aws_iam_policy.additional_json (expand)" -> "[root] module.package_with_patterns.var.policy_json (expand)"
		"[root] module.package_with_patterns.aws_iam_policy.additional_json (expand)" -> "[root] module.package_with_patterns.var.policy_path (expand)"
		"[root] module.package_with_patterns.aws_iam_policy.additional_json (expand)" -> "[root] module.package_with_patterns.var.tags (expand)"
		"[root] module.package_with_patterns.aws_iam_policy.additional_json (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_with_patterns.aws_iam_policy.additional_jsons (expand)" -> "[root] module.package_with_patterns.local.role_name (expand)"
		"[root] module.package_with_patterns.aws_iam_policy.additional_jsons (expand)" -> "[root] module.package_with_patterns.var.attach_policy_jsons (expand)"
		"[root] module.package_with_patterns.aws_iam_policy.additional_jsons (expand)" -> "[root] module.package_with_patterns.var.number_of_policy_jsons (expand)"
		"[root] module.package_with_patterns.aws_iam_policy.additional_jsons (expand)" -> "[root] module.package_with_patterns.var.policy_jsons (expand)"
		"[root] module.package_with_patterns.aws_iam_policy.additional_jsons (expand)" -> "[root] module.package_with_patterns.var.policy_path (expand)"
		"[root] module.package_with_patterns.aws_iam_policy.additional_jsons (expand)" -> "[root] module.package_with_patterns.var.tags (expand)"
		"[root] module.package_with_patterns.aws_iam_policy.additional_jsons (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_with_patterns.aws_iam_policy.async (expand)" -> "[root] module.package_with_patterns.data.aws_iam_policy_document.async (expand)"
		"[root] module.package_with_patterns.aws_iam_policy.async (expand)" -> "[root] module.package_with_patterns.local.role_name (expand)"
		"[root] module.package_with_patterns.aws_iam_policy.async (expand)" -> "[root] module.package_with_patterns.var.policy_path (expand)"
		"[root] module.package_with_patterns.aws_iam_policy.async (expand)" -> "[root] module.package_with_patterns.var.tags (expand)"
		"[root] module.package_with_patterns.aws_iam_policy.dead_letter (expand)" -> "[root] module.package_with_patterns.data.aws_iam_policy_document.dead_letter (expand)"
		"[root] module.package_with_patterns.aws_iam_policy.dead_letter (expand)" -> "[root] module.package_with_patterns.local.role_name (expand)"
		"[root] module.package_with_patterns.aws_iam_policy.dead_letter (expand)" -> "[root] module.package_with_patterns.var.policy_path (expand)"
		"[root] module.package_with_patterns.aws_iam_policy.dead_letter (expand)" -> "[root] module.package_with_patterns.var.tags (expand)"
		"[root] module.package_with_patterns.aws_iam_policy.logs (expand)" -> "[root] module.package_with_patterns.data.aws_iam_policy_document.logs (expand)"
		"[root] module.package_with_patterns.aws_iam_policy.logs (expand)" -> "[root] module.package_with_patterns.local.role_name (expand)"
		"[root] module.package_with_patterns.aws_iam_policy.logs (expand)" -> "[root] module.package_with_patterns.var.policy_path (expand)"
		"[root] module.package_with_patterns.aws_iam_policy.tracing (expand)" -> "[root] module.package_with_patterns.data.aws_iam_policy.tracing (expand)"
		"[root] module.package_with_patterns.aws_iam_policy.tracing (expand)" -> "[root] module.package_with_patterns.local.role_name (expand)"
		"[root] module.package_with_patterns.aws_iam_policy.tracing (expand)" -> "[root] module.package_with_patterns.var.policy_path (expand)"
		"[root] module.package_with_patterns.aws_iam_policy.tracing (expand)" -> "[root] module.package_with_patterns.var.tags (expand)"
		"[root] module.package_with_patterns.aws_iam_policy.vpc (expand)" -> "[root] module.package_with_patterns.data.aws_iam_policy.vpc (expand)"
		"[root] module.package_with_patterns.aws_iam_policy.vpc (expand)" -> "[root] module.package_with_patterns.local.role_name (expand)"
		"[root] module.package_with_patterns.aws_iam_policy.vpc (expand)" -> "[root] module.package_with_patterns.var.policy_path (expand)"
		"[root] module.package_with_patterns.aws_iam_policy.vpc (expand)" -> "[root] module.package_with_patterns.var.tags (expand)"
		"[root] module.package_with_patterns.aws_iam_role.lambda (expand)" -> "[root] module.package_with_patterns.data.aws_iam_policy_document.assume_role (expand)"
		"[root] module.package_with_patterns.aws_iam_role.lambda (expand)" -> "[root] module.package_with_patterns.local.role_name (expand)"
		"[root] module.package_with_patterns.aws_iam_role.lambda (expand)" -> "[root] module.package_with_patterns.var.role_description (expand)"
		"[root] module.package_with_patterns.aws_iam_role.lambda (expand)" -> "[root] module.package_with_patterns.var.role_force_detach_policies (expand)"
		"[root] module.package_with_patterns.aws_iam_role.lambda (expand)" -> "[root] module.package_with_patterns.var.role_path (expand)"
		"[root] module.package_with_patterns.aws_iam_role.lambda (expand)" -> "[root] module.package_with_patterns.var.role_permissions_boundary (expand)"
		"[root] module.package_with_patterns.aws_iam_role.lambda (expand)" -> "[root] module.package_with_patterns.var.role_tags (expand)"
		"[root] module.package_with_patterns.aws_iam_role.lambda (expand)" -> "[root] module.package_with_patterns.var.tags (expand)"
		"[root] module.package_with_patterns.aws_iam_role_policy_attachment.additional_inline (expand)" -> "[root] module.package_with_patterns.aws_iam_policy.additional_inline (expand)"
		"[root] module.package_with_patterns.aws_iam_role_policy_attachment.additional_inline (expand)" -> "[root] module.package_with_patterns.aws_iam_role.lambda (expand)"
		"[root] module.package_with_patterns.aws_iam_role_policy_attachment.additional_json (expand)" -> "[root] module.package_with_patterns.aws_iam_policy.additional_json (expand)"
		"[root] module.package_with_patterns.aws_iam_role_policy_attachment.additional_json (expand)" -> "[root] module.package_with_patterns.aws_iam_role.lambda (expand)"
		"[root] module.package_with_patterns.aws_iam_role_policy_attachment.additional_jsons (expand)" -> "[root] module.package_with_patterns.aws_iam_policy.additional_jsons (expand)"
		"[root] module.package_with_patterns.aws_iam_role_policy_attachment.additional_jsons (expand)" -> "[root] module.package_with_patterns.aws_iam_role.lambda (expand)"
		"[root] module.package_with_patterns.aws_iam_role_policy_attachment.additional_many (expand)" -> "[root] module.package_with_patterns.aws_iam_role.lambda (expand)"
		"[root] module.package_with_patterns.aws_iam_role_policy_attachment.additional_many (expand)" -> "[root] module.package_with_patterns.var.attach_policies (expand)"
		"[root] module.package_with_patterns.aws_iam_role_policy_attachment.additional_many (expand)" -> "[root] module.package_with_patterns.var.number_of_policies (expand)"
		"[root] module.package_with_patterns.aws_iam_role_policy_attachment.additional_many (expand)" -> "[root] module.package_with_patterns.var.policies (expand)"
		"[root] module.package_with_patterns.aws_iam_role_policy_attachment.additional_one (expand)" -> "[root] module.package_with_patterns.aws_iam_role.lambda (expand)"
		"[root] module.package_with_patterns.aws_iam_role_policy_attachment.additional_one (expand)" -> "[root] module.package_with_patterns.var.attach_policy (expand)"
		"[root] module.package_with_patterns.aws_iam_role_policy_attachment.additional_one (expand)" -> "[root] module.package_with_patterns.var.policy (expand)"
		"[root] module.package_with_patterns.aws_iam_role_policy_attachment.async (expand)" -> "[root] module.package_with_patterns.aws_iam_policy.async (expand)"
		"[root] module.package_with_patterns.aws_iam_role_policy_attachment.async (expand)" -> "[root] module.package_with_patterns.aws_iam_role.lambda (expand)"
		"[root] module.package_with_patterns.aws_iam_role_policy_attachment.dead_letter (expand)" -> "[root] module.package_with_patterns.aws_iam_policy.dead_letter (expand)"
		"[root] module.package_with_patterns.aws_iam_role_policy_attachment.dead_letter (expand)" -> "[root] module.package_with_patterns.aws_iam_role.lambda (expand)"
		"[root] module.package_with_patterns.aws_iam_role_policy_attachment.logs (expand)" -> "[root] module.package_with_patterns.aws_iam_policy.logs (expand)"
		"[root] module.package_with_patterns.aws_iam_role_policy_attachment.logs (expand)" -> "[root] module.package_with_patterns.aws_iam_role.lambda (expand)"
		"[root] module.package_with_patterns.aws_iam_role_policy_attachment.tracing (expand)" -> "[root] module.package_with_patterns.aws_iam_policy.tracing (expand)"
		"[root] module.package_with_patterns.aws_iam_role_policy_attachment.tracing (expand)" -> "[root] module.package_with_patterns.aws_iam_role.lambda (expand)"
		"[root] module.package_with_patterns.aws_iam_role_policy_attachment.vpc (expand)" -> "[root] module.package_with_patterns.aws_iam_policy.vpc (expand)"
		"[root] module.package_with_patterns.aws_iam_role_policy_attachment.vpc (expand)" -> "[root] module.package_with_patterns.aws_iam_role.lambda (expand)"
		"[root] module.package_with_patterns.aws_lambda_event_source_mapping.this (expand)" -> "[root] module.package_with_patterns.aws_lambda_function.this (expand)"
		"[root] module.package_with_patterns.aws_lambda_event_source_mapping.this (expand)" -> "[root] module.package_with_patterns.var.create_unqualified_alias_allowed_triggers (expand)"
		"[root] module.package_with_patterns.aws_lambda_event_source_mapping.this (expand)" -> "[root] module.package_with_patterns.var.event_source_mapping (expand)"
		"[root] module.package_with_patterns.aws_lambda_function.this (expand)" -> "[root] module.package_with_patterns.aws_cloudwatch_log_group.lambda (expand)"
		"[root] module.package_with_patterns.aws_lambda_function.this (expand)" -> "[root] module.package_with_patterns.aws_iam_role.lambda (expand)"
		"[root] module.package_with_patterns.aws_lambda_function.this (expand)" -> "[root] module.package_with_patterns.local.filename (expand)"
		"[root] module.package_with_patterns.aws_lambda_function.this (expand)" -> "[root] module.package_with_patterns.local.s3_bucket (expand)"
		"[root] module.package_with_patterns.aws_lambda_function.this (expand)" -> "[root] module.package_with_patterns.local.s3_object_version (expand)"
		"[root] module.package_with_patterns.aws_lambda_function.this (expand)" -> "[root] module.package_with_patterns.local.was_missing (expand)"
		"[root] module.package_with_patterns.aws_lambda_function.this (expand)" -> "[root] module.package_with_patterns.var.architectures (expand)"
		"[root] module.package_with_patterns.aws_lambda_function.this (expand)" -> "[root] module.package_with_patterns.var.dead_letter_target_arn (expand)"
		"[root] module.package_with_patterns.aws_lambda_function.this (expand)" -> "[root] module.package_with_patterns.var.description (expand)"
		"[root] module.package_with_patterns.aws_lambda_function.this (expand)" -> "[root] module.package_with_patterns.var.environment_variables (expand)"
		"[root] module.package_with_patterns.aws_lambda_function.this (expand)" -> "[root] module.package_with_patterns.var.file_system_arn (expand)"
		"[root] module.package_with_patterns.aws_lambda_function.this (expand)" -> "[root] module.package_with_patterns.var.file_system_local_mount_path (expand)"
		"[root] module.package_with_patterns.aws_lambda_function.this (expand)" -> "[root] module.package_with_patterns.var.handler (expand)"
		"[root] module.package_with_patterns.aws_lambda_function.this (expand)" -> "[root] module.package_with_patterns.var.ignore_source_code_hash (expand)"
		"[root] module.package_with_patterns.aws_lambda_function.this (expand)" -> "[root] module.package_with_patterns.var.image_config_command (expand)"
		"[root] module.package_with_patterns.aws_lambda_function.this (expand)" -> "[root] module.package_with_patterns.var.image_config_entry_point (expand)"
		"[root] module.package_with_patterns.aws_lambda_function.this (expand)" -> "[root] module.package_with_patterns.var.image_config_working_directory (expand)"
		"[root] module.package_with_patterns.aws_lambda_function.this (expand)" -> "[root] module.package_with_patterns.var.image_uri (expand)"
		"[root] module.package_with_patterns.aws_lambda_function.this (expand)" -> "[root] module.package_with_patterns.var.kms_key_arn (expand)"
		"[root] module.package_with_patterns.aws_lambda_function.this (expand)" -> "[root] module.package_with_patterns.var.lambda_role (expand)"
		"[root] module.package_with_patterns.aws_lambda_function.this (expand)" -> "[root] module.package_with_patterns.var.layers (expand)"
		"[root] module.package_with_patterns.aws_lambda_function.this (expand)" -> "[root] module.package_with_patterns.var.memory_size (expand)"
		"[root] module.package_with_patterns.aws_lambda_function.this (expand)" -> "[root] module.package_with_patterns.var.package_type (expand)"
		"[root] module.package_with_patterns.aws_lambda_function.this (expand)" -> "[root] module.package_with_patterns.var.publish (expand)"
		"[root] module.package_with_patterns.aws_lambda_function.this (expand)" -> "[root] module.package_with_patterns.var.reserved_concurrent_executions (expand)"
		"[root] module.package_with_patterns.aws_lambda_function.this (expand)" -> "[root] module.package_with_patterns.var.timeout (expand)"
		"[root] module.package_with_patterns.aws_lambda_function.this (expand)" -> "[root] module.package_with_patterns.var.tracing_mode (expand)"
		"[root] module.package_with_patterns.aws_lambda_function.this (expand)" -> "[root] module.package_with_patterns.var.vpc_security_group_ids (expand)"
		"[root] module.package_with_patterns.aws_lambda_function.this (expand)" -> "[root] module.package_with_patterns.var.vpc_subnet_ids (expand)"
		"[root] module.package_with_patterns.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.package_with_patterns.aws_lambda_function.this (expand)"
		"[root] module.package_with_patterns.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.package_with_patterns.local.qualifiers (expand)"
		"[root] module.package_with_patterns.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.package_with_patterns.var.create_async_event_config (expand)"
		"[root] module.package_with_patterns.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.package_with_patterns.var.destination_on_failure (expand)"
		"[root] module.package_with_patterns.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.package_with_patterns.var.destination_on_success (expand)"
		"[root] module.package_with_patterns.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.package_with_patterns.var.maximum_event_age_in_seconds (expand)"
		"[root] module.package_with_patterns.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.package_with_patterns.var.maximum_retry_attempts (expand)"
		"[root] module.package_with_patterns.aws_lambda_layer_version.this (expand)" -> "[root] module.package_with_patterns.local.filename (expand)"
		"[root] module.package_with_patterns.aws_lambda_layer_version.this (expand)" -> "[root] module.package_with_patterns.local.s3_bucket (expand)"
		"[root] module.package_with_patterns.aws_lambda_layer_version.this (expand)" -> "[root] module.package_with_patterns.local.s3_object_version (expand)"
		"[root] module.package_with_patterns.aws_lambda_layer_version.this (expand)" -> "[root] module.package_with_patterns.local.was_missing (expand)"
		"[root] module.package_with_patterns.aws_lambda_layer_version.this (expand)" -> "[root] module.package_with_patterns.var.compatible_architectures (expand)"
		"[root] module.package_with_patterns.aws_lambda_layer_version.this (expand)" -> "[root] module.package_with_patterns.var.compatible_runtimes (expand)"
		"[root] module.package_with_patterns.aws_lambda_layer_version.this (expand)" -> "[root] module.package_with_patterns.var.create_layer (expand)"
		"[root] module.package_with_patterns.aws_lambda_layer_version.this (expand)" -> "[root] module.package_with_patterns.var.description (expand)"
		"[root] module.package_with_patterns.aws_lambda_layer_version.this (expand)" -> "[root] module.package_with_patterns.var.ignore_source_code_hash (expand)"
		"[root] module.package_with_patterns.aws_lambda_layer_version.this (expand)" -> "[root] module.package_with_patterns.var.layer_name (expand)"
		"[root] module.package_with_patterns.aws_lambda_layer_version.this (expand)" -> "[root] module.package_with_patterns.var.license_info (expand)"
		"[root] module.package_with_patterns.aws_lambda_permission.current_version_triggers (expand)" -> "[root] module.package_with_patterns.aws_lambda_function.this (expand)"
		"[root] module.package_with_patterns.aws_lambda_permission.current_version_triggers (expand)" -> "[root] module.package_with_patterns.var.allowed_triggers (expand)"
		"[root] module.package_with_patterns.aws_lambda_permission.current_version_triggers (expand)" -> "[root] module.package_with_patterns.var.create_current_version_allowed_triggers (expand)"
		"[root] module.package_with_patterns.aws_lambda_permission.unqualified_alias_triggers (expand)" -> "[root] module.package_with_patterns.aws_lambda_function.this (expand)"
		"[root] module.package_with_patterns.aws_lambda_permission.unqualified_alias_triggers (expand)" -> "[root] module.package_with_patterns.var.allowed_triggers (expand)"
		"[root] module.package_with_patterns.aws_lambda_permission.unqualified_alias_triggers (expand)" -> "[root] module.package_with_patterns.var.create_unqualified_alias_allowed_triggers (expand)"
		"[root] module.package_with_patterns.aws_lambda_provisioned_concurrency_config.current_version (expand)" -> "[root] module.package_with_patterns.aws_lambda_function.this (expand)"
		"[root] module.package_with_patterns.aws_lambda_provisioned_concurrency_config.current_version (expand)" -> "[root] module.package_with_patterns.var.provisioned_concurrent_executions (expand)"
		"[root] module.package_with_patterns.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.package_with_patterns.local.s3_key (expand)"
		"[root] module.package_with_patterns.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.package_with_patterns.null_resource.archive (expand)"
		"[root] module.package_with_patterns.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.package_with_patterns.var.s3_acl (expand)"
		"[root] module.package_with_patterns.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.package_with_patterns.var.s3_bucket (expand)"
		"[root] module.package_with_patterns.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.package_with_patterns.var.s3_object_storage_class (expand)"
		"[root] module.package_with_patterns.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.package_with_patterns.var.s3_object_tags (expand)"
		"[root] module.package_with_patterns.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.package_with_patterns.var.s3_server_side_encryption (expand)"
		"[root] module.package_with_patterns.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.package_with_patterns.var.tags (expand)"
		"[root] module.package_with_patterns.aws_s3_bucket_object.lambda_package (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_with_patterns.data.aws_arn.log_group_arn (expand)" -> "[root] module.package_with_patterns.local.create_role (expand)"
		"[root] module.package_with_patterns.data.aws_arn.log_group_arn (expand)" -> "[root] module.package_with_patterns.local.log_group_arn_regional (expand)"
		"[root] module.package_with_patterns.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_with_patterns.var.create (expand)"
		"[root] module.package_with_patterns.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_with_patterns.var.create_function (expand)"
		"[root] module.package_with_patterns.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_with_patterns.var.create_layer (expand)"
		"[root] module.package_with_patterns.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_with_patterns.var.function_name (expand)"
		"[root] module.package_with_patterns.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_with_patterns.var.lambda_at_edge (expand)"
		"[root] module.package_with_patterns.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_with_patterns.var.use_existing_cloudwatch_log_group (expand)"
		"[root] module.package_with_patterns.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_with_patterns.data.aws_iam_policy.tracing (expand)" -> "[root] module.package_with_patterns.data.aws_partition.current (expand)"
		"[root] module.package_with_patterns.data.aws_iam_policy.tracing (expand)" -> "[root] module.package_with_patterns.local.create_role (expand)"
		"[root] module.package_with_patterns.data.aws_iam_policy.tracing (expand)" -> "[root] module.package_with_patterns.var.attach_tracing_policy (expand)"
		"[root] module.package_with_patterns.data.aws_iam_policy.vpc (expand)" -> "[root] module.package_with_patterns.data.aws_partition.current (expand)"
		"[root] module.package_with_patterns.data.aws_iam_policy.vpc (expand)" -> "[root] module.package_with_patterns.local.create_role (expand)"
		"[root] module.package_with_patterns.data.aws_iam_policy.vpc (expand)" -> "[root] module.package_with_patterns.var.attach_network_policy (expand)"
		"[root] module.package_with_patterns.data.aws_iam_policy_document.additional_inline (expand)" -> "[root] module.package_with_patterns.local.create_role (expand)"
		"[root] module.package_with_patterns.data.aws_iam_policy_document.additional_inline (expand)" -> "[root] module.package_with_patterns.var.attach_policy_statements (expand)"
		"[root] module.package_with_patterns.data.aws_iam_policy_document.additional_inline (expand)" -> "[root] module.package_with_patterns.var.policy_statements (expand)"
		"[root] module.package_with_patterns.data.aws_iam_policy_document.additional_inline (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_with_patterns.data.aws_iam_policy_document.assume_role (expand)" -> "[root] module.package_with_patterns.local.create_role (expand)"
		"[root] module.package_with_patterns.data.aws_iam_policy_document.assume_role (expand)" -> "[root] module.package_with_patterns.local.trusted_entities_principals (expand)"
		"[root] module.package_with_patterns.data.aws_iam_policy_document.assume_role (expand)" -> "[root] module.package_with_patterns.local.trusted_entities_services (expand)"
		"[root] module.package_with_patterns.data.aws_iam_policy_document.assume_role (expand)" -> "[root] module.package_with_patterns.var.assume_role_policy_statements (expand)"
		"[root] module.package_with_patterns.data.aws_iam_policy_document.assume_role (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_with_patterns.data.aws_iam_policy_document.async (expand)" -> "[root] module.package_with_patterns.local.create_role (expand)"
		"[root] module.package_with_patterns.data.aws_iam_policy_document.async (expand)" -> "[root] module.package_with_patterns.var.attach_async_event_policy (expand)"
		"[root] module.package_with_patterns.data.aws_iam_policy_document.async (expand)" -> "[root] module.package_with_patterns.var.destination_on_failure (expand)"
		"[root] module.package_with_patterns.data.aws_iam_policy_document.async (expand)" -> "[root] module.package_with_patterns.var.destination_on_success (expand)"
		"[root] module.package_with_patterns.data.aws_iam_policy_document.async (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_with_patterns.data.aws_iam_policy_document.dead_letter (expand)" -> "[root] module.package_with_patterns.local.create_role (expand)"
		"[root] module.package_with_patterns.data.aws_iam_policy_document.dead_letter (expand)" -> "[root] module.package_with_patterns.var.attach_dead_letter_policy (expand)"
		"[root] module.package_with_patterns.data.aws_iam_policy_document.dead_letter (expand)" -> "[root] module.package_with_patterns.var.dead_letter_target_arn (expand)"
		"[root] module.package_with_patterns.data.aws_iam_policy_document.dead_letter (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_with_patterns.data.aws_iam_policy_document.logs (expand)" -> "[root] module.package_with_patterns.local.log_group_arn (expand)"
		"[root] module.package_with_patterns.data.aws_iam_policy_document.logs (expand)" -> "[root] module.package_with_patterns.var.attach_cloudwatch_logs_policy (expand)"
		"[root] module.package_with_patterns.data.aws_partition.current (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.data.aws_partition.current (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_with_patterns.data.external.archive_prepare (expand)" -> "[root] module.package_with_patterns.local.python (expand)"
		"[root] module.package_with_patterns.data.external.archive_prepare (expand)" -> "[root] module.package_with_patterns.var.artifacts_dir (expand)"
		"[root] module.package_with_patterns.data.external.archive_prepare (expand)" -> "[root] module.package_with_patterns.var.build_in_docker (expand)"
		"[root] module.package_with_patterns.data.external.archive_prepare (expand)" -> "[root] module.package_with_patterns.var.create (expand)"
		"[root] module.package_with_patterns.data.external.archive_prepare (expand)" -> "[root] module.package_with_patterns.var.create_package (expand)"
		"[root] module.package_with_patterns.data.external.archive_prepare (expand)" -> "[root] module.package_with_patterns.var.docker_build_root (expand)"
		"[root] module.package_with_patterns.data.external.archive_prepare (expand)" -> "[root] module.package_with_patterns.var.docker_file (expand)"
		"[root] module.package_with_patterns.data.external.archive_prepare (expand)" -> "[root] module.package_with_patterns.var.docker_image (expand)"
		"[root] module.package_with_patterns.data.external.archive_prepare (expand)" -> "[root] module.package_with_patterns.var.docker_pip_cache (expand)"
		"[root] module.package_with_patterns.data.external.archive_prepare (expand)" -> "[root] module.package_with_patterns.var.docker_with_ssh_agent (expand)"
		"[root] module.package_with_patterns.data.external.archive_prepare (expand)" -> "[root] module.package_with_patterns.var.hash_extra (expand)"
		"[root] module.package_with_patterns.data.external.archive_prepare (expand)" -> "[root] module.package_with_patterns.var.recreate_missing_package (expand)"
		"[root] module.package_with_patterns.data.external.archive_prepare (expand)" -> "[root] module.package_with_patterns.var.runtime (expand)"
		"[root] module.package_with_patterns.data.external.archive_prepare (expand)" -> "[root] module.package_with_patterns.var.source_path (expand)"
		"[root] module.package_with_patterns.data.external.archive_prepare (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/external\"]"
		"[root] module.package_with_patterns.local.archive_filename (expand)" -> "[root] module.package_with_patterns.data.external.archive_prepare (expand)"
		"[root] module.package_with_patterns.local.archive_was_missing (expand)" -> "[root] module.package_with_patterns.data.external.archive_prepare (expand)"
		"[root] module.package_with_patterns.local.create_role (expand)" -> "[root] module.package_with_patterns.var.create (expand)"
		"[root] module.package_with_patterns.local.create_role (expand)" -> "[root] module.package_with_patterns.var.create_function (expand)"
		"[root] module.package_with_patterns.local.create_role (expand)" -> "[root] module.package_with_patterns.var.create_layer (expand)"
		"[root] module.package_with_patterns.local.create_role (expand)" -> "[root] module.package_with_patterns.var.create_role (expand)"
		"[root] module.package_with_patterns.local.filename (expand)" -> "[root] module.package_with_patterns.local.archive_filename (expand)"
		"[root] module.package_with_patterns.local.filename (expand)" -> "[root] module.package_with_patterns.var.local_existing_package (expand)"
		"[root] module.package_with_patterns.local.filename (expand)" -> "[root] module.package_with_patterns.var.store_on_s3 (expand)"
		"[root] module.package_with_patterns.local.log_group_arn (expand)" -> "[root] module.package_with_patterns.data.aws_arn.log_group_arn (expand)"
		"[root] module.package_with_patterns.local.log_group_arn_regional (expand)" -> "[root] module.package_with_patterns.aws_cloudwatch_log_group.lambda (expand)"
		"[root] module.package_with_patterns.local.log_group_arn_regional (expand)" -> "[root] module.package_with_patterns.data.aws_cloudwatch_log_group.lambda (expand)"
		"[root] module.package_with_patterns.local.log_group_name (expand)" -> "[root] module.package_with_patterns.aws_cloudwatch_log_group.lambda (expand)"
		"[root] module.package_with_patterns.local.log_group_name (expand)" -> "[root] module.package_with_patterns.data.aws_cloudwatch_log_group.lambda (expand)"
		"[root] module.package_with_patterns.local.python (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.local.qualifiers (expand)" -> "[root] module.package_with_patterns.var.create_current_version_async_event_config (expand)"
		"[root] module.package_with_patterns.local.qualifiers (expand)" -> "[root] module.package_with_patterns.var.create_unqualified_alias_async_event_config (expand)"
		"[root] module.package_with_patterns.local.role_name (expand)" -> "[root] module.package_with_patterns.local.create_role (expand)"
		"[root] module.package_with_patterns.local.role_name (expand)" -> "[root] module.package_with_patterns.var.function_name (expand)"
		"[root] module.package_with_patterns.local.role_name (expand)" -> "[root] module.package_with_patterns.var.role_name (expand)"
		"[root] module.package_with_patterns.local.s3_bucket (expand)" -> "[root] module.package_with_patterns.var.s3_bucket (expand)"
		"[root] module.package_with_patterns.local.s3_bucket (expand)" -> "[root] module.package_with_patterns.var.s3_existing_package (expand)"
		"[root] module.package_with_patterns.local.s3_bucket (expand)" -> "[root] module.package_with_patterns.var.store_on_s3 (expand)"
		"[root] module.package_with_patterns.local.s3_key (expand)" -> "[root] module.package_with_patterns.local.archive_filename (expand)"
		"[root] module.package_with_patterns.local.s3_key (expand)" -> "[root] module.package_with_patterns.var.s3_existing_package (expand)"
		"[root] module.package_with_patterns.local.s3_key (expand)" -> "[root] module.package_with_patterns.var.s3_prefix (expand)"
		"[root] module.package_with_patterns.local.s3_key (expand)" -> "[root] module.package_with_patterns.var.store_on_s3 (expand)"
		"[root] module.package_with_patterns.local.s3_object_version (expand)" -> "[root] module.package_with_patterns.aws_s3_bucket_object.lambda_package (expand)"
		"[root] module.package_with_patterns.local.trusted_entities_principals (expand)" -> "[root] module.package_with_patterns.var.trusted_entities (expand)"
		"[root] module.package_with_patterns.local.trusted_entities_services (expand)" -> "[root] module.package_with_patterns.var.lambda_at_edge (expand)"
		"[root] module.package_with_patterns.local.trusted_entities_services (expand)" -> "[root] module.package_with_patterns.var.trusted_entities (expand)"
		"[root] module.package_with_patterns.local.was_missing (expand)" -> "[root] module.package_with_patterns.local.archive_was_missing (expand)"
		"[root] module.package_with_patterns.local.was_missing (expand)" -> "[root] module.package_with_patterns.var.local_existing_package (expand)"
		"[root] module.package_with_patterns.local_file.archive_plan (expand)" -> "[root] module.package_with_patterns.data.external.archive_prepare (expand)"
		"[root] module.package_with_patterns.local_file.archive_plan (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/local\"]"
		"[root] module.package_with_patterns.null_resource.archive (expand)" -> "[root] module.package_with_patterns.local_file.archive_plan (expand)"
		"[root] module.package_with_patterns.null_resource.archive (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/null\"]"
		"[root] module.package_with_patterns.null_resource.archive (expand)" -> "[root] provisioner.local-exec"
		"[root] module.package_with_patterns.output.lambda_cloudwatch_log_group_arn (expand)" -> "[root] module.package_with_patterns.local.log_group_arn (expand)"
		"[root] module.package_with_patterns.output.lambda_cloudwatch_log_group_name (expand)" -> "[root] module.package_with_patterns.local.log_group_name (expand)"
		"[root] module.package_with_patterns.output.lambda_event_source_mapping_function_arn (expand)" -> "[root] module.package_with_patterns.aws_lambda_event_source_mapping.this (expand)"
		"[root] module.package_with_patterns.output.lambda_event_source_mapping_state (expand)" -> "[root] module.package_with_patterns.aws_lambda_event_source_mapping.this (expand)"
		"[root] module.package_with_patterns.output.lambda_event_source_mapping_state_transition_reason (expand)" -> "[root] module.package_with_patterns.aws_lambda_event_source_mapping.this (expand)"
		"[root] module.package_with_patterns.output.lambda_event_source_mapping_uuid (expand)" -> "[root] module.package_with_patterns.aws_lambda_event_source_mapping.this (expand)"
		"[root] module.package_with_patterns.output.lambda_function_arn (expand)" -> "[root] module.package_with_patterns.aws_lambda_function.this (expand)"
		"[root] module.package_with_patterns.output.lambda_function_invoke_arn (expand)" -> "[root] module.package_with_patterns.aws_lambda_function.this (expand)"
		"[root] module.package_with_patterns.output.lambda_function_kms_key_arn (expand)" -> "[root] module.package_with_patterns.aws_lambda_function.this (expand)"
		"[root] module.package_with_patterns.output.lambda_function_last_modified (expand)" -> "[root] module.package_with_patterns.aws_lambda_function.this (expand)"
		"[root] module.package_with_patterns.output.lambda_function_name (expand)" -> "[root] module.package_with_patterns.aws_lambda_function.this (expand)"
		"[root] module.package_with_patterns.output.lambda_function_qualified_arn (expand)" -> "[root] module.package_with_patterns.aws_lambda_function.this (expand)"
		"[root] module.package_with_patterns.output.lambda_function_source_code_hash (expand)" -> "[root] module.package_with_patterns.aws_lambda_function.this (expand)"
		"[root] module.package_with_patterns.output.lambda_function_source_code_size (expand)" -> "[root] module.package_with_patterns.aws_lambda_function.this (expand)"
		"[root] module.package_with_patterns.output.lambda_function_version (expand)" -> "[root] module.package_with_patterns.aws_lambda_function.this (expand)"
		"[root] module.package_with_patterns.output.lambda_layer_arn (expand)" -> "[root] module.package_with_patterns.aws_lambda_layer_version.this (expand)"
		"[root] module.package_with_patterns.output.lambda_layer_created_date (expand)" -> "[root] module.package_with_patterns.aws_lambda_layer_version.this (expand)"
		"[root] module.package_with_patterns.output.lambda_layer_layer_arn (expand)" -> "[root] module.package_with_patterns.aws_lambda_layer_version.this (expand)"
		"[root] module.package_with_patterns.output.lambda_layer_source_code_size (expand)" -> "[root] module.package_with_patterns.aws_lambda_layer_version.this (expand)"
		"[root] module.package_with_patterns.output.lambda_layer_version (expand)" -> "[root] module.package_with_patterns.aws_lambda_layer_version.this (expand)"
		"[root] module.package_with_patterns.output.lambda_role_arn (expand)" -> "[root] module.package_with_patterns.aws_iam_role.lambda (expand)"
		"[root] module.package_with_patterns.output.lambda_role_name (expand)" -> "[root] module.package_with_patterns.aws_iam_role.lambda (expand)"
		"[root] module.package_with_patterns.output.lambda_role_unique_id (expand)" -> "[root] module.package_with_patterns.aws_iam_role.lambda (expand)"
		"[root] module.package_with_patterns.output.local_filename (expand)" -> "[root] module.package_with_patterns.local.filename (expand)"
		"[root] module.package_with_patterns.output.s3_object (expand)" -> "[root] module.package_with_patterns.local.s3_bucket (expand)"
		"[root] module.package_with_patterns.output.s3_object (expand)" -> "[root] module.package_with_patterns.local.s3_object_version (expand)"
		"[root] module.package_with_patterns.var.allowed_triggers (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.architectures (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.artifacts_dir (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.assume_role_policy_statements (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.attach_async_event_policy (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.attach_cloudwatch_logs_policy (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.attach_dead_letter_policy (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.attach_network_policy (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.attach_policies (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.attach_policy (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.attach_policy_json (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.attach_policy_jsons (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.attach_policy_statements (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.attach_tracing_policy (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.build_in_docker (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.cloudwatch_logs_kms_key_id (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.cloudwatch_logs_retention_in_days (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.cloudwatch_logs_tags (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.compatible_architectures (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.compatible_runtimes (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.create (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.create_async_event_config (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.create_current_version_allowed_triggers (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.create_current_version_async_event_config (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.create_function (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.create_layer (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.create_package (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.create_role (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.create_unqualified_alias_allowed_triggers (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.create_unqualified_alias_async_event_config (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.dead_letter_target_arn (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.description (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.destination_on_failure (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.destination_on_success (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.docker_build_root (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.docker_file (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.docker_image (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.docker_pip_cache (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.docker_with_ssh_agent (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.environment_variables (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.event_source_mapping (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.file_system_arn (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.file_system_local_mount_path (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.function_name (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.handler (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.hash_extra (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.ignore_source_code_hash (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.image_config_command (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.image_config_entry_point (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.image_config_working_directory (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.image_uri (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.kms_key_arn (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.lambda_at_edge (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.lambda_role (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.layer_name (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.layers (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.license_info (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.local_existing_package (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.maximum_event_age_in_seconds (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.maximum_retry_attempts (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.memory_size (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.number_of_policies (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.number_of_policy_jsons (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.package_type (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.policies (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.policy (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.policy_json (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.policy_jsons (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.policy_path (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.policy_statements (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.provisioned_concurrent_executions (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.publish (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.recreate_missing_package (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.reserved_concurrent_executions (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.role_description (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.role_force_detach_policies (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.role_name (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.role_path (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.role_permissions_boundary (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.role_tags (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.runtime (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.s3_acl (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.s3_bucket (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.s3_existing_package (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.s3_object_storage_class (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.s3_object_tags (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.s3_prefix (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.s3_server_side_encryption (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.source_path (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.store_on_s3 (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.tags (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.timeout (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.tracing_mode (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.trusted_entities (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.use_existing_cloudwatch_log_group (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.vpc_security_group_ids (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_patterns.var.vpc_subnet_ids (expand)" -> "[root] module.package_with_patterns (expand)"
		"[root] module.package_with_pip_requirements_in_docker (close)" -> "[root] module.package_with_pip_requirements_in_docker.aws_iam_role_policy_attachment.additional_inline (expand)"
		"[root] module.package_with_pip_requirements_in_docker (close)" -> "[root] module.package_with_pip_requirements_in_docker.aws_iam_role_policy_attachment.additional_json (expand)"
		"[root] module.package_with_pip_requirements_in_docker (close)" -> "[root] module.package_with_pip_requirements_in_docker.aws_iam_role_policy_attachment.additional_jsons (expand)"
		"[root] module.package_with_pip_requirements_in_docker (close)" -> "[root] module.package_with_pip_requirements_in_docker.aws_iam_role_policy_attachment.additional_many (expand)"
		"[root] module.package_with_pip_requirements_in_docker (close)" -> "[root] module.package_with_pip_requirements_in_docker.aws_iam_role_policy_attachment.additional_one (expand)"
		"[root] module.package_with_pip_requirements_in_docker (close)" -> "[root] module.package_with_pip_requirements_in_docker.aws_iam_role_policy_attachment.async (expand)"
		"[root] module.package_with_pip_requirements_in_docker (close)" -> "[root] module.package_with_pip_requirements_in_docker.aws_iam_role_policy_attachment.dead_letter (expand)"
		"[root] module.package_with_pip_requirements_in_docker (close)" -> "[root] module.package_with_pip_requirements_in_docker.aws_iam_role_policy_attachment.logs (expand)"
		"[root] module.package_with_pip_requirements_in_docker (close)" -> "[root] module.package_with_pip_requirements_in_docker.aws_iam_role_policy_attachment.tracing (expand)"
		"[root] module.package_with_pip_requirements_in_docker (close)" -> "[root] module.package_with_pip_requirements_in_docker.aws_iam_role_policy_attachment.vpc (expand)"
		"[root] module.package_with_pip_requirements_in_docker (close)" -> "[root] module.package_with_pip_requirements_in_docker.aws_lambda_function_event_invoke_config.this (expand)"
		"[root] module.package_with_pip_requirements_in_docker (close)" -> "[root] module.package_with_pip_requirements_in_docker.aws_lambda_permission.current_version_triggers (expand)"
		"[root] module.package_with_pip_requirements_in_docker (close)" -> "[root] module.package_with_pip_requirements_in_docker.aws_lambda_permission.unqualified_alias_triggers (expand)"
		"[root] module.package_with_pip_requirements_in_docker (close)" -> "[root] module.package_with_pip_requirements_in_docker.aws_lambda_provisioned_concurrency_config.current_version (expand)"
		"[root] module.package_with_pip_requirements_in_docker (close)" -> "[root] module.package_with_pip_requirements_in_docker.output.lambda_cloudwatch_log_group_arn (expand)"
		"[root] module.package_with_pip_requirements_in_docker (close)" -> "[root] module.package_with_pip_requirements_in_docker.output.lambda_cloudwatch_log_group_name (expand)"
		"[root] module.package_with_pip_requirements_in_docker (close)" -> "[root] module.package_with_pip_requirements_in_docker.output.lambda_event_source_mapping_function_arn (expand)"
		"[root] module.package_with_pip_requirements_in_docker (close)" -> "[root] module.package_with_pip_requirements_in_docker.output.lambda_event_source_mapping_state (expand)"
		"[root] module.package_with_pip_requirements_in_docker (close)" -> "[root] module.package_with_pip_requirements_in_docker.output.lambda_event_source_mapping_state_transition_reason (expand)"
		"[root] module.package_with_pip_requirements_in_docker (close)" -> "[root] module.package_with_pip_requirements_in_docker.output.lambda_event_source_mapping_uuid (expand)"
		"[root] module.package_with_pip_requirements_in_docker (close)" -> "[root] module.package_with_pip_requirements_in_docker.output.lambda_function_arn (expand)"
		"[root] module.package_with_pip_requirements_in_docker (close)" -> "[root] module.package_with_pip_requirements_in_docker.output.lambda_function_invoke_arn (expand)"
		"[root] module.package_with_pip_requirements_in_docker (close)" -> "[root] module.package_with_pip_requirements_in_docker.output.lambda_function_kms_key_arn (expand)"
		"[root] module.package_with_pip_requirements_in_docker (close)" -> "[root] module.package_with_pip_requirements_in_docker.output.lambda_function_last_modified (expand)"
		"[root] module.package_with_pip_requirements_in_docker (close)" -> "[root] module.package_with_pip_requirements_in_docker.output.lambda_function_name (expand)"
		"[root] module.package_with_pip_requirements_in_docker (close)" -> "[root] module.package_with_pip_requirements_in_docker.output.lambda_function_qualified_arn (expand)"
		"[root] module.package_with_pip_requirements_in_docker (close)" -> "[root] module.package_with_pip_requirements_in_docker.output.lambda_function_source_code_hash (expand)"
		"[root] module.package_with_pip_requirements_in_docker (close)" -> "[root] module.package_with_pip_requirements_in_docker.output.lambda_function_source_code_size (expand)"
		"[root] module.package_with_pip_requirements_in_docker (close)" -> "[root] module.package_with_pip_requirements_in_docker.output.lambda_function_version (expand)"
		"[root] module.package_with_pip_requirements_in_docker (close)" -> "[root] module.package_with_pip_requirements_in_docker.output.lambda_layer_arn (expand)"
		"[root] module.package_with_pip_requirements_in_docker (close)" -> "[root] module.package_with_pip_requirements_in_docker.output.lambda_layer_created_date (expand)"
		"[root] module.package_with_pip_requirements_in_docker (close)" -> "[root] module.package_with_pip_requirements_in_docker.output.lambda_layer_layer_arn (expand)"
		"[root] module.package_with_pip_requirements_in_docker (close)" -> "[root] module.package_with_pip_requirements_in_docker.output.lambda_layer_source_code_size (expand)"
		"[root] module.package_with_pip_requirements_in_docker (close)" -> "[root] module.package_with_pip_requirements_in_docker.output.lambda_layer_version (expand)"
		"[root] module.package_with_pip_requirements_in_docker (close)" -> "[root] module.package_with_pip_requirements_in_docker.output.lambda_role_arn (expand)"
		"[root] module.package_with_pip_requirements_in_docker (close)" -> "[root] module.package_with_pip_requirements_in_docker.output.lambda_role_name (expand)"
		"[root] module.package_with_pip_requirements_in_docker (close)" -> "[root] module.package_with_pip_requirements_in_docker.output.lambda_role_unique_id (expand)"
		"[root] module.package_with_pip_requirements_in_docker (close)" -> "[root] module.package_with_pip_requirements_in_docker.output.local_filename (expand)"
		"[root] module.package_with_pip_requirements_in_docker (close)" -> "[root] module.package_with_pip_requirements_in_docker.output.s3_object (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.cloudwatch_logs_kms_key_id (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.cloudwatch_logs_retention_in_days (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.cloudwatch_logs_tags (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.create (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.create_function (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.create_layer (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.function_name (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.lambda_at_edge (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.tags (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.use_existing_cloudwatch_log_group (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_cloudwatch_log_group.lambda (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_policy.additional_inline (expand)" -> "[root] module.package_with_pip_requirements_in_docker.data.aws_iam_policy_document.additional_inline (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_policy.additional_inline (expand)" -> "[root] module.package_with_pip_requirements_in_docker.local.role_name (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_policy.additional_inline (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.policy_path (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_policy.additional_inline (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.tags (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_policy.additional_json (expand)" -> "[root] module.package_with_pip_requirements_in_docker.local.role_name (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_policy.additional_json (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.attach_policy_json (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_policy.additional_json (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.policy_json (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_policy.additional_json (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.policy_path (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_policy.additional_json (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.tags (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_policy.additional_json (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_policy.additional_jsons (expand)" -> "[root] module.package_with_pip_requirements_in_docker.local.role_name (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_policy.additional_jsons (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.attach_policy_jsons (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_policy.additional_jsons (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.number_of_policy_jsons (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_policy.additional_jsons (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.policy_jsons (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_policy.additional_jsons (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.policy_path (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_policy.additional_jsons (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.tags (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_policy.additional_jsons (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_policy.async (expand)" -> "[root] module.package_with_pip_requirements_in_docker.data.aws_iam_policy_document.async (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_policy.async (expand)" -> "[root] module.package_with_pip_requirements_in_docker.local.role_name (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_policy.async (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.policy_path (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_policy.async (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.tags (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_policy.dead_letter (expand)" -> "[root] module.package_with_pip_requirements_in_docker.data.aws_iam_policy_document.dead_letter (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_policy.dead_letter (expand)" -> "[root] module.package_with_pip_requirements_in_docker.local.role_name (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_policy.dead_letter (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.policy_path (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_policy.dead_letter (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.tags (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_policy.logs (expand)" -> "[root] module.package_with_pip_requirements_in_docker.data.aws_iam_policy_document.logs (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_policy.logs (expand)" -> "[root] module.package_with_pip_requirements_in_docker.local.role_name (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_policy.logs (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.policy_path (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_policy.tracing (expand)" -> "[root] module.package_with_pip_requirements_in_docker.data.aws_iam_policy.tracing (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_policy.tracing (expand)" -> "[root] module.package_with_pip_requirements_in_docker.local.role_name (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_policy.tracing (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.policy_path (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_policy.tracing (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.tags (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_policy.vpc (expand)" -> "[root] module.package_with_pip_requirements_in_docker.data.aws_iam_policy.vpc (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_policy.vpc (expand)" -> "[root] module.package_with_pip_requirements_in_docker.local.role_name (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_policy.vpc (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.policy_path (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_policy.vpc (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.tags (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_role.lambda (expand)" -> "[root] module.package_with_pip_requirements_in_docker.data.aws_iam_policy_document.assume_role (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_role.lambda (expand)" -> "[root] module.package_with_pip_requirements_in_docker.local.role_name (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_role.lambda (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.role_description (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_role.lambda (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.role_force_detach_policies (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_role.lambda (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.role_path (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_role.lambda (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.role_permissions_boundary (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_role.lambda (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.role_tags (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_role.lambda (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.tags (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_role_policy_attachment.additional_inline (expand)" -> "[root] module.package_with_pip_requirements_in_docker.aws_iam_policy.additional_inline (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_role_policy_attachment.additional_inline (expand)" -> "[root] module.package_with_pip_requirements_in_docker.aws_iam_role.lambda (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_role_policy_attachment.additional_json (expand)" -> "[root] module.package_with_pip_requirements_in_docker.aws_iam_policy.additional_json (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_role_policy_attachment.additional_json (expand)" -> "[root] module.package_with_pip_requirements_in_docker.aws_iam_role.lambda (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_role_policy_attachment.additional_jsons (expand)" -> "[root] module.package_with_pip_requirements_in_docker.aws_iam_policy.additional_jsons (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_role_policy_attachment.additional_jsons (expand)" -> "[root] module.package_with_pip_requirements_in_docker.aws_iam_role.lambda (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_role_policy_attachment.additional_many (expand)" -> "[root] module.package_with_pip_requirements_in_docker.aws_iam_role.lambda (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_role_policy_attachment.additional_many (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.attach_policies (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_role_policy_attachment.additional_many (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.number_of_policies (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_role_policy_attachment.additional_many (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.policies (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_role_policy_attachment.additional_one (expand)" -> "[root] module.package_with_pip_requirements_in_docker.aws_iam_role.lambda (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_role_policy_attachment.additional_one (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.attach_policy (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_role_policy_attachment.additional_one (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.policy (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_role_policy_attachment.async (expand)" -> "[root] module.package_with_pip_requirements_in_docker.aws_iam_policy.async (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_role_policy_attachment.async (expand)" -> "[root] module.package_with_pip_requirements_in_docker.aws_iam_role.lambda (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_role_policy_attachment.dead_letter (expand)" -> "[root] module.package_with_pip_requirements_in_docker.aws_iam_policy.dead_letter (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_role_policy_attachment.dead_letter (expand)" -> "[root] module.package_with_pip_requirements_in_docker.aws_iam_role.lambda (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_role_policy_attachment.logs (expand)" -> "[root] module.package_with_pip_requirements_in_docker.aws_iam_policy.logs (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_role_policy_attachment.logs (expand)" -> "[root] module.package_with_pip_requirements_in_docker.aws_iam_role.lambda (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_role_policy_attachment.tracing (expand)" -> "[root] module.package_with_pip_requirements_in_docker.aws_iam_policy.tracing (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_role_policy_attachment.tracing (expand)" -> "[root] module.package_with_pip_requirements_in_docker.aws_iam_role.lambda (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_role_policy_attachment.vpc (expand)" -> "[root] module.package_with_pip_requirements_in_docker.aws_iam_policy.vpc (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_iam_role_policy_attachment.vpc (expand)" -> "[root] module.package_with_pip_requirements_in_docker.aws_iam_role.lambda (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_lambda_event_source_mapping.this (expand)" -> "[root] module.package_with_pip_requirements_in_docker.aws_lambda_function.this (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_lambda_event_source_mapping.this (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.create_unqualified_alias_allowed_triggers (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_lambda_event_source_mapping.this (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.event_source_mapping (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_lambda_function.this (expand)" -> "[root] module.package_with_pip_requirements_in_docker.aws_cloudwatch_log_group.lambda (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_lambda_function.this (expand)" -> "[root] module.package_with_pip_requirements_in_docker.aws_iam_role.lambda (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_lambda_function.this (expand)" -> "[root] module.package_with_pip_requirements_in_docker.local.filename (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_lambda_function.this (expand)" -> "[root] module.package_with_pip_requirements_in_docker.local.s3_bucket (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_lambda_function.this (expand)" -> "[root] module.package_with_pip_requirements_in_docker.local.s3_object_version (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_lambda_function.this (expand)" -> "[root] module.package_with_pip_requirements_in_docker.local.was_missing (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_lambda_function.this (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.architectures (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_lambda_function.this (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.dead_letter_target_arn (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_lambda_function.this (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.description (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_lambda_function.this (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.environment_variables (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_lambda_function.this (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.file_system_arn (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_lambda_function.this (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.file_system_local_mount_path (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_lambda_function.this (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.handler (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_lambda_function.this (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.ignore_source_code_hash (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_lambda_function.this (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.image_config_command (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_lambda_function.this (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.image_config_entry_point (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_lambda_function.this (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.image_config_working_directory (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_lambda_function.this (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.image_uri (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_lambda_function.this (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.kms_key_arn (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_lambda_function.this (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.lambda_role (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_lambda_function.this (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.layers (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_lambda_function.this (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.memory_size (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_lambda_function.this (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.package_type (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_lambda_function.this (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.publish (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_lambda_function.this (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.reserved_concurrent_executions (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_lambda_function.this (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.timeout (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_lambda_function.this (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.tracing_mode (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_lambda_function.this (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.vpc_security_group_ids (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_lambda_function.this (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.vpc_subnet_ids (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.package_with_pip_requirements_in_docker.aws_lambda_function.this (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.package_with_pip_requirements_in_docker.local.qualifiers (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.create_async_event_config (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.destination_on_failure (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.destination_on_success (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.maximum_event_age_in_seconds (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_lambda_function_event_invoke_config.this (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.maximum_retry_attempts (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_lambda_layer_version.this (expand)" -> "[root] module.package_with_pip_requirements_in_docker.local.filename (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_lambda_layer_version.this (expand)" -> "[root] module.package_with_pip_requirements_in_docker.local.s3_bucket (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_lambda_layer_version.this (expand)" -> "[root] module.package_with_pip_requirements_in_docker.local.s3_object_version (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_lambda_layer_version.this (expand)" -> "[root] module.package_with_pip_requirements_in_docker.local.was_missing (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_lambda_layer_version.this (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.compatible_architectures (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_lambda_layer_version.this (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.compatible_runtimes (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_lambda_layer_version.this (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.create_layer (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_lambda_layer_version.this (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.description (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_lambda_layer_version.this (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.ignore_source_code_hash (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_lambda_layer_version.this (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.layer_name (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_lambda_layer_version.this (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.license_info (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_lambda_permission.current_version_triggers (expand)" -> "[root] module.package_with_pip_requirements_in_docker.aws_lambda_function.this (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_lambda_permission.current_version_triggers (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.allowed_triggers (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_lambda_permission.current_version_triggers (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.create_current_version_allowed_triggers (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_lambda_permission.unqualified_alias_triggers (expand)" -> "[root] module.package_with_pip_requirements_in_docker.aws_lambda_function.this (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_lambda_permission.unqualified_alias_triggers (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.allowed_triggers (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_lambda_permission.unqualified_alias_triggers (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.create_unqualified_alias_allowed_triggers (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_lambda_provisioned_concurrency_config.current_version (expand)" -> "[root] module.package_with_pip_requirements_in_docker.aws_lambda_function.this (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_lambda_provisioned_concurrency_config.current_version (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.provisioned_concurrent_executions (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.package_with_pip_requirements_in_docker.local.s3_key (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.package_with_pip_requirements_in_docker.null_resource.archive (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.s3_acl (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.s3_bucket (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.s3_object_storage_class (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.s3_object_tags (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.s3_server_side_encryption (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_s3_bucket_object.lambda_package (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.tags (expand)"
		"[root] module.package_with_pip_requirements_in_docker.aws_s3_bucket_object.lambda_package (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_with_pip_requirements_in_docker.data.aws_arn.log_group_arn (expand)" -> "[root] module.package_with_pip_requirements_in_docker.local.create_role (expand)"
		"[root] module.package_with_pip_requirements_in_docker.data.aws_arn.log_group_arn (expand)" -> "[root] module.package_with_pip_requirements_in_docker.local.log_group_arn_regional (expand)"
		"[root] module.package_with_pip_requirements_in_docker.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.create (expand)"
		"[root] module.package_with_pip_requirements_in_docker.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.create_function (expand)"
		"[root] module.package_with_pip_requirements_in_docker.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.create_layer (expand)"
		"[root] module.package_with_pip_requirements_in_docker.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.function_name (expand)"
		"[root] module.package_with_pip_requirements_in_docker.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.lambda_at_edge (expand)"
		"[root] module.package_with_pip_requirements_in_docker.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.use_existing_cloudwatch_log_group (expand)"
		"[root] module.package_with_pip_requirements_in_docker.data.aws_cloudwatch_log_group.lambda (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_with_pip_requirements_in_docker.data.aws_iam_policy.tracing (expand)" -> "[root] module.package_with_pip_requirements_in_docker.data.aws_partition.current (expand)"
		"[root] module.package_with_pip_requirements_in_docker.data.aws_iam_policy.tracing (expand)" -> "[root] module.package_with_pip_requirements_in_docker.local.create_role (expand)"
		"[root] module.package_with_pip_requirements_in_docker.data.aws_iam_policy.tracing (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.attach_tracing_policy (expand)"
		"[root] module.package_with_pip_requirements_in_docker.data.aws_iam_policy.vpc (expand)" -> "[root] module.package_with_pip_requirements_in_docker.data.aws_partition.current (expand)"
		"[root] module.package_with_pip_requirements_in_docker.data.aws_iam_policy.vpc (expand)" -> "[root] module.package_with_pip_requirements_in_docker.local.create_role (expand)"
		"[root] module.package_with_pip_requirements_in_docker.data.aws_iam_policy.vpc (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.attach_network_policy (expand)"
		"[root] module.package_with_pip_requirements_in_docker.data.aws_iam_policy_document.additional_inline (expand)" -> "[root] module.package_with_pip_requirements_in_docker.local.create_role (expand)"
		"[root] module.package_with_pip_requirements_in_docker.data.aws_iam_policy_document.additional_inline (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.attach_policy_statements (expand)"
		"[root] module.package_with_pip_requirements_in_docker.data.aws_iam_policy_document.additional_inline (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.policy_statements (expand)"
		"[root] module.package_with_pip_requirements_in_docker.data.aws_iam_policy_document.additional_inline (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_with_pip_requirements_in_docker.data.aws_iam_policy_document.assume_role (expand)" -> "[root] module.package_with_pip_requirements_in_docker.local.create_role (expand)"
		"[root] module.package_with_pip_requirements_in_docker.data.aws_iam_policy_document.assume_role (expand)" -> "[root] module.package_with_pip_requirements_in_docker.local.trusted_entities_principals (expand)"
		"[root] module.package_with_pip_requirements_in_docker.data.aws_iam_policy_document.assume_role (expand)" -> "[root] module.package_with_pip_requirements_in_docker.local.trusted_entities_services (expand)"
		"[root] module.package_with_pip_requirements_in_docker.data.aws_iam_policy_document.assume_role (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.assume_role_policy_statements (expand)"
		"[root] module.package_with_pip_requirements_in_docker.data.aws_iam_policy_document.assume_role (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_with_pip_requirements_in_docker.data.aws_iam_policy_document.async (expand)" -> "[root] module.package_with_pip_requirements_in_docker.local.create_role (expand)"
		"[root] module.package_with_pip_requirements_in_docker.data.aws_iam_policy_document.async (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.attach_async_event_policy (expand)"
		"[root] module.package_with_pip_requirements_in_docker.data.aws_iam_policy_document.async (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.destination_on_failure (expand)"
		"[root] module.package_with_pip_requirements_in_docker.data.aws_iam_policy_document.async (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.destination_on_success (expand)"
		"[root] module.package_with_pip_requirements_in_docker.data.aws_iam_policy_document.async (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_with_pip_requirements_in_docker.data.aws_iam_policy_document.dead_letter (expand)" -> "[root] module.package_with_pip_requirements_in_docker.local.create_role (expand)"
		"[root] module.package_with_pip_requirements_in_docker.data.aws_iam_policy_document.dead_letter (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.attach_dead_letter_policy (expand)"
		"[root] module.package_with_pip_requirements_in_docker.data.aws_iam_policy_document.dead_letter (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.dead_letter_target_arn (expand)"
		"[root] module.package_with_pip_requirements_in_docker.data.aws_iam_policy_document.dead_letter (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_with_pip_requirements_in_docker.data.aws_iam_policy_document.logs (expand)" -> "[root] module.package_with_pip_requirements_in_docker.local.log_group_arn (expand)"
		"[root] module.package_with_pip_requirements_in_docker.data.aws_iam_policy_document.logs (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.attach_cloudwatch_logs_policy (expand)"
		"[root] module.package_with_pip_requirements_in_docker.data.aws_partition.current (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.data.aws_partition.current (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.package_with_pip_requirements_in_docker.data.external.archive_prepare (expand)" -> "[root] module.package_with_pip_requirements_in_docker.local.python (expand)"
		"[root] module.package_with_pip_requirements_in_docker.data.external.archive_prepare (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.artifacts_dir (expand)"
		"[root] module.package_with_pip_requirements_in_docker.data.external.archive_prepare (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.build_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.data.external.archive_prepare (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.create (expand)"
		"[root] module.package_with_pip_requirements_in_docker.data.external.archive_prepare (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.create_package (expand)"
		"[root] module.package_with_pip_requirements_in_docker.data.external.archive_prepare (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.docker_build_root (expand)"
		"[root] module.package_with_pip_requirements_in_docker.data.external.archive_prepare (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.docker_file (expand)"
		"[root] module.package_with_pip_requirements_in_docker.data.external.archive_prepare (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.docker_image (expand)"
		"[root] module.package_with_pip_requirements_in_docker.data.external.archive_prepare (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.docker_pip_cache (expand)"
		"[root] module.package_with_pip_requirements_in_docker.data.external.archive_prepare (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.docker_with_ssh_agent (expand)"
		"[root] module.package_with_pip_requirements_in_docker.data.external.archive_prepare (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.hash_extra (expand)"
		"[root] module.package_with_pip_requirements_in_docker.data.external.archive_prepare (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.recreate_missing_package (expand)"
		"[root] module.package_with_pip_requirements_in_docker.data.external.archive_prepare (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.runtime (expand)"
		"[root] module.package_with_pip_requirements_in_docker.data.external.archive_prepare (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.source_path (expand)"
		"[root] module.package_with_pip_requirements_in_docker.data.external.archive_prepare (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/external\"]"
		"[root] module.package_with_pip_requirements_in_docker.local.archive_filename (expand)" -> "[root] module.package_with_pip_requirements_in_docker.data.external.archive_prepare (expand)"
		"[root] module.package_with_pip_requirements_in_docker.local.archive_was_missing (expand)" -> "[root] module.package_with_pip_requirements_in_docker.data.external.archive_prepare (expand)"
		"[root] module.package_with_pip_requirements_in_docker.local.create_role (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.create (expand)"
		"[root] module.package_with_pip_requirements_in_docker.local.create_role (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.create_function (expand)"
		"[root] module.package_with_pip_requirements_in_docker.local.create_role (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.create_layer (expand)"
		"[root] module.package_with_pip_requirements_in_docker.local.create_role (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.create_role (expand)"
		"[root] module.package_with_pip_requirements_in_docker.local.filename (expand)" -> "[root] module.package_with_pip_requirements_in_docker.local.archive_filename (expand)"
		"[root] module.package_with_pip_requirements_in_docker.local.filename (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.local_existing_package (expand)"
		"[root] module.package_with_pip_requirements_in_docker.local.filename (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.store_on_s3 (expand)"
		"[root] module.package_with_pip_requirements_in_docker.local.log_group_arn (expand)" -> "[root] module.package_with_pip_requirements_in_docker.data.aws_arn.log_group_arn (expand)"
		"[root] module.package_with_pip_requirements_in_docker.local.log_group_arn_regional (expand)" -> "[root] module.package_with_pip_requirements_in_docker.aws_cloudwatch_log_group.lambda (expand)"
		"[root] module.package_with_pip_requirements_in_docker.local.log_group_arn_regional (expand)" -> "[root] module.package_with_pip_requirements_in_docker.data.aws_cloudwatch_log_group.lambda (expand)"
		"[root] module.package_with_pip_requirements_in_docker.local.log_group_name (expand)" -> "[root] module.package_with_pip_requirements_in_docker.aws_cloudwatch_log_group.lambda (expand)"
		"[root] module.package_with_pip_requirements_in_docker.local.log_group_name (expand)" -> "[root] module.package_with_pip_requirements_in_docker.data.aws_cloudwatch_log_group.lambda (expand)"
		"[root] module.package_with_pip_requirements_in_docker.local.python (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.local.qualifiers (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.create_current_version_async_event_config (expand)"
		"[root] module.package_with_pip_requirements_in_docker.local.qualifiers (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.create_unqualified_alias_async_event_config (expand)"
		"[root] module.package_with_pip_requirements_in_docker.local.role_name (expand)" -> "[root] module.package_with_pip_requirements_in_docker.local.create_role (expand)"
		"[root] module.package_with_pip_requirements_in_docker.local.role_name (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.function_name (expand)"
		"[root] module.package_with_pip_requirements_in_docker.local.role_name (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.role_name (expand)"
		"[root] module.package_with_pip_requirements_in_docker.local.s3_bucket (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.s3_bucket (expand)"
		"[root] module.package_with_pip_requirements_in_docker.local.s3_bucket (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.s3_existing_package (expand)"
		"[root] module.package_with_pip_requirements_in_docker.local.s3_bucket (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.store_on_s3 (expand)"
		"[root] module.package_with_pip_requirements_in_docker.local.s3_key (expand)" -> "[root] module.package_with_pip_requirements_in_docker.local.archive_filename (expand)"
		"[root] module.package_with_pip_requirements_in_docker.local.s3_key (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.s3_existing_package (expand)"
		"[root] module.package_with_pip_requirements_in_docker.local.s3_key (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.s3_prefix (expand)"
		"[root] module.package_with_pip_requirements_in_docker.local.s3_key (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.store_on_s3 (expand)"
		"[root] module.package_with_pip_requirements_in_docker.local.s3_object_version (expand)" -> "[root] module.package_with_pip_requirements_in_docker.aws_s3_bucket_object.lambda_package (expand)"
		"[root] module.package_with_pip_requirements_in_docker.local.trusted_entities_principals (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.trusted_entities (expand)"
		"[root] module.package_with_pip_requirements_in_docker.local.trusted_entities_services (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.lambda_at_edge (expand)"
		"[root] module.package_with_pip_requirements_in_docker.local.trusted_entities_services (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.trusted_entities (expand)"
		"[root] module.package_with_pip_requirements_in_docker.local.was_missing (expand)" -> "[root] module.package_with_pip_requirements_in_docker.local.archive_was_missing (expand)"
		"[root] module.package_with_pip_requirements_in_docker.local.was_missing (expand)" -> "[root] module.package_with_pip_requirements_in_docker.var.local_existing_package (expand)"
		"[root] module.package_with_pip_requirements_in_docker.local_file.archive_plan (expand)" -> "[root] module.package_with_pip_requirements_in_docker.data.external.archive_prepare (expand)"
		"[root] module.package_with_pip_requirements_in_docker.local_file.archive_plan (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/local\"]"
		"[root] module.package_with_pip_requirements_in_docker.null_resource.archive (expand)" -> "[root] module.package_with_pip_requirements_in_docker.local_file.archive_plan (expand)"
		"[root] module.package_with_pip_requirements_in_docker.null_resource.archive (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/null\"]"
		"[root] module.package_with_pip_requirements_in_docker.null_resource.archive (expand)" -> "[root] provisioner.local-exec"
		"[root] module.package_with_pip_requirements_in_docker.output.lambda_cloudwatch_log_group_arn (expand)" -> "[root] module.package_with_pip_requirements_in_docker.local.log_group_arn (expand)"
		"[root] module.package_with_pip_requirements_in_docker.output.lambda_cloudwatch_log_group_name (expand)" -> "[root] module.package_with_pip_requirements_in_docker.local.log_group_name (expand)"
		"[root] module.package_with_pip_requirements_in_docker.output.lambda_event_source_mapping_function_arn (expand)" -> "[root] module.package_with_pip_requirements_in_docker.aws_lambda_event_source_mapping.this (expand)"
		"[root] module.package_with_pip_requirements_in_docker.output.lambda_event_source_mapping_state (expand)" -> "[root] module.package_with_pip_requirements_in_docker.aws_lambda_event_source_mapping.this (expand)"
		"[root] module.package_with_pip_requirements_in_docker.output.lambda_event_source_mapping_state_transition_reason (expand)" -> "[root] module.package_with_pip_requirements_in_docker.aws_lambda_event_source_mapping.this (expand)"
		"[root] module.package_with_pip_requirements_in_docker.output.lambda_event_source_mapping_uuid (expand)" -> "[root] module.package_with_pip_requirements_in_docker.aws_lambda_event_source_mapping.this (expand)"
		"[root] module.package_with_pip_requirements_in_docker.output.lambda_function_arn (expand)" -> "[root] module.package_with_pip_requirements_in_docker.aws_lambda_function.this (expand)"
		"[root] module.package_with_pip_requirements_in_docker.output.lambda_function_invoke_arn (expand)" -> "[root] module.package_with_pip_requirements_in_docker.aws_lambda_function.this (expand)"
		"[root] module.package_with_pip_requirements_in_docker.output.lambda_function_kms_key_arn (expand)" -> "[root] module.package_with_pip_requirements_in_docker.aws_lambda_function.this (expand)"
		"[root] module.package_with_pip_requirements_in_docker.output.lambda_function_last_modified (expand)" -> "[root] module.package_with_pip_requirements_in_docker.aws_lambda_function.this (expand)"
		"[root] module.package_with_pip_requirements_in_docker.output.lambda_function_name (expand)" -> "[root] module.package_with_pip_requirements_in_docker.aws_lambda_function.this (expand)"
		"[root] module.package_with_pip_requirements_in_docker.output.lambda_function_qualified_arn (expand)" -> "[root] module.package_with_pip_requirements_in_docker.aws_lambda_function.this (expand)"
		"[root] module.package_with_pip_requirements_in_docker.output.lambda_function_source_code_hash (expand)" -> "[root] module.package_with_pip_requirements_in_docker.aws_lambda_function.this (expand)"
		"[root] module.package_with_pip_requirements_in_docker.output.lambda_function_source_code_size (expand)" -> "[root] module.package_with_pip_requirements_in_docker.aws_lambda_function.this (expand)"
		"[root] module.package_with_pip_requirements_in_docker.output.lambda_function_version (expand)" -> "[root] module.package_with_pip_requirements_in_docker.aws_lambda_function.this (expand)"
		"[root] module.package_with_pip_requirements_in_docker.output.lambda_layer_arn (expand)" -> "[root] module.package_with_pip_requirements_in_docker.aws_lambda_layer_version.this (expand)"
		"[root] module.package_with_pip_requirements_in_docker.output.lambda_layer_created_date (expand)" -> "[root] module.package_with_pip_requirements_in_docker.aws_lambda_layer_version.this (expand)"
		"[root] module.package_with_pip_requirements_in_docker.output.lambda_layer_layer_arn (expand)" -> "[root] module.package_with_pip_requirements_in_docker.aws_lambda_layer_version.this (expand)"
		"[root] module.package_with_pip_requirements_in_docker.output.lambda_layer_source_code_size (expand)" -> "[root] module.package_with_pip_requirements_in_docker.aws_lambda_layer_version.this (expand)"
		"[root] module.package_with_pip_requirements_in_docker.output.lambda_layer_version (expand)" -> "[root] module.package_with_pip_requirements_in_docker.aws_lambda_layer_version.this (expand)"
		"[root] module.package_with_pip_requirements_in_docker.output.lambda_role_arn (expand)" -> "[root] module.package_with_pip_requirements_in_docker.aws_iam_role.lambda (expand)"
		"[root] module.package_with_pip_requirements_in_docker.output.lambda_role_name (expand)" -> "[root] module.package_with_pip_requirements_in_docker.aws_iam_role.lambda (expand)"
		"[root] module.package_with_pip_requirements_in_docker.output.lambda_role_unique_id (expand)" -> "[root] module.package_with_pip_requirements_in_docker.aws_iam_role.lambda (expand)"
		"[root] module.package_with_pip_requirements_in_docker.output.local_filename (expand)" -> "[root] module.package_with_pip_requirements_in_docker.local.filename (expand)"
		"[root] module.package_with_pip_requirements_in_docker.output.s3_object (expand)" -> "[root] module.package_with_pip_requirements_in_docker.local.s3_bucket (expand)"
		"[root] module.package_with_pip_requirements_in_docker.output.s3_object (expand)" -> "[root] module.package_with_pip_requirements_in_docker.local.s3_object_version (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.allowed_triggers (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.architectures (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.artifacts_dir (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.assume_role_policy_statements (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.attach_async_event_policy (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.attach_cloudwatch_logs_policy (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.attach_dead_letter_policy (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.attach_network_policy (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.attach_policies (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.attach_policy (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.attach_policy_json (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.attach_policy_jsons (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.attach_policy_statements (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.attach_tracing_policy (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.build_in_docker (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.cloudwatch_logs_kms_key_id (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.cloudwatch_logs_retention_in_days (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.cloudwatch_logs_tags (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.compatible_architectures (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.compatible_runtimes (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.create (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.create_async_event_config (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.create_current_version_allowed_triggers (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.create_current_version_async_event_config (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.create_function (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.create_layer (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.create_package (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.create_role (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.create_unqualified_alias_allowed_triggers (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.create_unqualified_alias_async_event_config (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.dead_letter_target_arn (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.description (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.destination_on_failure (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.destination_on_success (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.docker_build_root (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.docker_file (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.docker_image (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.docker_pip_cache (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.docker_with_ssh_agent (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.environment_variables (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.event_source_mapping (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.file_system_arn (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.file_system_local_mount_path (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.function_name (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.handler (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.hash_extra (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.ignore_source_code_hash (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.image_config_command (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.image_config_entry_point (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.image_config_working_directory (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.image_uri (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.kms_key_arn (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.lambda_at_edge (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.lambda_role (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.layer_name (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.layers (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.license_info (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.local_existing_package (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.maximum_event_age_in_seconds (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.maximum_retry_attempts (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.memory_size (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.number_of_policies (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.number_of_policy_jsons (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.package_type (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.policies (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.policy (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.policy_json (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.policy_jsons (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.policy_path (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.policy_statements (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.provisioned_concurrent_executions (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.publish (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.recreate_missing_package (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.reserved_concurrent_executions (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.role_description (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.role_force_detach_policies (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.role_name (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.role_path (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.role_permissions_boundary (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.role_tags (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.runtime (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.s3_acl (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.s3_bucket (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.s3_existing_package (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.s3_object_storage_class (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.s3_object_tags (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.s3_prefix (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.s3_server_side_encryption (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.source_path (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.store_on_s3 (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.tags (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.timeout (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.tracing_mode (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.trusted_entities (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.use_existing_cloudwatch_log_group (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.vpc_security_group_ids (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] module.package_with_pip_requirements_in_docker.var.vpc_subnet_ids (expand)" -> "[root] module.package_with_pip_requirements_in_docker (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.lambda_function_from_package.aws_iam_role_policy_attachment.additional_inline (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.lambda_function_from_package.aws_iam_role_policy_attachment.additional_json (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.lambda_function_from_package.aws_iam_role_policy_attachment.additional_jsons (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.lambda_function_from_package.aws_iam_role_policy_attachment.additional_many (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.lambda_function_from_package.aws_iam_role_policy_attachment.additional_one (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.lambda_function_from_package.aws_iam_role_policy_attachment.async (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.lambda_function_from_package.aws_iam_role_policy_attachment.dead_letter (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.lambda_function_from_package.aws_iam_role_policy_attachment.logs (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.lambda_function_from_package.aws_iam_role_policy_attachment.tracing (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.lambda_function_from_package.aws_iam_role_policy_attachment.vpc (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.lambda_function_from_package.aws_lambda_event_source_mapping.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.lambda_function_from_package.aws_lambda_function_event_invoke_config.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.lambda_function_from_package.aws_lambda_layer_version.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.lambda_function_from_package.aws_lambda_permission.current_version_triggers (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.lambda_function_from_package.aws_lambda_permission.unqualified_alias_triggers (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.lambda_function_from_package.aws_lambda_provisioned_concurrency_config.current_version (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.lambda_layer.aws_iam_role_policy_attachment.additional_inline (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.lambda_layer.aws_iam_role_policy_attachment.additional_json (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.lambda_layer.aws_iam_role_policy_attachment.additional_jsons (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.lambda_layer.aws_iam_role_policy_attachment.additional_many (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.lambda_layer.aws_iam_role_policy_attachment.additional_one (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.lambda_layer.aws_iam_role_policy_attachment.async (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.lambda_layer.aws_iam_role_policy_attachment.dead_letter (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.lambda_layer.aws_iam_role_policy_attachment.logs (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.lambda_layer.aws_iam_role_policy_attachment.tracing (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.lambda_layer.aws_iam_role_policy_attachment.vpc (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.lambda_layer.aws_lambda_event_source_mapping.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.lambda_layer.aws_lambda_function_event_invoke_config.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.lambda_layer.aws_lambda_permission.current_version_triggers (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.lambda_layer.aws_lambda_permission.unqualified_alias_triggers (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.lambda_layer.aws_lambda_provisioned_concurrency_config.current_version (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.lambda_layer_pip_requirements.aws_iam_role_policy_attachment.additional_inline (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.lambda_layer_pip_requirements.aws_iam_role_policy_attachment.additional_json (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.lambda_layer_pip_requirements.aws_iam_role_policy_attachment.additional_jsons (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.lambda_layer_pip_requirements.aws_iam_role_policy_attachment.additional_many (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.lambda_layer_pip_requirements.aws_iam_role_policy_attachment.additional_one (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.lambda_layer_pip_requirements.aws_iam_role_policy_attachment.async (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.lambda_layer_pip_requirements.aws_iam_role_policy_attachment.dead_letter (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.lambda_layer_pip_requirements.aws_iam_role_policy_attachment.logs (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.lambda_layer_pip_requirements.aws_iam_role_policy_attachment.tracing (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.lambda_layer_pip_requirements.aws_iam_role_policy_attachment.vpc (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.lambda_layer_pip_requirements.aws_lambda_event_source_mapping.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.lambda_layer_pip_requirements.aws_lambda_function_event_invoke_config.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.lambda_layer_pip_requirements.aws_lambda_layer_version.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.lambda_layer_pip_requirements.aws_lambda_permission.current_version_triggers (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.lambda_layer_pip_requirements.aws_lambda_permission.unqualified_alias_triggers (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.lambda_layer_pip_requirements.aws_lambda_provisioned_concurrency_config.current_version (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_dir.aws_iam_role_policy_attachment.additional_inline (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_dir.aws_iam_role_policy_attachment.additional_json (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_dir.aws_iam_role_policy_attachment.additional_jsons (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_dir.aws_iam_role_policy_attachment.additional_many (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_dir.aws_iam_role_policy_attachment.additional_one (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_dir.aws_iam_role_policy_attachment.async (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_dir.aws_iam_role_policy_attachment.dead_letter (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_dir.aws_iam_role_policy_attachment.logs (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_dir.aws_iam_role_policy_attachment.tracing (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_dir.aws_iam_role_policy_attachment.vpc (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_dir.aws_lambda_event_source_mapping.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_dir.aws_lambda_function_event_invoke_config.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_dir.aws_lambda_layer_version.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_dir.aws_lambda_permission.current_version_triggers (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_dir.aws_lambda_permission.unqualified_alias_triggers (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_dir.aws_lambda_provisioned_concurrency_config.current_version (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_dir_pip_dir.aws_iam_role_policy_attachment.additional_inline (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_dir_pip_dir.aws_iam_role_policy_attachment.additional_json (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_dir_pip_dir.aws_iam_role_policy_attachment.additional_jsons (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_dir_pip_dir.aws_iam_role_policy_attachment.additional_many (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_dir_pip_dir.aws_iam_role_policy_attachment.additional_one (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_dir_pip_dir.aws_iam_role_policy_attachment.async (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_dir_pip_dir.aws_iam_role_policy_attachment.dead_letter (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_dir_pip_dir.aws_iam_role_policy_attachment.logs (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_dir_pip_dir.aws_iam_role_policy_attachment.tracing (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_dir_pip_dir.aws_iam_role_policy_attachment.vpc (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_dir_pip_dir.aws_lambda_event_source_mapping.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_dir_pip_dir.aws_lambda_function_event_invoke_config.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_dir_pip_dir.aws_lambda_layer_version.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_dir_pip_dir.aws_lambda_permission.current_version_triggers (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_dir_pip_dir.aws_lambda_permission.unqualified_alias_triggers (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_dir_pip_dir.aws_lambda_provisioned_concurrency_config.current_version (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_dir_without_pip_install.aws_iam_role_policy_attachment.additional_inline (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_dir_without_pip_install.aws_iam_role_policy_attachment.additional_json (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_dir_without_pip_install.aws_iam_role_policy_attachment.additional_jsons (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_dir_without_pip_install.aws_iam_role_policy_attachment.additional_many (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_dir_without_pip_install.aws_iam_role_policy_attachment.additional_one (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_dir_without_pip_install.aws_iam_role_policy_attachment.async (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_dir_without_pip_install.aws_iam_role_policy_attachment.dead_letter (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_dir_without_pip_install.aws_iam_role_policy_attachment.logs (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_dir_without_pip_install.aws_iam_role_policy_attachment.tracing (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_dir_without_pip_install.aws_iam_role_policy_attachment.vpc (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_dir_without_pip_install.aws_lambda_event_source_mapping.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_dir_without_pip_install.aws_lambda_function_event_invoke_config.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_dir_without_pip_install.aws_lambda_layer_version.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_dir_without_pip_install.aws_lambda_permission.current_version_triggers (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_dir_without_pip_install.aws_lambda_permission.unqualified_alias_triggers (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_dir_without_pip_install.aws_lambda_provisioned_concurrency_config.current_version (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_file.aws_iam_role_policy_attachment.additional_inline (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_file.aws_iam_role_policy_attachment.additional_json (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_file.aws_iam_role_policy_attachment.additional_jsons (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_file.aws_iam_role_policy_attachment.additional_many (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_file.aws_iam_role_policy_attachment.additional_one (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_file.aws_iam_role_policy_attachment.async (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_file.aws_iam_role_policy_attachment.dead_letter (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_file.aws_iam_role_policy_attachment.logs (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_file.aws_iam_role_policy_attachment.tracing (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_file.aws_iam_role_policy_attachment.vpc (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_file.aws_lambda_event_source_mapping.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_file.aws_lambda_function_event_invoke_config.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_file.aws_lambda_layer_version.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_file.aws_lambda_permission.current_version_triggers (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_file.aws_lambda_permission.unqualified_alias_triggers (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_file.aws_lambda_provisioned_concurrency_config.current_version (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_file_with_pip_requirements.aws_iam_role_policy_attachment.additional_inline (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_file_with_pip_requirements.aws_iam_role_policy_attachment.additional_json (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_file_with_pip_requirements.aws_iam_role_policy_attachment.additional_jsons (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_file_with_pip_requirements.aws_iam_role_policy_attachment.additional_many (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_file_with_pip_requirements.aws_iam_role_policy_attachment.additional_one (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_file_with_pip_requirements.aws_iam_role_policy_attachment.async (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_file_with_pip_requirements.aws_iam_role_policy_attachment.dead_letter (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_file_with_pip_requirements.aws_iam_role_policy_attachment.logs (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_file_with_pip_requirements.aws_iam_role_policy_attachment.tracing (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_file_with_pip_requirements.aws_iam_role_policy_attachment.vpc (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_file_with_pip_requirements.aws_lambda_event_source_mapping.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_file_with_pip_requirements.aws_lambda_function_event_invoke_config.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_file_with_pip_requirements.aws_lambda_layer_version.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_file_with_pip_requirements.aws_lambda_permission.current_version_triggers (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_file_with_pip_requirements.aws_lambda_permission.unqualified_alias_triggers (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_file_with_pip_requirements.aws_lambda_provisioned_concurrency_config.current_version (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_with_commands_and_patterns.aws_iam_role_policy_attachment.additional_inline (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_with_commands_and_patterns.aws_iam_role_policy_attachment.additional_json (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_with_commands_and_patterns.aws_iam_role_policy_attachment.additional_jsons (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_with_commands_and_patterns.aws_iam_role_policy_attachment.additional_many (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_with_commands_and_patterns.aws_iam_role_policy_attachment.additional_one (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_with_commands_and_patterns.aws_iam_role_policy_attachment.async (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_with_commands_and_patterns.aws_iam_role_policy_attachment.dead_letter (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_with_commands_and_patterns.aws_iam_role_policy_attachment.logs (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_with_commands_and_patterns.aws_iam_role_policy_attachment.tracing (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_with_commands_and_patterns.aws_iam_role_policy_attachment.vpc (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_with_commands_and_patterns.aws_lambda_event_source_mapping.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_with_commands_and_patterns.aws_lambda_function_event_invoke_config.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_with_commands_and_patterns.aws_lambda_layer_version.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_with_commands_and_patterns.aws_lambda_permission.current_version_triggers (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_with_commands_and_patterns.aws_lambda_permission.unqualified_alias_triggers (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_with_commands_and_patterns.aws_lambda_provisioned_concurrency_config.current_version (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_with_docker.aws_iam_role_policy_attachment.additional_inline (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_with_docker.aws_iam_role_policy_attachment.additional_json (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_with_docker.aws_iam_role_policy_attachment.additional_jsons (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_with_docker.aws_iam_role_policy_attachment.additional_many (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_with_docker.aws_iam_role_policy_attachment.additional_one (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_with_docker.aws_iam_role_policy_attachment.async (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_with_docker.aws_iam_role_policy_attachment.dead_letter (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_with_docker.aws_iam_role_policy_attachment.logs (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_with_docker.aws_iam_role_policy_attachment.tracing (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_with_docker.aws_iam_role_policy_attachment.vpc (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_with_docker.aws_lambda_event_source_mapping.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_with_docker.aws_lambda_function_event_invoke_config.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_with_docker.aws_lambda_layer_version.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_with_docker.aws_lambda_permission.current_version_triggers (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_with_docker.aws_lambda_permission.unqualified_alias_triggers (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_with_docker.aws_lambda_provisioned_concurrency_config.current_version (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_with_patterns.aws_iam_role_policy_attachment.additional_inline (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_with_patterns.aws_iam_role_policy_attachment.additional_json (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_with_patterns.aws_iam_role_policy_attachment.additional_jsons (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_with_patterns.aws_iam_role_policy_attachment.additional_many (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_with_patterns.aws_iam_role_policy_attachment.additional_one (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_with_patterns.aws_iam_role_policy_attachment.async (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_with_patterns.aws_iam_role_policy_attachment.dead_letter (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_with_patterns.aws_iam_role_policy_attachment.logs (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_with_patterns.aws_iam_role_policy_attachment.tracing (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_with_patterns.aws_iam_role_policy_attachment.vpc (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_with_patterns.aws_lambda_event_source_mapping.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_with_patterns.aws_lambda_function_event_invoke_config.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_with_patterns.aws_lambda_layer_version.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_with_patterns.aws_lambda_permission.current_version_triggers (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_with_patterns.aws_lambda_permission.unqualified_alias_triggers (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_with_patterns.aws_lambda_provisioned_concurrency_config.current_version (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_with_pip_requirements_in_docker.aws_iam_role_policy_attachment.additional_inline (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_with_pip_requirements_in_docker.aws_iam_role_policy_attachment.additional_json (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_with_pip_requirements_in_docker.aws_iam_role_policy_attachment.additional_jsons (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_with_pip_requirements_in_docker.aws_iam_role_policy_attachment.additional_many (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_with_pip_requirements_in_docker.aws_iam_role_policy_attachment.additional_one (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_with_pip_requirements_in_docker.aws_iam_role_policy_attachment.async (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_with_pip_requirements_in_docker.aws_iam_role_policy_attachment.dead_letter (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_with_pip_requirements_in_docker.aws_iam_role_policy_attachment.logs (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_with_pip_requirements_in_docker.aws_iam_role_policy_attachment.tracing (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_with_pip_requirements_in_docker.aws_iam_role_policy_attachment.vpc (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_with_pip_requirements_in_docker.aws_lambda_event_source_mapping.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_with_pip_requirements_in_docker.aws_lambda_function_event_invoke_config.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_with_pip_requirements_in_docker.aws_lambda_layer_version.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_with_pip_requirements_in_docker.aws_lambda_permission.current_version_triggers (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_with_pip_requirements_in_docker.aws_lambda_permission.unqualified_alias_triggers (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.package_with_pip_requirements_in_docker.aws_lambda_provisioned_concurrency_config.current_version (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/external\"] (close)" -> "[root] module.lambda_function_from_package.data.external.archive_prepare (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/external\"] (close)" -> "[root] module.lambda_layer.data.external.archive_prepare (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/external\"] (close)" -> "[root] module.lambda_layer_pip_requirements.data.external.archive_prepare (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/external\"] (close)" -> "[root] module.package_dir.data.external.archive_prepare (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/external\"] (close)" -> "[root] module.package_dir_pip_dir.data.external.archive_prepare (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/external\"] (close)" -> "[root] module.package_dir_without_pip_install.data.external.archive_prepare (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/external\"] (close)" -> "[root] module.package_file.data.external.archive_prepare (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/external\"] (close)" -> "[root] module.package_file_with_pip_requirements.data.external.archive_prepare (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/external\"] (close)" -> "[root] module.package_with_commands_and_patterns.data.external.archive_prepare (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/external\"] (close)" -> "[root] module.package_with_docker.data.external.archive_prepare (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/external\"] (close)" -> "[root] module.package_with_patterns.data.external.archive_prepare (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/external\"] (close)" -> "[root] module.package_with_pip_requirements_in_docker.data.external.archive_prepare (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/local\"] (close)" -> "[root] module.lambda_function_from_package.local_file.archive_plan (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/local\"] (close)" -> "[root] module.lambda_layer.local_file.archive_plan (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/local\"] (close)" -> "[root] module.lambda_layer_pip_requirements.local_file.archive_plan (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/local\"] (close)" -> "[root] module.package_dir.local_file.archive_plan (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/local\"] (close)" -> "[root] module.package_dir_pip_dir.local_file.archive_plan (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/local\"] (close)" -> "[root] module.package_dir_without_pip_install.local_file.archive_plan (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/local\"] (close)" -> "[root] module.package_file.local_file.archive_plan (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/local\"] (close)" -> "[root] module.package_file_with_pip_requirements.local_file.archive_plan (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/local\"] (close)" -> "[root] module.package_with_commands_and_patterns.local_file.archive_plan (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/local\"] (close)" -> "[root] module.package_with_docker.local_file.archive_plan (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/local\"] (close)" -> "[root] module.package_with_patterns.local_file.archive_plan (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/local\"] (close)" -> "[root] module.package_with_pip_requirements_in_docker.local_file.archive_plan (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/null\"] (close)" -> "[root] module.lambda_function_from_package.null_resource.archive (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/null\"] (close)" -> "[root] module.lambda_layer.null_resource.archive (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/null\"] (close)" -> "[root] module.lambda_layer_pip_requirements.null_resource.archive (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/null\"] (close)" -> "[root] module.package_dir.null_resource.archive (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/null\"] (close)" -> "[root] module.package_dir_pip_dir.null_resource.archive (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/null\"] (close)" -> "[root] module.package_dir_without_pip_install.null_resource.archive (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/null\"] (close)" -> "[root] module.package_file.null_resource.archive (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/null\"] (close)" -> "[root] module.package_file_with_pip_requirements.null_resource.archive (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/null\"] (close)" -> "[root] module.package_with_commands_and_patterns.null_resource.archive (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/null\"] (close)" -> "[root] module.package_with_docker.null_resource.archive (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/null\"] (close)" -> "[root] module.package_with_patterns.null_resource.archive (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/null\"] (close)" -> "[root] module.package_with_pip_requirements_in_docker.null_resource.archive (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/random\"] (close)" -> "[root] random_pet.this (expand)"
		"[root] random_pet.this (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/random\"]"
		"[root] root" -> "[root] meta.count-boundary (EachMode fixup)"
		"[root] root" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)"
		"[root] root" -> "[root] provider[\"registry.terraform.io/hashicorp/external\"] (close)"
		"[root] root" -> "[root] provider[\"registry.terraform.io/hashicorp/local\"] (close)"
		"[root] root" -> "[root] provider[\"registry.terraform.io/hashicorp/null\"] (close)"
		"[root] root" -> "[root] provider[\"registry.terraform.io/hashicorp/random\"] (close)"
	}
}

